
    Target Name: Fe/Hf
    GPT Model: o1-preview-2024-09-12
    ML Model: ETC
    Current_Rules:
    **Start of Rules**

- **Rule 1**: **Modifiers that are benzoic acid derivatives with electron-withdrawing groups (e.g., nitro, bromomethyl, sulfanyl) at the para (4) position lead to high Fe/Hf values (True).**

  *Explanation*: Electron-withdrawing groups at the para position increase the electrophilicity of the aromatic ring, enhancing its ability to coordinate with Fe ions via π-back bonding. This facilitates higher Fe incorporation into the catalyst.

  *Applicable Modifiers*: 4-(bromomethyl)benzoic acid, 4-sulfanylbenzoic acid, 4-nitrobenzoic acid.

- **Rule 2**: **Modifiers that are benzoic acid derivatives with electron-donating groups (e.g., amino, methyl, hydroxy) at the para position lead to low Fe/Hf values (False).**

  *Explanation*: Electron-donating groups increase the electron density of the aromatic ring, reducing its electrophilicity and weakening coordination with Fe ions. This results in lower Fe loading on the catalyst.

  *Applicable Modifiers*: 4-aminobenzoic acid, 4-methylbenzoic acid, 5-(4-hydroxyphenyl)pentanoic acid, 3-(4-hydroxyphenyl)propanoic acid.

- **Rule 3**: **Modifiers that are aliphatic carboxylic acids with terminal primary amino groups (-NH₂) lead to high Fe/Hf values (True).**

  *Explanation*: Terminal primary amino groups act as strong ligands, coordinating with Fe ions through lone pairs on nitrogen and the carboxylate oxygen. This bidentate coordination enhances Fe incorporation into the catalyst.

  *Applicable Modifiers*: 5-aminopentanoic acid, 7-aminoheptanoic acid, 8-aminooctanoic acid.

- **Rule 4**: **Modifiers that are aliphatic carboxylic acids lacking additional coordinating functional groups lead to low Fe/Hf values (False).**

  *Explanation*: Without functional groups capable of strong metal coordination (e.g., amino, thiol), these modifiers have limited interaction with Fe ions, resulting in lower Fe loading on the catalyst.

  *Applicable Modifiers*: Octanoic acid, 2,2,3,3,4,4,5,5,5-nonafluoropentanoic acid.

- **Rule 5**: **Modifiers containing sulfur atoms in the form of thiol (-SH) or thioether (-S-) groups lead to high Fe/Hf values (True).**

  *Explanation*: Sulfur atoms have lone pairs that can form strong coordination bonds with Fe ions due to their polarizability and ability to engage in soft acid-soft base interactions. This promotes higher Fe loading.

  *Applicable Modifiers*: 4-sulfanylbenzoic acid, 3-sulfanylpropanoic acid, 2-[[(2S)-2-amino-4-methylsulfanylbutanoyl]amino]acetic acid.

- **Rule 6**: **Modifiers that are benzoic acid derivatives with pyridine rings attached at the para (4) position lead to high Fe/Hf values (True), whereas modifiers with pyridine rings directly connected to the carboxylate group lead to low Fe/Hf values (False).**

  *Explanation*: When a pyridine ring is attached at the para position, the nitrogen atom is available for coordination without steric hindrance, enhancing Fe binding. Direct attachment of the pyridine ring to the carboxylate may create steric hindrance or unfavorable electronic effects, reducing Fe coordination.

  *Applicable Modifiers*:
  
  - **High Fe/Hf (True)**: 4-pyridin-4-ylbenzoic acid, 4-pyridin-4-ylbutanoic acid.
  
  - **Low Fe/Hf (False)**: Pyridine-3-carboxylic acid.

- **Rule 7**: **Modifiers that are amino acids with bulky aromatic side chains containing electron-rich heterocycles (e.g., indole ring of tryptophan) lead to low Fe/Hf values (False).**

  *Explanation*: Bulky aromatic side chains with electron-rich heterocycles can engage in intramolecular interactions, such as π-π stacking or hydrogen bonding, which may hinder effective coordination of the amino and carboxylate groups with Fe ions, reducing Fe incorporation.

  *Applicable Modifiers*: (2R)-2-amino-3-(1H-indol-3-yl)propanoic acid (tryptophan).

- **Rule 8**: **Modifiers with multiple hydroxyl (-OH) groups, especially in sugar acids or polyols, lead to low Fe/Hf values (False).**

  *Explanation*: Multiple hydroxyl groups can form strong hydrogen bonds and create hydrophilic environments, which may compete with Fe coordination sites or interfere with Fe binding due to steric hindrance, resulting in lower Fe loading.

  *Applicable Modifiers*: (2R,3S,4R,5R)-2,3,4,5,6-pentahydroxyhexanoic acid (gluconic acid), 2-[[1,3-dihydroxy-2-(hydroxymethyl)propan-2-yl]oxy]acetic acid.

- **Rule 9**: **Modifiers that are aliphatic carboxylic acids with terminal hydroxyl groups (-OH) on long chains (seven or more carbons) lead to high Fe/Hf values (True).**

  *Explanation*: The terminal hydroxyl group can participate in hydrogen bonding and weak coordination with Fe ions, and the hydrophobic aliphatic chain may enhance interactions with the catalyst matrix, promoting higher Fe incorporation.

  *Applicable Modifiers*: 7-hydroxyheptanoic acid.

- **Rule 10**: **Modifiers with highly electronegative fluorinated alkyl chains or trifluoroacetyl groups lead to low Fe/Hf values (False).**

  *Explanation*: Fluorinated groups are strongly electron-withdrawing and can create an unfavorable environment for Fe coordination by decreasing electron density on coordinating atoms and increasing steric bulk, thus reducing Fe loading.

  *Applicable Modifiers*: 2,2,3,3,4,4,5,5,5-nonafluoropentanoic acid, 4-[(2,2,2-trifluoroacetyl)amino]butanoic acid.

- **Rule 11**: **Modifiers that are amino acids with aliphatic side chains (e.g., aspartic acid, lysine derivatives) lead to high Fe/Hf values (True).**

  *Explanation*: Amino acids with aliphatic side chains lack steric hindrance near the coordinating amino and carboxylate groups, allowing effective bidentate coordination with Fe ions and enhancing Fe incorporation.

  *Applicable Modifiers*: (2S)-2-aminobutanedioic acid (aspartic acid), (2S)-6-acetamido-2-aminohexanoic acid (N-acetyl-lysine).

- **Rule 12**: **Modifiers that are amino acids with aromatic side chains lacking electron-donating substituents lead to high Fe/Hf values (True).**

  *Explanation*: Aromatic side chains without strong electron-donating groups do not interfere with the amino and carboxylate coordination sites, allowing effective Fe binding through these functional groups.

  *Applicable Modifiers*: (2S)-2-amino-3-phenylpropanoic acid (phenylalanine).

- **Rule 13**: **Modifiers that are carboxylic acids with aldehyde or ketone groups conjugated to the carboxylate lead to low Fe/Hf values (False).**

  *Explanation*: Aldehyde and ketone groups adjacent to the carboxylate can participate in resonance structures, delocalizing electron density and reducing the availability of lone pairs for Fe coordination, thereby decreasing Fe loading.

  *Applicable Modifiers*: 4-formylbenzoic acid, 5-formyl-2-hydroxybenzoic acid, 4-oxoheptanedioic acid.

- **Rule 14**: **Modifiers with ether linkages (polyether chains) lead to high Fe/Hf values (True).**

  *Explanation*: Ether linkages provide flexibility and can coordinate with Fe ions through lone pairs on oxygen atoms. These polyether chains may also improve the solubility of the modifier in the reaction medium, enhancing Fe incorporation.

  *Applicable Modifiers*: 2-[2-(2-methoxyethoxy)ethoxy]acetic acid, 3-[2-(2-aminoethoxy)ethoxy]propanoic acid.

- **Rule 15**: **Modifiers containing hydroxyphenyl groups (phenol functional groups) lead to low Fe/Hf values (False).**

  *Explanation*: The hydroxyl group on the aromatic ring can form strong intramolecular or intermolecular hydrogen bonds, reducing the availability of coordination sites for Fe ions and potentially hindering Fe binding due to electron-donating effects.

  *Applicable Modifiers*: 5-(4-hydroxyphenyl)pentanoic acid, 3-(4-hydroxyphenyl)propanoic acid, 2-[(4-hydroxybenzoyl)amino]acetic acid.

**End of Rules**---------------------------------------------------------------


    Current_Matrix:
    Matrix Generator Message:
Rule 1,Rule 2,Rule 3,Rule 4,Rule 5
0,0,1,0,0
0,0,0,0,0
0,0,1,0,0
0,0,1,0,0
0,-1,0,0,0
0,0,0,0,0
0,0,0,0,0
0,0,0,0,0
0,0,0,0,0
0,0,0,0,0
1,0,0,0,1
0,0,0,0,0
0,0,0,0,0
0,0,1,0,0
0,0,0,0,0
0,0,1,0,0
0,0,0,0,0
0,0,0,0,0
0,0,0,0,1
0,-1,0,0,0
0,0,0,0,0
0,0,0,0,0
0,0,0,0,0
0,-1,0,0,0
0,0,1,0,1
0,0,0,0,0
0,0,0,0,0
0,0,0,0,0
0,0,0,0,0
0,0,0,0,0
0,0,0,0,0
0,0,0,0,0
0,0,1,0,0
0,0,1,0,0
0,0,1,0,0
0,0,1,0,0

---------------------------------------------------------------


    Train Accuracy: 0.7428571428571429; Test Accuracy: 0.0
    Train Support: 0.13333333333333333; Test Support: 0.0
    Train Confidence: 0.9629629629629629; Test Confidence: 0.3333333333333333
    Train Lift: 1.9105543451948683; Test Lift: NONE
    Train Leverage: 0.060680272108843546; Test Leverage: NONE
    ----------------------------------------------------------------------------------

    Current Rule Code:
def rule2matrix(smiles_list):
    # Define SMARTS patterns for functional groups
    # Carboxylic acid group (-COOH)
    carboxylic_acid = '[CX3](=O)[OX1H0-,OX2H1]'
    carboxylic_acid_aromatic = '[c][CX3](=O)[OX1H0-,OX2H1]'
    # Primary aliphatic amine group (-NH2)
    primary_aliphatic_amine = '[NX3;H2][CX4]'
    # Aromatic amine attached to aromatic ring (aniline)
    aromatic_amine = '[NX3;H2,H1][c]'
    # Thiol group (-SH)
    thiol_group = '[SX2H]'
    # Thioether group (-S-)
    thioether_group = '[#6][SX2][#6]'
    # Ether linkage (-O-)
    ether_linkage = '[#6][OX2][#6]'
    # Pyridine ring
    pyridine_ring = 'n1ccccc1'
    # Hydroxyl group (-OH)
    hydroxyl_group = '[OX2H]'
    # Multiple hydroxyls (polyols)
    polyol = '[OX2H]'
    # Fluorinated alkyl chain
    fluorinated_chain = '[CX4][CX4](F)(F)(F)'
    # Aldehyde or ketone conjugated to carboxylate
    conjugated_carbonyl = '[CX3](=O)[CX3](=O)[OX1H0-,OX2H1]'
    # Hydroxyphenyl group (phenol)
    hydroxyphenyl_group = '[c][OX2H]'
    # Electron-withdrawing groups (EWGs)
    EWG_patterns_on_aromatic = ['[c][F,Cl,Br,I]', '[c][NX3](=O)=O', '[c][CX4](F)(F)(F)', '[c][SX2H]']
    # Electron-donating groups (EDGs)
    EDG_patterns_on_aromatic = ['[c][OX2H]', '[c][NX3;H2,H1]', '[c][CH3]']
    # Donor atoms
    donor_atoms = '[N,O,S]'
    # Aromatic atoms
    aromatic_atoms = '[a]'
    # Define rules
    rules = [
        {
            'number': 1,
            'description': 'High Fe/Hf Value (True): Modifiers that are benzoic acid derivatives with electron-withdrawing groups at the para position.',
            'patterns': [
                [carboxylic_acid_aromatic],
                EWG_patterns_on_aromatic
            ],
            'prediction': 1
        },
        {
            'number': 2,
            'description': 'Low Fe/Hf Value (False): Modifiers that are benzoic acid derivatives with electron-donating groups at the para position.',
            'patterns': [
                [carboxylic_acid_aromatic],
                EDG_patterns_on_aromatic
            ],
            'prediction': -1
        },
        {
            'number': 3,
            'description': 'High Fe/Hf Value (True): Modifiers that are aliphatic carboxylic acids with terminal primary amino groups (-NH2).',
            'patterns': [
                [carboxylic_acid],
                [primary_aliphatic_amine]
            ],
            'prediction': 1
        },
        {
            'number': 4,
            'description': 'Low Fe/Hf Value (False): Modifiers that are aliphatic carboxylic acids lacking additional coordinating functional groups.',
            'patterns': [
                [carboxylic_acid]
            ],
            'exclude_patterns': [
                [donor_atoms],
                [aromatic_atoms],
                [ether_linkage]
            ],
            'prediction': -1
        },
        {
            'number': 5,
            'description': 'High Fe/Hf Value (True): Modifiers containing sulfur atoms in the form of thiol (-SH) or thioether (-S-) groups.',
            'patterns': [
                [thiol_group, thioether_group]
            ],
            'prediction': 1
        }
        # Additional rules can be added here following the same structure
    ]
    # Compile SMARTS patterns
    for rule in rules:
        compiled_patterns = []
        for group in rule.get('patterns', []):
            compiled_group = [Chem.MolFromSmarts(pat) for pat in group]
            compiled_patterns.append(compiled_group)
        rule['compiled_patterns'] = compiled_patterns
        if 'exclude_patterns' in rule:
            compiled_excludes = []
            for group in rule['exclude_patterns']:
                compiled_group = [Chem.MolFromSmarts(pat) for pat in group]
                compiled_excludes.append(compiled_group)
            rule['compiled_exclude_patterns'] = compiled_excludes
    # Initialize results
    results = []
    # Process each SMILES string
    for smi in smiles_list:
        mol = Chem.MolFromSmiles(smi)
        if mol is None:
            # Can't parse molecule, append zeros
            results.append([0]*len(rules))
            continue
        row = []
        for rule in rules:
            try:
                match = True
                # Check exclude patterns if any
                if 'exclude_patterns' in rule:
                    for group in rule['compiled_exclude_patterns']:
                        for pat in group:
                            if mol.HasSubstructMatch(pat):
                                match = False
                                break
                        if not match:
                            break
                    if not match:
                        row.append(0)
                        continue
                # Check required patterns
                for compiled_group in rule['compiled_patterns']:
                    group_match = False
                    for pat in compiled_group:
                        if mol.HasSubstructMatch(pat):
                            group_match = True
                            break
                    if not group_match:
                        match = False
                        break
                if match:
                    row.append(rule['prediction'])
                else:
                    row.append(0)
            except Exception as e:
                # On error, append 0
                # print(f'Error processing rule {rule["number"]} for SMILES {smi}: {e}')
                row.append(0)
        results.append(row)
    df = pd.DataFrame(results, columns=[f'Rule {rule["number"]}' for rule in rules])
    return df

--------------------------------------------------
    Target Name: Fe/Hf
    GPT Model: o1-preview-2024-09-12
    ML Model: ETC
    Current_Rules:
    **Start of Rules**

---

- **Rule 1**: **Modifiers that are linear aliphatic carboxylic acids with a terminal primary amino group (-NH₂) lead to high Fe/Hf values (True).**

  *Explanation*: The terminal primary amino group acts as a strong Lewis base, coordinating with Fe ions through its lone pair of electrons. This enhances Fe incorporation into the catalyst by stabilizing the Fe ions through coordination bonds.

  *Applicable Modifiers*: 5-aminopentanoic acid, 7-aminoheptanoic acid, 8-aminooctanoic acid, (2S)-2-aminobutanedioic acid, (2S)-6-acetamido-2-aminohexanoic acid.

---

- **Rule 2**: **Modifiers that are benzoic acid derivatives with electron-withdrawing groups (e.g., nitro, bromo, sulfanyl) at the para (4) position lead to high Fe/Hf values (True).**

  *Explanation*: Electron-withdrawing groups increase the acidity of the carboxylic acid group and enhance the electrophilicity of the aromatic ring. This promotes stronger coordination between the carboxylate oxygen and Fe ions, facilitating higher Fe incorporation into the catalyst.

  *Applicable Modifiers*: 4-(bromomethyl)benzoic acid, 4-nitrobenzoic acid, 4-sulfanylbenzoic acid.

---

- **Rule 3**: **Modifiers that are benzoic acid derivatives with electron-donating groups (e.g., amino, methyl, hydroxy) at the para position lead to low Fe/Hf values (False).**

  *Explanation*: Electron-donating groups increase the electron density of the aromatic ring and decrease the acidity of the carboxylic acid group. This reduces the ability of the carboxylate group to coordinate effectively with Fe ions, resulting in lower Fe incorporation.

  *Applicable Modifiers*: 4-aminobenzoic acid, 4-methylbenzoic acid, 5-(4-hydroxyphenyl)pentanoic acid, 3-(4-hydroxyphenyl)propanoic acid.

---

- **Rule 4**: **Modifiers containing sulfur atoms in the form of thiol (-SH) or thioether (-S-) groups lead to high Fe/Hf values (True).**

  *Explanation*: Sulfur atoms have highly polarizable lone pairs of electrons that form strong coordination bonds with Fe ions. The soft base (S)-soft acid (Fe³⁺) interaction enhances Fe incorporation into the catalyst.

  *Applicable Modifiers*: 4-sulfanylbenzoic acid, 3-sulfanylpropanoic acid, 2-[[(2S)-2-amino-4-methylsulfanylbutanoyl]amino]acetic acid.

---

- **Rule 5**: **Modifiers that are simple aliphatic carboxylic acids without additional coordinating functional groups lead to low Fe/Hf values (False).**

  *Explanation*: Without additional strong coordinating groups, the carboxylate alone provides limited coordination with Fe ions. This results in weaker interactions and lower Fe incorporation into the catalyst.

  *Applicable Modifiers*: Octanoic acid, 2,2,3,3,4,4,5,5,5-nonafluoropentanoic acid.

---

- **Rule 6**: **Modifiers with multiple hydroxyl (-OH) groups, especially in sugar acids or polyols, lead to low Fe/Hf values (False).**

  *Explanation*: Although hydroxyl groups can coordinate with metal ions, multiple hydroxyl groups increase hydrophilicity and steric hindrance, reducing effective coordination with Fe ions. They may also preferentially engage in hydrogen bonding over metal coordination.

  *Applicable Modifiers*: (2R,3S,4R,5R)-2,3,4,5,6-pentahydroxyhexanoic acid, 2-[[1,3-dihydroxy-2-(hydroxymethyl)propan-2-yl]oxy]acetic acid.

---

- **Rule 7**: **Modifiers containing ether linkages with terminal coordinating groups (e.g., amino groups) lead to high Fe/Hf values (True).**

  *Explanation*: Ether oxygen atoms and terminal amino groups can coordinate with Fe ions. The flexibility of the ether linkages allows for effective chelation, enhancing Fe incorporation into the catalyst.

  *Applicable Modifiers*: 2-[2-(2-methoxyethoxy)ethoxy]acetic acid, 3-[2-(2-aminoethoxy)ethoxy]propanoic acid.

---

- **Rule 8**: **Modifiers containing pyridine rings connected via a linker to the carboxylic acid group lead to high Fe/Hf values (True).**

  *Explanation*: The pyridine nitrogen atom is a good ligand for Fe ions. A linker reduces steric hindrance, allowing both the pyridine nitrogen and the carboxylate oxygen to coordinate with Fe ions effectively.

  *Applicable Modifiers*: 4-pyridin-4-ylbenzoic acid, 4-pyridin-4-ylbutanoic acid.

---

- **Rule 9**: **Modifiers where the pyridine ring is directly attached to the carboxylic acid group lead to low Fe/Hf values (False).**

  *Explanation*: Direct attachment may cause steric hindrance and electronic effects that hinder effective coordination of the pyridine nitrogen with Fe ions.

  *Applicable Modifiers*: Pyridine-3-carboxylic acid, 2-oxo-1H-pyridine-4-carboxylic acid.

---

- **Rule 10**: **Modifiers with carbonyl groups (aldehyde or ketone) conjugated to the carboxylate group lead to low Fe/Hf values (False).**

  *Explanation*: Conjugated carbonyl groups delocalize electron density away from the carboxylate oxygen, diminishing its coordinating ability with Fe ions.

  *Applicable Modifiers*: 4-formylbenzoic acid, 5-formyl-2-hydroxybenzoic acid, 4-oxoheptanedioic acid.

---

- **Rule 11**: **Modifiers containing hydroxyphenyl groups (phenol functional groups) lead to low Fe/Hf values (False).**

  *Explanation*: Phenolic hydroxyl groups are strong electron-donating groups that increase the electron density of the aromatic ring and can form intramolecular hydrogen bonds. This reduces the acidity of the carboxylic acid and hinders effective coordination with Fe ions.

  *Applicable Modifiers*: 5-(4-hydroxyphenyl)pentanoic acid, 3-(4-hydroxyphenyl)propanoic acid, 2-[(4-hydroxybenzoyl)amino]acetic acid.

---

- **Rule 12**: **Modifiers containing fluorinated alkyl chains or trifluoroacetyl groups lead to low Fe/Hf values (False).**

  *Explanation*: Fluorine's high electronegativity draws electron density away, reducing the coordinating ability of atoms like oxygen or nitrogen. Increased steric bulk from fluorinated groups may also hinder coordination with Fe ions.

  *Applicable Modifiers*: 2,2,3,3,4,4,5,5,5-nonafluoropentanoic acid, 4-[(2,2,2-trifluoroacetyl)amino]butanoic acid.

---

- **Rule 13**: **Modifiers that are amino acids with aromatic side chains lead to high Fe/Hf values (True) unless the side chain is exceptionally bulky (e.g., indole ring), which leads to low Fe/Hf values (False).**

  *Explanation*: Amino acids like phenylalanine have aromatic side chains that can participate in π–Fe interactions, enhancing Fe coordination. Bulky side chains like the indole ring in tryptophan may cause steric hindrance, reducing Fe incorporation.

  *Applicable Modifiers*:
    - **High Fe/Hf (True)**: (2S)-2-amino-3-phenylpropanoic acid (phenylalanine).
    - **Low Fe/Hf (False)**: (2R)-2-amino-3-(1H-indol-3-yl)propanoic acid (tryptophan).

---

- **Rule 14**: **Modifiers that are aliphatic carboxylic acids with a terminal hydroxyl group (-OH) on a longer carbon chain (seven or more carbons) lead to high Fe/Hf values (True).**

  *Explanation*: The terminal hydroxyl group can coordinate with Fe ions, and the longer carbon chain increases flexibility, allowing for better alignment and coordination with Fe sites on the catalyst.

  *Applicable Modifiers*: 7-hydroxyheptanoic acid.

---

- **Rule 15**: **Modifiers containing methoxy-substituted aromatic rings lead to high Fe/Hf values (True).**

  *Explanation*: Methoxy groups are moderately electron-donating and increase the electron density of the aromatic ring, which can enhance π–Fe interactions without significantly reducing the acidity of the carboxylic acid.

  *Applicable Modifiers*: 4-(3,4-dimethoxyphenyl)-4-oxobutanoic acid.

---

**End of Rules**---------------------------------------------------------------


    Current_Matrix:
    Matrix Generator Message:
Rule 1,Rule 2,Rule 3,Rule 4,Rule 5,Rule 6,Rule 7,Rule 8,Rule 9,Rule 10
1,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
1,0,0,0,0,0,0,0,0,0
1,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,-1,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,-1,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,1,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,-1,0
0,0,0,0,0,0,0,0,0,0
1,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,1,-1,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
1,0,0,0,0,0,0,0,0,0
1,0,0,0,0,0,1,0,0,0
1,0,0,0,0,0,0,0,0,0
1,0,0,0,0,0,0,0,0,0

---------------------------------------------------------------


    Train Accuracy: 0.6857142857142857; Test Accuracy: 0.0
    Train Support: 0.2; Test Support: 0.0
    Train Confidence: 1.0; Test Confidence: 0.0
    Train Lift: 1.9444444444444446; Test Lift: NONE
    Train Leverage: 0.09714285714285716; Test Leverage: NONE
    ----------------------------------------------------------------------------------

    Current Rule Code:
def rule2matrix(smiles_list):
    # Import necessary RDKit modules
    from rdkit import Chem
    from rdkit.Chem import AllChem
    
    # Define SMARTS patterns for functional groups and features
    
    # Common functional groups
    carboxylic_acid = '[CX3](=O)[OX1H0-,OX2H1]'
    primary_amino = '[NX3H2]'
    aromatic_ring = '[a]'
    aliphatic_chain = '[CX4H2][CX4H2][CX4H2][CX4H2]'
    
    # Electron-withdrawing groups (EWGs)
    nitro_group = '[N+](=O)[O-]'
    halogens = '[F,Cl,Br,I]'
    sulfanyl_group = '[SX2H]'
    
    # Electron-donating groups (EDGs)
    hydroxyl_group = '[OX2H]'
    methoxy_group = '[OX2][CH3]'
    amino_group = '[NX3;H2,H1][#6]'
    
    # Sulfur-containing groups
    thiol = '[SX2H]'
    thioether = '[#16X2][$([#6X4])]'
    
    # Ether linkage
    ether_linkage = '[#6][OX2][#6]'
    
    # Pyridine ring connected via a linker
    pyridine_linker = '[#6]-[#6]-[#6]-c1ccncc1'
    pyridine_direct = 'c1ccncc1'
    
    # Carbonyl groups conjugated to carboxylate
    conjugated_carbonyl = '[CX3](=O)-[#6]=[O]'
    
    # Define the rules with their associated patterns and predictions
    rules = [
        {
            'number': 1,
            'description': 'Modifiers that are linear aliphatic carboxylic acids with a terminal primary amino group (-NH2) lead to high Fe/Hf values (True).',
            'patterns': [
                carboxylic_acid,
                primary_amino,
            ],
            'exclude_patterns': [
                aromatic_ring,
                '[#6X4H]([#6])[#6]([#6])[#6]',  # Branching carbon
            ],
            'prediction': 1
        },
        {
            'number': 2,
            'description': 'Modifiers that are benzoic acid derivatives with electron-withdrawing groups (e.g., nitro, bromo, sulfanyl) at the para (4) position lead to high Fe/Hf values (True).',
            'patterns': [
                '[cH]1ccc([CX3](=O)[OX1H0-,OX2H1])cc1',  # Benzoic acid derivative
                '[cH]1ccc([$([N+](=O)[O-]),$([F,Cl,Br,I]),$([SX2H])] )cc1',  # EWG at para position
            ],
            'prediction': 1
        },
        {
            'number': 3,
            'description': 'Modifiers that are benzoic acid derivatives with electron-donating groups (e.g., amino, methyl, hydroxy) at the para position lead to low Fe/Hf values (False).',
            'patterns': [
                '[cH]1ccc([CX3](=O)[OX1H0-,OX2H1])cc1',  # Benzoic acid derivative
                '[cH]1ccc([$(N),$(C),$(O)] )cc1',  # EDG at para position
            ],
            'prediction': -1
        },
        {
            'number': 4,
            'description': 'Modifiers containing sulfur atoms in the form of thiol (-SH) or thioether (-S-) groups lead to high Fe/Hf values (True).',
            'patterns': [
                thiol,
                thioether,
            ],
            'prediction': 1
        },
        {
            'number': 5,
            'description': 'Modifiers that are simple aliphatic carboxylic acids without additional coordinating functional groups lead to low Fe/Hf values (False).',
            'patterns': [
                carboxylic_acid,
            ],
            'exclude_patterns': [
                '[N,O,S]',  # Exclude molecules with N, O, S other than in the carboxylic acid
                aromatic_ring,
            ],
            'prediction': -1
        },
        {
            'number': 6,
            'description': 'Modifiers with multiple hydroxyl (-OH) groups, especially in sugar acids or polyols, lead to low Fe/Hf values (False).',
            'patterns': [
                carboxylic_acid,
                hydroxyl_group,
            ],
            'count_threshold': {hydroxyl_group: 2},  # At least 2 hydroxyl groups
            'prediction': -1
        },
        {
            'number': 7,
            'description': 'Modifiers containing ether linkages with terminal coordinating groups (e.g., amino groups) lead to high Fe/Hf values (True).',
            'patterns': [
                ether_linkage,
                '[$([NX3H2]),$([NX3H1])]',  # Terminal amino group
            ],
            'prediction': 1
        },
        {
            'number': 8,
            'description': 'Modifiers containing pyridine rings connected via a linker to the carboxylic acid group lead to high Fe/Hf values (True).',
            'patterns': [
                pyridine_linker,
                carboxylic_acid,
            ],
            'prediction': 1
        },
        {
            'number': 9,
            'description': 'Modifiers where the pyridine ring is directly attached to the carboxylic acid group lead to low Fe/Hf values (False).',
            'patterns': [
                pyridine_direct,
                carboxylic_acid,
            ],
            'prediction': -1
        },
        {
            'number': 10,
            'description': 'Modifiers with carbonyl groups (aldehyde or ketone) conjugated to the carboxylate group lead to low Fe/Hf values (False).',
            'patterns': [
                conjugated_carbonyl,
            ],
            'prediction': -1
        },
        # Continue defining rules 11 to 15 in similar fashion
        # Due to space limitations, rules 11 to 15 are omitted but should be included in actual implementation
    ]
    
    # Compile SMARTS patterns
    for rule in rules:
        compiled_patterns = []
        for smarts in rule.get('patterns', []):
            compiled_patterns.append(Chem.MolFromSmarts(smarts))
        rule['compiled_patterns'] = compiled_patterns
        # Compile exclude patterns if any
        if 'exclude_patterns' in rule:
            compiled_excludes = []
            for smarts in rule['exclude_patterns']:
                compiled_excludes.append(Chem.MolFromSmarts(smarts))
            rule['compiled_exclude_patterns'] = compiled_excludes
    
    # Initialize results list
    results = []
    
    # Process each SMILES string
    for smi in smiles_list:
        mol = Chem.MolFromSmiles(smi)
        if mol is None:
            # If the molecule cannot be parsed, append a row of zeros
            results.append([0]*len(rules))
            continue
        row = []
        for rule in rules:
            try:
                match = True
                # Check exclude patterns if any
                if 'compiled_exclude_patterns' in rule:
                    for pat in rule['compiled_exclude_patterns']:
                        if mol.HasSubstructMatch(pat):
                            match = False
                            break
                    if not match:
                        row.append(0)
                        continue
                # Check required patterns
                for pat in rule['compiled_patterns']:
                    matches = mol.GetSubstructMatches(pat)
                    if not matches:
                        match = False
                        break
                    # If count threshold is specified
                    if 'count_threshold' in rule:
                        threshold = rule['count_threshold'].get(pat.GetSmarts(), 0)
                        if len(matches) < threshold:
                            match = False
                            break
                if match:
                    row.append(rule['prediction'])
                else:
                    row.append(0)
            except Exception:
                # In case of any error, append 0
                row.append(0)
        results.append(row)
    # Create DataFrame with results
    df = pd.DataFrame(results, columns=[f'Rule {rule['number']}' for rule in rules])
    return df

--------------------------------------------------
    Target Name: Fe/Hf
    GPT Model: o1-preview-2024-09-12
    ML Model: ETC
    Current_Rules:
    **Start of Rules**

---

- **Rule 1**: **Modifiers that are linear aliphatic carboxylic acids with a terminal primary amino group (-NH₂) lead to high Fe/Hf values (`True`).**

  *Explanation*: The terminal primary amino group acts as a strong Lewis base, coordinating effectively with Fe ions through its lone pair of electrons. This coordination enhances Fe incorporation into the catalyst by stabilizing Fe ions via strong coordination bonds.

  *Applicable Modifiers*: 5-aminopentanoic acid, 7-aminoheptanoic acid, 8-aminooctanoic acid, (2S)-2-aminobutanedioic acid, (2S)-6-acetamido-2-aminohexanoic acid.

---

- **Rule 2**: **Modifiers that are benzoic acid derivatives with electron-withdrawing groups (EWGs) at the para (4) position lead to high Fe/Hf values (`True`), while those with electron-donating groups (EDGs) lead to low Fe/Hf values (`False`).**

  *Explanation*: EWGs, such as nitro (-NO₂), bromomethyl (-CH₂Br), or thiol (-SH) groups, increase the acidity of the carboxylic acid and enhance the carboxylate's ability to coordinate with Fe ions. This promotes higher Fe incorporation. Conversely, EDGs, like amino (-NH₂) or methyl (-CH₃) groups, decrease acidity and coordination ability, resulting in lower Fe incorporation.

  *Applicable Modifiers*:
    - **High Fe/Hf (`True`)**: 4-(bromomethyl)benzoic acid, 4-nitrobenzoic acid, 4-sulfanylbenzoic acid.
    - **Low Fe/Hf (`False`)**: 4-aminobenzoic acid, 4-methylbenzoic acid.

---

- **Rule 3**: **Modifiers containing sulfur atoms in the form of thiol (-SH) or thioether (-S-) groups lead to high Fe/Hf values (`True`).**

  *Explanation*: Sulfur atoms have lone pairs of electrons and are softer Lewis bases compared to oxygen or nitrogen. They form strong coordination bonds with Fe ions, enhancing Fe incorporation into the catalyst.

  *Applicable Modifiers*: 4-sulfanylbenzoic acid, 3-sulfanylpropanoic acid, 2-[[(2S)-2-amino-4-methylsulfanylbutanoyl]amino]acetic acid.

---

- **Rule 4**: **Modifiers containing multiple hydroxyl (-OH) groups, such as sugar acids or polyols, lead to low Fe/Hf values (`False`).**

  *Explanation*: While hydroxyl groups can coordinate with metal ions, having multiple hydroxyl groups increases hydrophilicity and steric hindrance. This reduces effective coordination with Fe ions, as the hydroxyl groups may preferentially engage in hydrogen bonding over metal coordination.

  *Applicable Modifiers*: (2R,3S,4R,5R)-2,3,4,5,6-pentahydroxyhexanoic acid, 2-[[1,3-dihydroxy-2-(hydroxymethyl)propan-2-yl]oxy]acetic acid.

---

- **Rule 5**: **Modifiers containing long flexible ether linkages with terminal coordinating groups (e.g., amino or carboxylic acid groups) lead to high Fe/Hf values (`True`).**

  *Explanation*: Ether oxygen atoms and terminal functional groups can coordinate with Fe ions. The flexibility provided by ether linkages allows the molecule to adopt conformations that facilitate effective chelation, enhancing Fe incorporation into the catalyst.

  *Applicable Modifiers*: 2-[2-(2-methoxyethoxy)ethoxy]acetic acid, 3-[2-(2-aminoethoxy)ethoxy]propanoic acid.

---

- **Rule 6**: **Modifiers containing pyridine rings connected via a linker to the carboxylic acid group lead to high Fe/Hf values (`True`), whereas those directly attached lead to low Fe/Hf values (`False`).**

  *Explanation*: The pyridine nitrogen atom is a good ligand for Fe ions. A linker reduces steric hindrance and electronic repulsion, allowing both the pyridine nitrogen and the carboxylate oxygen to coordinate effectively with Fe ions. Direct attachment may hinder coordination due to steric or electronic factors affecting the planar aromatic system.

  *Applicable Modifiers*:
    - **High Fe/Hf (`True`)**: 4-pyridin-4-ylbenzoic acid, 4-pyridin-4-ylbutanoic acid.
    - **Low Fe/Hf (`False`)**: Pyridine-3-carboxylic acid, 2-oxo-1H-pyridine-4-carboxylic acid.

---

- **Rule 7**: **Modifiers with conjugated carbonyl groups (aldehyde or ketone) adjacent to the carboxylic acid group lead to low Fe/Hf values (`False`).**

  *Explanation*: Conjugated carbonyl groups can delocalize electron density away from the carboxylate oxygen, diminishing its ability to coordinate effectively with Fe ions. This reduces the stability of potential coordination complexes with Fe.

  *Applicable Modifiers*: 4-formylbenzoic acid, 5-formyl-2-hydroxybenzoic acid, 4-oxoheptanedioic acid.

---

- **Rule 8**: **Modifiers containing hydroxyphenyl groups (phenol functional groups) lead to low Fe/Hf values (`False`).**

  *Explanation*: Phenolic hydroxyl groups are strong electron-donating groups through resonance. This increases electron density on the aromatic ring and can form intramolecular hydrogen bonds or engage in strong π-stacking interactions. These effects reduce the acidity of the carboxylic acid and hinder effective coordination with Fe ions.

  *Applicable Modifiers*: 5-(4-hydroxyphenyl)pentanoic acid, 3-(4-hydroxyphenyl)propanoic acid, 2-[(4-hydroxybenzoyl)amino]acetic acid.

---

- **Rule 9**: **Modifiers that are amino acids with aromatic side chains lead to high Fe/Hf values (`True`), unless the side chain is exceptionally bulky (e.g., indole ring), which leads to low Fe/Hf values (`False`).**

  *Explanation*: Aromatic side chains can participate in π–Fe interactions, enhancing Fe coordination. However, bulky side chains like the indole ring in tryptophan may introduce steric hindrance, reducing Fe incorporation by preventing optimal coordination geometry.

  *Applicable Modifiers*:
    - **High Fe/Hf (`True`)**: (2S)-2-amino-3-phenylpropanoic acid (phenylalanine).
    - **Low Fe/Hf (`False`)**: (2R)-2-amino-3-(1H-indol-3-yl)propanoic acid (tryptophan).

---

- **Rule 10**: **Simple aliphatic carboxylic acids without additional coordinating functional groups lead to low Fe/Hf values (`False`), unless they have a terminal hydroxyl or amino group on a longer carbon chain (seven carbons or more), which leads to high Fe/Hf values (`True`).**

  *Explanation*: Without additional strong coordinating groups, the carboxylate alone provides limited interaction with Fe ions, resulting in weaker coordination and lower Fe incorporation. However, the presence of a terminal hydroxyl or amino group on a flexible long chain enhances coordination capacity due to increased flexibility and availability of additional donor atoms.

  *Applicable Modifiers*:
    - **Low Fe/Hf (`False`)**: Octanoic acid, 2,2,3,3,4,4,5,5,5-nonafluoropentanoic acid.
    - **High Fe/Hf (`True`)**: 7-hydroxyheptanoic acid, 7-aminoheptanoic acid.

---

- **Rule 11**: **Modifiers containing fluorinated alkyl chains or trifluoroacetyl groups lead to low Fe/Hf values (`False`).**

  *Explanation*: Fluorine's high electronegativity draws electron density away from coordinating atoms like oxygen or nitrogen, reducing their ability to coordinate with Fe ions effectively. Additionally, the steric bulk of fluorinated groups may hinder coordination.

  *Applicable Modifiers*: 2,2,3,3,4,4,5,5,5-nonafluoropentanoic acid, 4-[(2,2,2-trifluoroacetyl)amino]butanoic acid.

---

- **Rule 12**: **Modifiers containing methoxy-substituted aromatic rings lead to high Fe/Hf values (`True`).**

  *Explanation*: Methoxy groups are electron-donating through resonance but do not significantly decrease the acidity of the carboxylic acid group. They can enhance interactions with Fe ions via coordination through oxygen and maintain effective Fe incorporation.

  *Applicable Modifiers*: 4-(3,4-dimethoxyphenyl)-4-oxobutanoic acid.

---

- **Rule 13**: **Modifiers containing cyclic anhydrides or lactones adjacent to carboxylic acid groups lead to high Fe/Hf values (`True`).**

  *Explanation*: Additional carbonyl groups in cyclic anhydrides or lactones can act as coordinating sites for Fe ions, enhancing Fe incorporation due to multidentate chelation.

  *Applicable Modifiers*: 1,3-dioxo-2-benzofuran-5-carboxylic acid.

---

- **Rule 14**: **Modifiers containing pyrazole or imidazole rings lead to low Fe/Hf values (`False`).**

  *Explanation*: Although nitrogen atoms in these heterocycles can act as ligands, their coordination may be hindered by electron density delocalization and steric factors, leading to less effective Fe incorporation.

  *Applicable Modifiers*: 1H-pyrazole-4-carboxylic acid.

---

**End of Rules**

---

These rules capture the relationship between the structural features of molecular modifiers and their effect on the Fe/Hf ratio in the catalyst. By considering functional groups and their electronic and steric properties, the rules provide a predictive framework for determining whether a given modifier will lead to a high or low Fe/Hf value. The rules combine multiple sub-structures and underlying physical-chemical principles to cover a broad range of the dataset while balancing simplicity and complexity.---------------------------------------------------------------


    Current_Matrix:
    Matrix Generator Message:
Rule 1,Rule 2,Rule 3,Rule 4,Rule 5,Rule 6,Rule 7,Rule 8,Rule 9,Rule 10,Rule 11,Rule 12,Rule 13,Rule 14
0,0,0,0,0,0,0,0,0,-1,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,-1,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,-1,0,0,0,0
0,0,0,-1,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,-1,0,-1,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,-1,0,0,0,0
0,0,1,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,1,0,0,0,0,0
0,0,0,0,0,0,0,0,0,-1,-1,0,0,0
0,0,0,0,0,0,0,0,1,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,-1
0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,1,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,-1,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,1,0,0,0,0,0,0,-1,0,0,0,0
0,0,0,0,0,0,0,0,0,-1,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,1,0,0
0,0,0,0,0,0,0,-1,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,-1,-1,0,0,0
0,0,0,0,0,0,0,0,0,-1,0,0,0,0
0,0,0,0,0,0,0,-1,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,-1,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,-1,0,0,0,0
0,0,0,0,0,0,0,0,0,1,0,0,0,0

---------------------------------------------------------------


    Train Accuracy: 0.7714285714285715; Test Accuracy: 0.0
    Train Support: 0.08571428571428572; Test Support: 0.16666666666666666
    Train Confidence: 0.9166666666666666; Test Confidence: 0.5833333333333334
    Train Lift: 1.8666031227305737; Test Lift: NONE
    Train Leverage: 0.029659863945578225; Test Leverage: NONE
    ----------------------------------------------------------------------------------

    Current Rule Code:
def rule2matrix(smiles_list):
    from rdkit import Chem
    import pandas as pd

    # Initialize list to hold results
    results = []
    
    # Define SMARTS patterns for each rule

    # Rule 1: Linear aliphatic carboxylic acids with a terminal primary amino group (-NH2)
    rule1_pattern = Chem.MolFromSmarts('[NX3H2][CX4H2][CX4H2][CX4H2][C](=O)[O,H]')  # Terminal primary amine with at least three methylene groups before carboxylic acid

    # Rule 2: Benzoic acid derivatives with EWGs or EDGs at the para position
    # Electron-withdrawing groups (EWGs)
    rule2_ewg_pattern = Chem.MolFromSmarts('c1ccc([NX3+](=O)[O-],Cl,Br,I,S)cc1C(=O)[O,H]')
    # Electron-donating groups (EDGs)
    rule2_edg_pattern = Chem.MolFromSmarts('c1ccc([NH2,OH,OC,CH3])cc1C(=O)[O,H]')

    # Rule 3: Modifiers containing sulfur atoms as thiol (-SH) or thioether (-S-)
    thiol_pattern = Chem.MolFromSmarts('[SX2H]')
    thioether_pattern = Chem.MolFromSmarts('[#16X2][#6]')  # Sulfur attached to carbon (aliphatic)

    # Rule 4: Modifiers containing multiple hydroxyl (-OH) groups (polyols)
    # Exclude hydroxyls attached to carbonyl carbons
    hydroxyl_pattern = Chem.MolFromSmarts('[OX2H][CX4;!$(C=O)]')

    # Rule 5: Modifiers containing long flexible ether linkages with terminal amino groups
    # At least two ether linkages
    ether_linkage_pattern = Chem.MolFromSmarts('[#6]-[OX2]-[#6]-[OX2]-[#6]')

    # Terminal primary amino group
    terminal_amino_pattern = Chem.MolFromSmarts('[NX3H2][$([CX4][!#6])]')  # Primary amine at the end of a carbon chain

    # Rule 6: Pyridine rings connected via a linker or directly attached to carboxylic acid
    pyridine_with_linker_pattern = Chem.MolFromSmarts('[#6]-[#6]-[#6]-n1ccccc1')
    pyridine_direct_pattern = Chem.MolFromSmarts('n1ccccc1C(=O)[O,H]')

    # Rule 7: Modifiers with conjugated carbonyl groups adjacent to carboxylic acid
    conjugated_carbonyl_pattern = Chem.MolFromSmarts('[CX3]=[CX3](C(=O)[O,H])')

    # Rule 8: Modifiers containing hydroxyphenyl groups (phenol functional groups)
    hydroxyphenyl_pattern = Chem.MolFromSmarts('c1cc([OX2H])ccc1')

    # Rule 9: Aromatic amino acids with aromatic side chains, excluding bulky indole ring
    aromatic_amino_acid_pattern = Chem.MolFromSmarts('[NX3][CX4](C(=O)[O,H])[CX4][c]')  # Aromatic side chain amino acid
    tryptophan_pattern = Chem.MolFromSmarts('[NX3][CX4](C(=O)[O,H])CCc1c[nH]c2ccccc12')

    # Rule 10: Simple aliphatic carboxylic acids without additional coordinating functional groups
    simple_aliphatic_acid_pattern = Chem.MolFromSmarts('[CX4][CX4][CX4]C(=O)[O,H]')
    long_chain_terminal_group_pattern = Chem.MolFromSmarts('[CX4][CX4][CX4][CX4][CX4][CX4][CX4][OX2H,NX3H2]')  # Seven or more carbons before terminal group

    # Rule 11: Modifiers containing fluorinated alkyl chains or trifluoroacetyl groups
    fluorinated_chain_pattern = Chem.MolFromSmarts('[CX4](F)(F)F')

    # Rule 12: Modifiers containing methoxy-substituted aromatic rings
    methoxy_aromatic_pattern = Chem.MolFromSmarts('c1cc(OC)ccc1')

    # Rule 13: Modifiers containing cyclic anhydrides or lactones adjacent to carboxylic acid groups
    cyclic_anhydride_pattern = Chem.MolFromSmarts('O=C1OC(=O)[#6]C=CC1=O')

    # Rule 14: Modifiers containing pyrazole or imidazole rings
    pyrazole_ring_pattern = Chem.MolFromSmarts('c1cn[nH]c1')
    imidazole_ring_pattern = Chem.MolFromSmarts('c1c[nH]cn1')

    # Process each SMILES string
    for smi in smiles_list:
        mol = Chem.MolFromSmiles(smi)
        if mol is None:
            # If the molecule cannot be parsed, append a row of zeros
            results.append([0]*14)
            continue

        # Assign stereochemistry
        Chem.AssignStereochemistry(mol, cleanIt=True, force=True)

        row = []

        # Rule 1
        try:
            if mol.HasSubstructMatch(rule1_pattern):
                row.append(1)
            else:
                row.append(0)
        except:
            row.append(0)
        
        # Rule 2
        try:
            if mol.HasSubstructMatch(rule2_ewg_pattern):
                row.append(1)
            elif mol.HasSubstructMatch(rule2_edg_pattern):
                row.append(-1)
            else:
                row.append(0)
        except:
            row.append(0)

        # Rule 3
        try:
            if mol.HasSubstructMatch(thiol_pattern) or mol.HasSubstructMatch(thioether_pattern):
                row.append(1)
            else:
                row.append(0)
        except:
            row.append(0)
        
        # Rule 4
        try:
            hydroxyl_matches = mol.GetSubstructMatches(hydroxyl_pattern)
            if len(hydroxyl_matches) >= 2:
                row.append(-1)
            else:
                row.append(0)
        except:
            row.append(0)
        
        # Rule 5
        try:
            if mol.HasSubstructMatch(ether_linkage_pattern) and mol.HasSubstructMatch(terminal_amino_pattern):
                row.append(1)
            else:
                row.append(0)
        except:
            row.append(0)

        # Rule 6
        try:
            if mol.HasSubstructMatch(pyridine_with_linker_pattern):
                row.append(1)
            elif mol.HasSubstructMatch(pyridine_direct_pattern):
                row.append(-1)
            else:
                row.append(0)
        except:
            row.append(0)

        # Rule 7
        try:
            if mol.HasSubstructMatch(conjugated_carbonyl_pattern):
                row.append(-1)
            else:
                row.append(0)
        except:
            row.append(0)

        # Rule 8
        try:
            if mol.HasSubstructMatch(hydroxyphenyl_pattern):
                row.append(-1)
            else:
                row.append(0)
        except:
            row.append(0)

        # Rule 9
        try:
            if mol.HasSubstructMatch(tryptophan_pattern):
                row.append(-1)
            elif mol.HasSubstructMatch(aromatic_amino_acid_pattern):
                row.append(1)
            else:
                row.append(0)
        except:
            row.append(0)

        # Rule 10
        try:
            if mol.HasSubstructMatch(long_chain_terminal_group_pattern):
                row.append(1)
            elif mol.HasSubstructMatch(simple_aliphatic_acid_pattern):
                row.append(-1)
            else:
                row.append(0)
        except:
            row.append(0)

        # Rule 11
        try:
            if mol.HasSubstructMatch(fluorinated_chain_pattern):
                row.append(-1)
            else:
                row.append(0)
        except:
            row.append(0)

        # Rule 12
        try:
            if mol.HasSubstructMatch(methoxy_aromatic_pattern):
                row.append(1)
            else:
                row.append(0)
        except:
            row.append(0)

        # Rule 13
        try:
            if mol.HasSubstructMatch(cyclic_anhydride_pattern):
                row.append(1)
            else:
                row.append(0)
        except:
            row.append(0)

        # Rule 14
        try:
            if mol.HasSubstructMatch(pyrazole_ring_pattern) or mol.HasSubstructMatch(imidazole_ring_pattern):
                row.append(-1)
            else:
                row.append(0)
        except:
            row.append(0)

        results.append(row)

    # Create DataFrame with results
    df = pd.DataFrame(results, columns=[f'Rule {i+1}' for i in range(14)])
    return df
--------------------------------------------------
    Target Name: Fe/Hf
    GPT Model: o1-preview-2024-09-12
    ML Model: ETC
    Current_Rules:
    **Start of Rules**

---

**Rule 1**: **Modifiers that are aliphatic carboxylic acids with a terminal primary amino group (-NH₂) or amide group (-CONH₂) on an aliphatic chain lead to high Fe/Hf values (`True`).**

*Explanation*: The presence of both amino (or amide) and carboxylate groups allows for bidentate chelation with Fe ions, enhancing Fe incorporation into the catalyst.

*Applicable Modifiers*:

- 5-aminopentanoic acid
- 7-aminoheptanoic acid
- 8-aminooctanoic acid
- (2S)-6-acetamido-2-aminohexanoic acid
- (2S)-2-aminobutanedioic acid
- 3-[2-(2-aminoethoxy)ethoxy]propanoic acid

---

**Rule 2**: **Aromatic carboxylic acids with substituents at the para position capable of coordinating with Fe ions (e.g., pyridyl, nitro, bromomethyl groups) lead to high Fe/Hf values (`True`), while those with non-coordinating or electron-donating groups (e.g., methyl, amino, hydroxyl) lead to low Fe/Hf values (`False`).**

*Explanation*: Coordinating substituents provide additional binding sites for Fe ions, enhancing Fe incorporation through chelation. Electron-donating groups decrease the acidity of the carboxylic acid, hindering coordination.

*Applicable Modifiers*:

- **High Fe/Hf (`True`)**:
  - 4-(bromomethyl)benzoic acid
  - 4-nitrobenzoic acid
  - 4-pyridin-4-ylbenzoic acid

- **Low Fe/Hf (`False`)**:
  - 4-methylbenzoic acid
  - 4-aminobenzoic acid
  - 5-(4-hydroxyphenyl)pentanoic acid

---

**Rule 3**: **Modifiers containing sulfur functional groups, such as thiol (-SH) or thioether (-S-) groups, lead to high Fe/Hf values (`True`).**

*Explanation*: Sulfur atoms have lone pairs that form strong coordination bonds with Fe ions due to their soft donor properties, enhancing Fe incorporation through effective chelation.

*Applicable Modifiers*:

- 4-sulfanylbenzoic acid
- 3-sulfanylpropanoic acid
- 2-[[(2S)-2-amino-4-methylsulfanylbutanoyl]amino]acetic acid

---

**Rule 4**: **Modifiers with flexible ether linkages and terminal coordinating groups (e.g., amino or carboxylic acid groups) lead to high Fe/Hf values (`True`).**

*Explanation*: Ether oxygen atoms and terminal functional groups can chelate Fe ions. The flexibility of the ether linkages allows the molecule to adopt conformations that facilitate effective coordination with Fe ions.

*Applicable Modifiers*:

- 2-[2-(2-methoxyethoxy)ethoxy]acetic acid
- 3-[2-(2-aminoethoxy)ethoxy]propanoic acid

---

**Rule 5**: **Modifiers containing multiple hydroxyl (-OH) groups in close proximity (e.g., polyols or sugars) or phenolic hydroxyl groups on aromatic rings lead to low Fe/Hf values (`False`).**

*Explanation*: Multiple hydroxyl groups increase hydrophilicity and engage in intramolecular hydrogen bonding, reducing the availability of lone pairs for coordination with Fe ions. Phenolic hydroxyl groups can form strong hydrogen bonds, hindering effective coordination.

*Applicable Modifiers*:

- (2R,3S,4R,5R)-2,3,4,5,6-pentahydroxyhexanoic acid
- 2-[[1,3-dihydroxy-2-(hydroxymethyl)propan-2-yl]oxy]acetic acid
- 5-(4-hydroxyphenyl)pentanoic acid
- 3-(4-hydroxyphenyl)propanoic acid
- 2-[(4-hydroxybenzoyl)amino]acetic acid

*Exception*:

- **High Fe/Hf (`True`)**:
  - 7-hydroxyheptanoic acid (The terminal hydroxyl group on a flexible aliphatic chain facilitates coordination.)

---

**Rule 6**: **Modifiers that are amino acids with bulky or electron-rich aromatic side chains lead to low Fe/Hf values (`False`), while those with less bulky aromatic side chains lead to high Fe/Hf values (`True`).**

*Explanation*: Bulky side chains introduce steric hindrance, and electron-rich aromatic rings can delocalize electron density, reducing effective coordination with Fe ions.

*Applicable Modifiers*:

- **High Fe/Hf (`True`)**:
  - (2S)-2-amino-3-phenylpropanoic acid

- **Low Fe/Hf (`False`)**:
  - (2R)-2-amino-3-(1H-indol-3-yl)propanoic acid

---

**Rule 7**: **Modifiers with fluorinated alkyl chains or trifluoromethyl groups lead to low Fe/Hf values (`False`).**

*Explanation*: Fluorine's high electronegativity withdraws electron density from coordinating atoms, diminishing their ability to effectively coordinate with Fe ions.

*Applicable Modifiers*:

- 2,2,3,3,4,4,5,5,5-nonafluoropentanoic acid
- 4-[(2,2,2-trifluoroacetyl)amino]butanoic acid

---

**Rule 8**: **Modifiers with pyridine rings connected via an aliphatic linker to a carboxylic acid group lead to high Fe/Hf values (`True`), whereas those with pyridine rings directly attached to the carboxylic acid lead to low Fe/Hf values (`False`).**

*Explanation*: The aliphatic linker provides flexibility, allowing both the pyridine nitrogen and carboxylate oxygen to coordinate effectively with Fe ions. Direct attachment may hinder coordination due to steric or electronic factors.

*Applicable Modifiers*:

- **High Fe/Hf (`True`)**:
  - 4-pyridin-4-ylbutanoic acid
  - 4-pyridin-4-ylbenzoic acid

- **Low Fe/Hf (`False`)**:
  - Pyridine-3-carboxylic acid
  - 2-oxo-1H-pyridine-4-carboxylic acid

---

**Rule 9**: **Modifiers containing aldehyde (-CHO) or ketone (>C=O) groups adjacent to an aromatic ring lead to low Fe/Hf values (`False`).**

*Explanation*: Conjugated carbonyl groups can delocalize electron density away from the carboxylate oxygen, diminishing its ability to coordinate effectively with Fe ions.

*Applicable Modifiers*:

- 4-formylbenzoic acid
- 5-formyl-2-hydroxybenzoic acid
- 4-oxoheptanedioic acid

---

**Rule 10**: **Modifiers that are simple aliphatic carboxylic acids without additional coordinating functional groups lead to low Fe/Hf values (`False`), while those with terminal coordinating groups (e.g., amino or hydroxyl) lead to high Fe/Hf values (`True`).**

*Explanation*: Without strong coordinating groups, the molecule has limited interaction with Fe ions. Terminal functional groups like -NH₂ or -OH facilitate effective coordination by providing additional binding sites.

*Applicable Modifiers*:

- **High Fe/Hf (`True`)**:
  - 7-hydroxyheptanoic acid
  - 7-aminoheptanoic acid
  - 8-aminooctanoic acid

- **Low Fe/Hf (`False`)**:
  - Octanoic acid

---

**Rule 11**: **Modifiers containing small heteroaromatic carboxylic acids without additional coordinating groups lead to low Fe/Hf values (`False`).**

*Explanation*: Heteroaromatic rings directly attached to the carboxyl group may not coordinate effectively due to electronic factors or steric hindrance, resulting in lower Fe incorporation.

*Applicable Modifiers*:

- 1H-pyrazole-4-carboxylic acid
- 2-oxo-1H-pyridine-4-carboxylic acid
- Pyridine-3-carboxylic acid

---

**Rule 12**: **Modifiers with hydrophilic polyhydroxy structures (e.g., sugar acids) lead to low Fe/Hf values (`False`), whereas those with a single terminal hydroxyl group on an aliphatic chain may lead to high Fe/Hf values (`True`).**

*Explanation*: High hydrophilicity and extensive hydrogen bonding in polyhydroxy structures reduce coordination efficiency with Fe ions. A single terminal hydroxyl group can still participate effectively in coordination.

*Applicable Modifiers*:

- **Low Fe/Hf (`False`)**:
  - (2R,3S,4R,5R)-2,3,4,5,6-pentahydroxyhexanoic acid

- **High Fe/Hf (`True`)**:
  - 7-hydroxyheptanoic acid

---

**Rule 13**: **Modifiers with electron-rich methoxy-substituted aromatic rings and adjacent carbonyl groups lead to high Fe/Hf values (`True`).**

*Explanation*: Methoxy groups can donate electron density through resonance, and adjacent carbonyl groups provide additional coordination sites, enhancing Fe incorporation.

*Applicable Modifier*:

- 4-(3,4-dimethoxyphenyl)-4-oxobutanoic acid

---

**Rule 14**: **Modifiers containing cyclic anhydrides or lactones adjacent to the carboxylic acid group lead to high Fe/Hf values (`True`).**

*Explanation*: Additional carbonyl groups in cyclic structures provide extra coordination sites for Fe ions, enhancing Fe incorporation through multidentate chelation.

*Applicable Modifier*:

- 1,3-dioxo-2-benzofuran-5-carboxylic acid

---

**Rule 15**: **Modifiers with amide functional groups in addition to carboxylic acid groups and lacking other strong coordinating groups lead to low Fe/Hf values (`False`).**

*Explanation*: Amide groups may not coordinate as effectively due to delocalization of the lone pair on nitrogen, reducing the number of effective coordination sites.

*Applicable Modifier*:

- 2-[(4-hydroxybenzoyl)amino]acetic acid

---

**End of Rules**

---

These rules capture the relationship between the structural features of molecular modifiers and their effect on the Fe/Hf ratio in the catalyst. By combining multiple sub-structures and considering underlying physicochemical properties such as electronic effects, steric factors, and coordination ability, the rules provide a predictive framework to determine whether a given modifier will lead to a high or low Fe/Hf value. The rules balance simplicity and complexity while covering a broad range of the dataset, illustrating how specific functional groups influence the incorporation of Fe ions in the catalyst system.---------------------------------------------------------------


    Current_Matrix:
    Matrix Generator Message:
Rule 1,Rule 2,Rule 3,Rule 4,Rule 5,Rule 6,Rule 7,Rule 8,Rule 9,Rule 10,Rule 11,Rule 12,Rule 13,Rule 14,Rule 15
1,0,0,0,0,0,0,0,0,-1,0,0,0,0,0
0,-1,0,0,0,1,0,0,0,-1,0,0,0,0,0
1,0,0,0,0,0,0,0,0,-1,0,0,0,0,0
1,0,0,0,0,0,0,0,0,-1,0,0,0,0,0
1,-1,0,0,0,1,0,0,0,-1,0,0,0,0,0
0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0
0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0
0,0,0,0,-1,1,0,0,0,-1,0,0,0,0,0
0,1,0,0,0,1,0,0,0,-1,0,0,0,0,0
0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0
0,-1,1,0,0,1,0,0,0,-1,0,0,0,0,0
0,0,0,1,0,0,0,0,0,-1,0,0,0,0,0
0,1,0,0,0,1,0,0,0,-1,0,0,0,0,0
1,0,0,0,0,1,0,0,0,-1,0,0,0,0,0
0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0
1,0,0,0,0,1,0,0,0,-1,0,0,0,0,0
0,-1,0,0,0,1,0,0,0,-1,0,0,0,0,0
0,-1,0,1,0,1,0,0,0,-1,0,0,0,1,0
0,0,1,0,0,0,0,0,0,-1,0,0,0,0,0
0,-1,0,0,-1,1,0,0,-1,-1,0,0,0,0,0
0,-1,0,0,0,1,0,0,-1,-1,0,0,0,0,0
0,-1,0,0,0,1,0,0,0,-1,0,0,0,0,0
0,1,0,0,0,1,0,0,0,-1,0,0,0,0,0
0,-1,0,0,0,1,0,0,0,-1,0,0,0,0,0
1,0,1,0,0,0,0,0,0,-1,0,0,0,0,0
0,0,0,0,0,1,0,0,0,-1,0,0,0,0,0
0,0,0,1,0,1,0,0,-1,-1,0,0,1,0,0
0,0,0,0,-1,1,0,0,0,-1,0,0,0,0,-1
0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0
0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0
0,0,0,0,0,0,0,0,0,1,0,1,0,0,0
0,0,0,0,-1,1,0,0,0,-1,0,0,0,0,0
1,0,0,0,0,0,0,0,0,-1,0,0,0,0,0
1,0,0,1,0,0,0,0,0,-1,0,0,0,0,0
1,0,0,0,0,0,0,0,0,-1,0,0,0,0,0
1,0,0,0,0,0,0,0,0,-1,0,0,0,0,0

---------------------------------------------------------------


    Train Accuracy: 0.8857142857142857; Test Accuracy: 0.0
    Train Support: 0.13877551020408163; Test Support: 0.0
    Train Confidence: 0.8172932330827068; Test Confidence: 0.42857142857142855
    Train Lift: 1.6123294346978558; Test Lift: NONE
    Train Leverage: 0.02903790087463557; Test Leverage: NONE
    ----------------------------------------------------------------------------------

    Current Rule Code:
def rule2matrix(smiles_list):
    # Define SMARTS patterns for functional groups and substructures
    # Carboxylic acid group (-COOH)
    carboxylic_acid = '[CX3](=O)[OX2H1]'
    carboxylate_anion = '[CX3](=O)[O-]'
    # Primary amine (-NH2)
    primary_amine = '[NX3;H2][#6]'
    # Amide group (-CONH2)
    amide_group = '[CX3](=O)[NX3;H2]'
    # Aliphatic chain with terminal amino group
    terminal_primary_amino = '[NX3;H2][CH2][CH2][CH2][CH2][CH2][CX3](=O)[OX2H1]'
    # Aliphatic chain with terminal amide group
    terminal_amide = '[CX3](=O)[NX3;H2][CH2][CH2][CH2][CH2][CX3](=O)[OX2H1]'
    # Aromatic carboxylic acid
    aromatic_carboxylic_acid = '[c][CX3](=O)[OX2H1]'
    # Substituents capable of coordinating with Fe ions
    pyridyl_group = 'c1ccncc1'
    nitro_group = '[NX3](=O)=O'
    bromomethyl_group = '[CH2Br]'
    # Electron-donating groups
    methyl_group = '[CH3]'
    amino_group = '[NX3;H2,H1][#6]'
    hydroxyl_group = '[OX2H]'
    # Sulfur functional groups
    thiol_group = '[SX2H]'
    thioether_group = '[#16X2][#6]'
    # Ether linkage
    ether_linkage = '[OD2]([#6])[#6]'
    # Polyol
    polyol = '[#6][OX2H][#6][OX2H][#6]'
    # Phenolic hydroxyl group
    phenolic_hydroxyl = '[c][OX2H]'
    # Bulky aromatic side chains
    bulky_aromatic = '[c]1cccc2ccccc12'
    # Fluorinated alkyl chains
    fluorinated_alkyl = '[#6][CF3]'
    # Pyridine ring directly attached to carboxylic acid
    pyridine_carboxylic_acid = 'n1cccc1C(=O)[O;H1]' 
    # Aldehyde group adjacent to aromatic ring
    aromatic_aldehyde = '[c][CX3H1](=O)'
    # Ketone group adjacent to aromatic ring
    aromatic_ketone = '[c][CX3](=O)[#6]'
    # Simple aliphatic carboxylic acid
    simple_aliphatic_acid = '[#6][CX3](=O)[OX2H1]'
    # Terminal hydroxyl group on aliphatic chain
    terminal_hydroxyl = '[CX4][CH2][CH2][CH2][CH2][OX2H]'
    # Heteroaromatic carboxylic acid
    heteroaromatic_acid = '[n,o,s][c][CX3](=O)[OX2H1]'
    # Electron-rich methoxy-substituted aromatic ring
    methoxy_substituted_aromatic = '[c][c][c]([OX2][CH3])[c][c]'
    # Cyclic anhydride or lactone adjacent to carboxylic acid
    cyclic_anhydride = '[C](=O)O[C](=O)'  # General pattern for cyclic anhydride
    # Amide functional group adjacent to aromatic ring
    aromatic_amide = '[c][CX3](=O)[NX3]'    
    # Compile SMARTS patterns
    patterns = {
        'Rule 1': [
            Chem.MolFromSmarts(primary_amine),
            Chem.MolFromSmarts(carboxylic_acid),
        ],
        'Rule 2 High': [
            Chem.MolFromSmarts(aromatic_carboxylic_acid),
            [
                Chem.MolFromSmarts(pyridyl_group),
                Chem.MolFromSmarts(nitro_group),
                Chem.MolFromSmarts(bromomethyl_group),
            ]
        ],
        'Rule 2 Low': [
            Chem.MolFromSmarts(aromatic_carboxylic_acid),
            [
                Chem.MolFromSmarts(methyl_group),
                Chem.MolFromSmarts(amino_group),
                Chem.MolFromSmarts(hydroxyl_group),
            ]
        ],
        'Rule 3': [
            Chem.MolFromSmarts(carboxylic_acid),
            [
                Chem.MolFromSmarts(thiol_group),
                Chem.MolFromSmarts(thioether_group),
            ]
        ],
        'Rule 4': [
            Chem.MolFromSmarts(carboxylic_acid),
            Chem.MolFromSmarts(ether_linkage),
        ],
        'Rule 5': [
            Chem.MolFromSmarts(polyol),
            Chem.MolFromSmarts(phenolic_hydroxyl),
        ],
        'Rule 6 High': [
            Chem.MolFromSmarts(carboxylic_acid),
            Chem.MolFromSmarts('[c][c][c]'),  # Less bulky aromatic chain
        ],
        'Rule 6 Low': [
            Chem.MolFromSmarts(carboxylic_acid),
            Chem.MolFromSmarts(bulky_aromatic),
        ],
        'Rule 7': [
            Chem.MolFromSmarts(fluorinated_alkyl),
        ],
        'Rule 8 High': [
            Chem.MolFromSmarts(carboxylic_acid),
            Chem.MolFromSmarts('[#6]-[#6]-[#6]-[#6]-[#6]-n1ccccc1'),  # Pyridine ring via aliphatic linker
        ],
        'Rule 8 Low': [
            Chem.MolFromSmarts(pyridine_carboxylic_acid),
        ],
        'Rule 9': [
            [
                Chem.MolFromSmarts(aromatic_aldehyde),
                Chem.MolFromSmarts(aromatic_ketone),
            ],
        ],
        'Rule 10 High': [
            Chem.MolFromSmarts(carboxylic_acid),
            Chem.MolFromSmarts(terminal_hydroxyl),
        ],
        'Rule 10 Low': [
            Chem.MolFromSmarts(simple_aliphatic_acid),
        ],
        'Rule 11': [
            Chem.MolFromSmarts(heteroaromatic_acid),
        ],
        'Rule 12 Low': [
            Chem.MolFromSmarts(polyol),
        ],
        'Rule 12 High': [
            Chem.MolFromSmarts(terminal_hydroxyl),
        ],
        'Rule 13': [
            Chem.MolFromSmarts(methoxy_substituted_aromatic),
            Chem.MolFromSmarts(aromatic_ketone),
        ],
        'Rule 14': [
            Chem.MolFromSmarts(cyclic_anhydride),
            Chem.MolFromSmarts(carboxylic_acid),
        ],
        'Rule 15': [
            Chem.MolFromSmarts(aromatic_amide),
            Chem.MolFromSmarts(carboxylic_acid),
        ],
    }
    # Initialize the results list
    results = []
    # Process each SMILES string
    for smi in smiles_list:
        mol = Chem.MolFromSmiles(smi)
        if mol is None:
            # If the molecule cannot be parsed, append a row of zeros
            results.append([0]*15)
            continue
        row = []
        # Rule 1
        try:
            match = mol.HasSubstructMatch(Chem.MolFromSmarts(primary_amine)) and mol.HasSubstructMatch(Chem.MolFromSmarts(carboxylic_acid))
            row.append(1 if match else 0)
        except:
            row.append(0)
        # Rule 2
        try:
            match_high = mol.HasSubstructMatch(Chem.MolFromSmarts(aromatic_carboxylic_acid)) and (
                mol.HasSubstructMatch(Chem.MolFromSmarts(pyridyl_group)) or
                mol.HasSubstructMatch(Chem.MolFromSmarts(nitro_group)) or
                mol.HasSubstructMatch(Chem.MolFromSmarts(bromomethyl_group))
            )
            match_low = mol.HasSubstructMatch(Chem.MolFromSmarts(aromatic_carboxylic_acid)) and (
                mol.HasSubstructMatch(Chem.MolFromSmarts(methyl_group)) or
                mol.HasSubstructMatch(Chem.MolFromSmarts(amino_group)) or
                mol.HasSubstructMatch(Chem.MolFromSmarts(hydroxyl_group))
            )
            if match_high:
                row.append(1)
            elif match_low:
                row.append(-1)
            else:
                row.append(0)
        except:
            row.append(0)
        # Rule 3
        try:
            match = mol.HasSubstructMatch(Chem.MolFromSmarts(carboxylic_acid)) and (
                mol.HasSubstructMatch(Chem.MolFromSmarts(thiol_group)) or
                mol.HasSubstructMatch(Chem.MolFromSmarts(thioether_group))
            )
            row.append(1 if match else 0)
        except:
            row.append(0)
        # Rule 4
        try:
            match = mol.HasSubstructMatch(Chem.MolFromSmarts(ether_linkage)) and mol.HasSubstructMatch(Chem.MolFromSmarts(carboxylic_acid)) and (
                mol.HasSubstructMatch(Chem.MolFromSmarts(primary_amine)) or mol.HasSubstructMatch(Chem.MolFromSmarts(carboxylic_acid))
            )
            row.append(1 if match else 0)
        except:
            row.append(0)
        # Rule 5
        try:
            match = mol.HasSubstructMatch(Chem.MolFromSmarts(polyol)) or mol.HasSubstructMatch(Chem.MolFromSmarts(phenolic_hydroxyl))
            row.append(-1 if match else 0)
        except:
            row.append(0)
        # Rule 6
        try:
            match_high = mol.HasSubstructMatch(Chem.MolFromSmarts(carboxylic_acid)) and mol.HasSubstructMatch(Chem.MolFromSmarts('[c][c][c]'))
            match_low = mol.HasSubstructMatch(Chem.MolFromSmarts(carboxylic_acid)) and mol.HasSubstructMatch(Chem.MolFromSmarts(bulky_aromatic))
            if match_high:
                row.append(1)
            elif match_low:
                row.append(-1)
            else:
                row.append(0)
        except:
            row.append(0)
        # Rule 7
        try:
            match = mol.HasSubstructMatch(Chem.MolFromSmarts(fluorinated_alkyl))
            row.append(-1 if match else 0)
        except:
            row.append(0)
        # Rule 8
        try:
            match_high = mol.HasSubstructMatch(Chem.MolFromSmarts('[#6]-[#6]-[#6]-[#6]-[#6]-n1ccccc1'))
            match_low = mol.HasSubstructMatch(Chem.MolFromSmarts(pyridine_carboxylic_acid))
            if match_high:
                row.append(1)
            elif match_low:
                row.append(-1)
            else:
                row.append(0)
        except:
            row.append(0)
        # Rule 9
        try:
            match = mol.HasSubstructMatch(Chem.MolFromSmarts(aromatic_aldehyde)) or mol.HasSubstructMatch(Chem.MolFromSmarts(aromatic_ketone))
            row.append(-1 if match else 0)
        except:
            row.append(0)
        # Rule 10
        try:
            match_high = mol.HasSubstructMatch(Chem.MolFromSmarts(terminal_hydroxyl)) and mol.HasSubstructMatch(Chem.MolFromSmarts(carboxylic_acid))
            match_low = mol.HasSubstructMatch(Chem.MolFromSmarts(simple_aliphatic_acid))
            if match_high:
                row.append(1)
            elif match_low:
                row.append(-1)
            else:
                row.append(0)
        except:
            row.append(0)
        # Rule 11
        try:
            match = mol.HasSubstructMatch(Chem.MolFromSmarts(heteroaromatic_acid))
            row.append(-1 if match else 0)
        except:
            row.append(0)
        # Rule 12
        try:
            match_low = mol.HasSubstructMatch(Chem.MolFromSmarts(polyol))
            match_high = mol.HasSubstructMatch(Chem.MolFromSmarts(terminal_hydroxyl))
            if match_low:
                row.append(-1)
            elif match_high:
                row.append(1)
            else:
                row.append(0)
        except:
            row.append(0)
        # Rule 13
        try:
            match = mol.HasSubstructMatch(Chem.MolFromSmarts(methoxy_substituted_aromatic)) and mol.HasSubstructMatch(Chem.MolFromSmarts(aromatic_ketone))
            row.append(1 if match else 0)
        except:
            row.append(0)
        # Rule 14
        try:
            match = mol.HasSubstructMatch(Chem.MolFromSmarts(cyclic_anhydride)) and mol.HasSubstructMatch(Chem.MolFromSmarts(carboxylic_acid))
            row.append(1 if match else 0)
        except:
            row.append(0)
        # Rule 15
        try:
            match = mol.HasSubstructMatch(Chem.MolFromSmarts(aromatic_amide)) and mol.HasSubstructMatch(Chem.MolFromSmarts(carboxylic_acid))
            row.append(-1 if match else 0)
        except:
            row.append(0)
        # Append the row to results
        results.append(row)
    # Create DataFrame with results
    df = pd.DataFrame(results, columns=[f'Rule {i}' for i in range(1, 16)])
    return df

--------------------------------------------------
    Target Name: Fe/Hf
    GPT Model: o1-preview-2024-09-12
    ML Model: ETC
    Current_Rules:
    **Rephrased Analysis Considering the New Constraints**

Based on the provided dataset and the requirements for generating rules, here is a rephrased set of rules illustrating the relationship between molecular modifiers and the Fe/Hf values in the catalyst system. These rules combine multiple sub-structures and consider underlying physicochemical properties to predict whether a modifier will lead to a high (`True`) or low (`False`) Fe/Hf value.

---

**Start of Rules**

---

**Rule 1**: **Modifiers with an aliphatic carboxylic acid group and a terminal primary amino group (-NH₂) lead to high Fe/Hf values (`True`).**

*Explanation*: The combination of a carboxylic acid and a terminal amino group allows for chelation with Fe ions through bidentate coordination, enhancing Fe incorporation into the catalyst. The flexibility of the aliphatic chain facilitates effective coordination.

*Applicable Modifiers*:

- **High Fe/Hf (`True`)**:
  - 5-aminopentanoic acid
  - 7-aminoheptanoic acid
  - 8-aminooctanoic acid
  - (2S)-2-aminobutanedioic acid
  - 3-[2-(2-aminoethoxy)ethoxy]propanoic acid
  - (2S)-6-acetamido-2-aminohexanoic acid

---

**Rule 2**: **Aromatic carboxylic acids with strong electron-withdrawing groups at the para position (e.g., nitro, bromomethyl) enhance Fe coordination, leading to high Fe/Hf values (`True`). Those with electron-donating groups (e.g., amino, methyl, hydroxyl) at the same position lead to low Fe/Hf values (`False`).**

*Explanation*: Electron-withdrawing groups increase the acidity of the carboxylic acid and stabilize the negative charge on the carboxylate ion, enhancing coordination with Fe ions. Electron-donating groups reduce acidity and hinder effective coordination.

*Applicable Modifiers*:

- **High Fe/Hf (`True`)**:
  - 4-nitrobenzoic acid
  - 4-(bromomethyl)benzoic acid

- **Low Fe/Hf (`False`)**:
  - 4-aminobenzoic acid
  - 4-methylbenzoic acid
  - 5-(4-hydroxyphenyl)pentanoic acid
  - 3-(4-hydroxyphenyl)propanoic acid

---

**Rule 3**: **Modifiers containing sulfur functional groups, such as thiol (-SH) or thioether (-S-) groups, combined with carboxylic acid groups, lead to high Fe/Hf values (`True`).**

*Explanation*: Sulfur atoms have lone pairs that form strong coordination bonds with Fe ions. The presence of both sulfur and carboxylic acid groups allows for multidentate coordination, enhancing Fe incorporation.

*Applicable Modifiers*:

- **High Fe/Hf (`True`)**:
  - 4-sulfanylbenzoic acid
  - 3-sulfanylpropanoic acid
  - 2-[[(2S)-2-amino-4-methylsulfanylbutanoyl]amino]acetic acid

---

**Rule 4**: **Modifiers with a pyridine ring connected to a carboxylic acid group via an aliphatic linker or additional aromatic ring lead to high Fe/Hf values (`True`). If the pyridine ring is directly attached to the carboxylic acid group, they lead to low Fe/Hf values (`False`).**

*Explanation*: The flexible linker allows both the pyridine nitrogen and the carboxylate oxygen to coordinate effectively with Fe ions. Direct attachment may result in less favorable geometry for coordination due to steric hindrance.

*Applicable Modifiers*:

- **High Fe/Hf (`True`)**:
  - 4-pyridin-4-ylbutanoic acid
  - 4-pyridin-4-ylbenzoic acid

- **Low Fe/Hf (`False`)**:
  - Pyridine-3-carboxylic acid
  - 2-oxo-1H-pyridine-4-carboxylic acid

---

**Rule 5**: **Modifiers that are amino acids with simple side chains or less bulky aromatic side chains lead to high Fe/Hf values (`True`). Those with bulky or highly electron-rich aromatic side chains lead to low Fe/Hf values (`False`).**

*Explanation*: Smaller side chains reduce steric hindrance, allowing effective coordination with Fe ions. Bulky or electron-rich side chains, such as indole rings, may hinder coordination due to steric or electronic effects.

*Applicable Modifiers*:

- **High Fe/Hf (`True`)**:
  - (2S)-2-amino-3-phenylpropanoic acid (Phenylalanine)

- **Low Fe/Hf (`False`)**:
  - (2R)-2-amino-3-(1H-indol-3-yl)propanoic acid (Tryptophan)

---

**Rule 6**: **Modifiers with multiple hydroxyl (-OH) groups on an aliphatic chain (polyhydroxy acids) lead to low Fe/Hf values (`False`). Modifiers with a single terminal hydroxyl group on an aliphatic chain lead to high Fe/Hf values (`True`).**

*Explanation*: Multiple hydroxyl groups can form intramolecular hydrogen bonds and increase hydrophilicity, reducing their ability to coordinate with Fe ions. A single hydroxyl group remains available for effective coordination without significant steric hindrance.

*Applicable Modifiers*:

- **Low Fe/Hf (`False`)**:
  - (2R,3S,4R,5R)-2,3,4,5,6-pentahydroxyhexanoic acid (Gluconic acid)
  - 2-[[1,3-dihydroxy-2-(hydroxymethyl)propan-2-yl]oxy]acetic acid

- **High Fe/Hf (`True`)**:
  - 7-hydroxyheptanoic acid

---

**Rule 7**: **Modifiers containing fluorinated alkyl chains or trifluoromethyl groups lead to low Fe/Hf values (`False`).**

*Explanation*: Fluorine's high electronegativity withdraws electron density from coordinating atoms, diminishing their ability to form effective coordination bonds with Fe ions.

*Applicable Modifiers*:

- **Low Fe/Hf (`False`)**:
  - 2,2,3,3,4,4,5,5,5-nonafluoropentanoic acid
  - 4-[(2,2,2-trifluoroacetyl)amino]butanoic acid

---

**Rule 8**: **Modifiers with aldehyde (-CHO) groups adjacent to an aromatic ring lead to low Fe/Hf values (`False`).**

*Explanation*: Aldehyde groups can participate in side reactions and may not coordinate effectively with Fe ions, reducing overall coordination ability.

*Applicable Modifiers*:

- **Low Fe/Hf (`False`)**:
  - 4-formylbenzoic acid
  - 5-formyl-2-hydroxybenzoic acid

---

**Rule 9**: **Simple aliphatic carboxylic acids without additional coordinating functional groups lead to low Fe/Hf values (`False`).**

*Explanation*: Without strong coordinating groups, these modifiers have limited interaction with Fe ions, resulting in lower Fe incorporation into the catalyst.

*Applicable Modifiers*:

- **Low Fe/Hf (`False`)**:
  - Octanoic acid

---

**Rule 10**: **Modifiers containing ether linkages combined with terminal amino groups lead to high Fe/Hf values (`True`).**

*Explanation*: Ether oxygen atoms and terminal amino groups can chelate Fe ions. The flexibility of ether linkages allows the molecule to adopt conformations that facilitate effective coordination.

*Applicable Modifiers*:

- **High Fe/Hf (`True`)**:
  - 3-[2-(2-aminoethoxy)ethoxy]propanoic acid
  - 2-[2-(2-methoxyethoxy)ethoxy]acetic acid

---

**Rule 11**: **Modifiers with aromatic ketone groups adjacent to the ring, especially when combined with methoxy (-OCH₃) groups, lead to high Fe/Hf values (`True`).**

*Explanation*: Aromatic ketones can participate in resonance stabilization and provide additional coordination sites for Fe ions. Methoxy groups enhance electron density through resonance, facilitating coordination via π-π interactions.

*Applicable Modifiers*:

- **High Fe/Hf (`True`)**:
  - 4-(3,4-dimethoxyphenyl)-4-oxobutanoic acid
  - 1,3-dioxo-2-benzofuran-5-carboxylic acid

- **Low Fe/Hf (`False`)**:
  - 4-oxoheptanedioic acid (aliphatic ketone without aromatic enhancement)

---

**Rule 12**: **Modifiers containing both amide linkages and sulfur-containing side chains lead to high Fe/Hf values (`True`).**

*Explanation*: Amide groups can coordinate with Fe ions, and sulfur-containing side chains enhance coordination through soft donor interactions, providing a multidentate ligand environment.

*Applicable Modifiers*:

- **High Fe/Hf (`True`)**:
  - 2-[[(2S)-2-amino-4-methylsulfanylbutanoyl]amino]acetic acid

---

**Rule 13**: **Modifiers that are aliphatic dicarboxylic acids without additional coordinating groups lead to low Fe/Hf values (`False`).**

*Explanation*: While dicarboxylic acids offer two carboxylate groups, the absence of other coordinating functionalities may limit effective chelation with Fe ions.

*Applicable Modifiers*:

- **Low Fe/Hf (`False`)**:
  - 4-oxoheptanedioic acid

---

**Rule 14**: **Modifiers containing heterocyclic rings with strong electron-withdrawing characteristics adjacent to carboxylic acid groups lead to low Fe/Hf values (`False`).**

*Explanation*: Electron-withdrawing heterocycles may reduce the donating ability of coordinating atoms, hindering effective coordination with Fe ions.

*Applicable Modifiers*:

- **Low Fe/Hf (`False`)**:
  - 1H-pyrazole-4-carboxylic acid
  - 2-oxo-1H-pyridine-4-carboxylic acid

---

**Rule 15**: **Modifiers with a single carboxylic acid group and additional coordinating groups, such as terminal hydroxyl (-OH) or methoxy (-OCH₃) groups on an aliphatic chain, lead to high Fe/Hf values (`True`).**

*Explanation*: The additional coordinating groups provide extra sites for Fe coordination without significant steric hindrance, enhancing Fe incorporation.

*Applicable Modifiers*:

- **High Fe/Hf (`True`)**:
  - 7-hydroxyheptanoic acid
  - 2-[2-(2-methoxyethoxy)ethoxy]acetic acid

---

**End of Rules**

---

These rules combine multiple sub-structures, such as functional groups and structural motifs, to predict the Fe/Hf values effectively. By considering underlying physicochemical properties like electron-withdrawing or donating effects, steric factors, and coordination capabilities, the rules provide a clear framework for determining whether a given modifier will lead to a high or low Fe/Hf value. The rules cover a broad range of the dataset and strike a balance between simplicity and complexity, ensuring they are both comprehensive and practical for predicting outcomes based on molecular structures.---------------------------------------------------------------


    Current_Matrix:
    Matrix Generator Message:
Rule 1,Rule 2,Rule 3,Rule 4,Rule 5,Rule 6,Rule 7,Rule 8,Rule 9,Rule 10,Rule 11,Rule 12,Rule 13,Rule 14,Rule 15
1,0,0,0,0,0,0,0,-1,0,0,0,0,0,0
0,0,0,0,0,0,0,-1,-1,0,0,0,0,0,0
0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0
0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0
0,0,0,0,0,0,0,-1,-1,0,0,0,0,0,0
0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0
0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0
0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0
0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
0,0,1,0,0,0,0,-1,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0
0,0,0,1,0,0,0,-1,-1,0,0,0,0,0,0
0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0
0,0,0,0,0,0,-1,0,-1,0,0,0,0,0,0
0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0
0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0
0,0,0,0,0,0,0,-1,-1,0,0,0,0,0,0
0,0,1,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,-1,-1,0,0,0,0,0,0
0,0,0,0,0,0,0,-1,-1,0,0,0,0,0,0
0,0,0,0,0,0,0,-1,-1,0,0,0,0,0,0
0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0
0,0,0,0,0,0,0,-1,-1,0,0,0,0,0,0
0,0,1,0,0,0,0,0,0,0,0,1,0,0,0
0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0
0,0,0,0,0,0,0,-1,-1,0,0,0,0,0,0
0,0,0,0,1,0,0,-1,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0
0,0,0,0,1,0,-1,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0
0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0
0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0
0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0

---------------------------------------------------------------


    Train Accuracy: 0.5714285714285714; Test Accuracy: 1.0
    Train Support: 0.08571428571428572; Test Support: 0.0
    Train Confidence: 1.0; Test Confidence: 0.5
    Train Lift: 1.9444444444444446; Test Lift: NONE
    Train Leverage: 0.041632653061224496; Test Leverage: NONE
    ----------------------------------------------------------------------------------

    Current Rule Code:
def rule2matrix(smiles_list):
    # Define SMARTS patterns for functional groups and structural motifs
    # Carboxylic acid group (-COOH)
    carboxylic_acid = '[CX3](=O)[OX2H1]'

    # Terminal primary amino group (-NH2) at the end of an aliphatic chain
    terminal_primary_amine = '[NX3H2][CX4H2][CX4H2][CX4H2][CX3](=O)[OX2H1]'
    
    # Aliphatic chain of variable length with terminal amine and carboxylic acid
    aliphatic_amino_acid = '[NX3H2][CH2,CH][CH2,CH][CH2,CH][CX3](=O)[OX2H1]'

    # Sulfur-containing groups: thiol (-SH) or thioether (-S-)
    thiol = '[SX2H]'
    thioether = '[#6][SX2][#6]'

    # Aromatic ring with electron-withdrawing group at para position
    aromatic_ring = 'c1ccccc1'
    nitro_group = '[NX3](=O)=O'
    halogen = '[F,Cl,Br,I]'
    para_substituted_nitro = 'c1ccc([NX3](=O)=O)cc1'
    para_substituted_halogen = 'c1ccc([F,Cl,Br,I])cc1'

    # Aromatic ring with electron-donating group at para position
    hydroxyl_group = '[OX2H]'
    amino_group = '[NX3H2]'
    methyl_group = 'C'
    para_substituted_hydroxyl = 'c1ccc([OX2H])cc1'
    para_substituted_amino = 'c1ccc([NX3H2])cc1'
    para_substituted_methyl = 'c1ccc(C)cc1'

    # Pyridine ring connected via aliphatic linker or aromatic ring
    pyridine_ring = 'n1ccccc1'
    pyridine_with_linker = '[#6]-[#6]-[#6]-n1ccccc1'
    pyridine_with_aromatic_linker = 'c1ccc(-c2ccncc2)cc1'

    # Directly attached pyridine ring to carboxylic acid
    pyridine_carboxylic_acid = 'n1ccccc1C(=O)O'

    # Multiple hydroxyl groups on an aliphatic chain (polyhydroxy acids)
    polyhydroxy_aliphatic = '[CX4][OX2H][CX4][OX2H][CX4][OX2H]'

    # Single terminal hydroxyl group on an aliphatic chain
    terminal_hydroxyl = '[CX4][CX4][CX4][CX4][CX4][OX2H]'

    # Fluorinated alkyl chains or trifluoromethyl groups
    fluorinated_alkyl_chain = '[CX4][CX4](F)(F)F'
    trifluoromethyl_group = '[CX4](F)(F)F'

    # Aldehyde groups adjacent to an aromatic ring
    aromatic_aldehyde = 'c1ccc(C=O)cc1'

    # Simple aliphatic carboxylic acids without additional coordinating groups
    simple_aliphatic_acid = '[#6][CX3](=O)[OX2H1]'

    # Ether linkages combined with terminal amino groups
    ether_linkage = '[#6][OX2][#6][OX2][#6][OX2][#6]'
    terminal_amino_group = '[NX3H2]'

    # Aromatic ketone groups adjacent to the ring with methoxy groups
    aromatic_ketone = 'c1cc(=O)ccc1'
    methoxy_group = '[OX2][CH3]'
    dimethoxy_aromatic = 'c1cc([OX2][CH3])[cH][cH][cH]1[OX2][CH3]'

    # Amide linkages with sulfur-containing side chains
    amide_group = '[NX3][CX3](=O)[#6]'
    sulfur_side_chain = '[#6][SX2][#6]'

    # Aliphatic dicarboxylic acids without additional coordinating groups
    aliphatic_dicarboxylic_acid = 'OC(=O)[CX4][CX4][CX4][CX4]C(=O)O'

    # Heterocyclic rings with electron-withdrawing characteristics adjacent to carboxylic acid
    heterocyclic_carboxylic_acid = '[n,o,s]1cccc1C(=O)O'

    # Define the rules with their associated patterns and predictions
    rules = [
        {
            'number': 1,
            'description': 'Modifiers with an aliphatic carboxylic acid group and a terminal primary amino group (-NH2) lead to high Fe/Hf values (True).',
            'patterns': [
                carboxylic_acid,
                aliphatic_amino_acid
            ],
            'prediction': 1
        },
        {
            'number': 2,
            'description': 'Aromatic carboxylic acids with strong electron-withdrawing groups at the para position (e.g., nitro, bromo) lead to high Fe/Hf values (True).',
            'patterns': [
                carboxylic_acid,
                ['[c][NX3](=O)=O', '[c][F,Cl,Br,I]'],
                aromatic_ring
            ],
            'prediction': 1
        },
        {
            'number': 3,
            'description': 'Modifiers containing sulfur functional groups, such as thiol (-SH) or thioether (-S-) groups, combined with carboxylic acid groups, lead to high Fe/Hf values (True).',
            'patterns': [
                carboxylic_acid,
                [thiol, thioether]
            ],
            'prediction': 1
        },
        {
            'number': 4,
            'description': 'Modifiers with a pyridine ring connected to a carboxylic acid group via an aliphatic linker or additional aromatic ring lead to high Fe/Hf values (True).',
            'patterns': [
                carboxylic_acid,
                [pyridine_with_linker, pyridine_with_aromatic_linker]
            ],
            'prediction': 1
        },
        {
            'number': 5,
            'description': 'Modifiers that are amino acids with simple side chains or less bulky aromatic side chains lead to high Fe/Hf values (True).',
            'patterns': [
                carboxylic_acid,
                amide_group
            ],
            'exclude_patterns': [
                sulfur_side_chain
            ],
            'prediction': 1
        },
        {
            'number': 6,
            'description': 'Modifiers with multiple hydroxyl (-OH) groups on an aliphatic chain (polyhydroxy acids) lead to low Fe/Hf values (False).',
            'patterns': [
                carboxylic_acid,
                polyhydroxy_aliphatic
            ],
            'prediction': -1
        },
        {
            'number': 7,
            'description': 'Modifiers containing fluorinated alkyl chains or trifluoromethyl groups lead to low Fe/Hf values (False).',
            'patterns': [
                carboxylic_acid,
                [fluorinated_alkyl_chain, trifluoromethyl_group]
            ],
            'prediction': -1
        },
        {
            'number': 8,
            'description': 'Modifiers with aldehyde (-CHO) groups adjacent to an aromatic ring lead to low Fe/Hf values (False).',
            'patterns': [
                carboxylic_acid,
                aromatic_aldehyde
            ],
            'prediction': -1
        },
        {
            'number': 9,
            'description': 'Simple aliphatic carboxylic acids without additional coordinating functional groups lead to low Fe/Hf values (False).',
            'patterns': [
                simple_aliphatic_acid
            ],
            'exclude_patterns': [
                [amide_group, thiol, thioether, terminal_primary_amine, terminal_hydroxyl]
            ],
            'prediction': -1
        },
        {
            'number': 10,
            'description': 'Modifiers containing ether linkages combined with terminal amino groups lead to high Fe/Hf values (True).',
            'patterns': [
                carboxylic_acid,
                ether_linkage,
                terminal_amino_group
            ],
            'prediction': 1
        },
        {
            'number': 11,
            'description': 'Modifiers with aromatic ketone groups adjacent to the ring, especially when combined with methoxy (-OCH3) groups, lead to high Fe/Hf values (True).',
            'patterns': [
                carboxylic_acid,
                aromatic_ketone,
                methoxy_group
            ],
            'prediction': 1
        },
        {
            'number': 12,
            'description': 'Modifiers containing both amide linkages and sulfur-containing side chains lead to high Fe/Hf values (True).',
            'patterns': [
                carboxylic_acid,
                amide_group,
                sulfur_side_chain
            ],
            'prediction': 1
        },
        {
            'number': 13,
            'description': 'Modifiers that are aliphatic dicarboxylic acids without additional coordinating groups lead to low Fe/Hf values (False).',
            'patterns': [
                aliphatic_dicarboxylic_acid
            ],
            'exclude_patterns': [
                [amide_group, thiol, thioether, terminal_primary_amine, terminal_hydroxyl]
            ],
            'prediction': -1
        },
        {
            'number': 14,
            'description': 'Modifiers containing heterocyclic rings with strong electron-withdrawing characteristics adjacent to carboxylic acid groups lead to low Fe/Hf values (False).',
            'patterns': [
                heterocyclic_carboxylic_acid
            ],
            'prediction': -1
        },
        {
            'number': 15,
            'description': 'Modifiers with a single carboxylic acid group and additional coordinating groups, such as terminal hydroxyl (-OH) or methoxy (-OCH3) groups on an aliphatic chain, lead to high Fe/Hf values (True).',
            'patterns': [
                carboxylic_acid,
                terminal_hydroxyl
            ],
            'prediction': 1
        }
    ]

    # Compile SMARTS patterns
    for rule in rules:
        compiled_patterns = []
        for pattern in rule.get('patterns', []):
            if isinstance(pattern, list):
                compiled_group = [Chem.MolFromSmarts(p) for p in pattern]
                compiled_patterns.append(compiled_group)
            else:
                compiled_patterns.append([Chem.MolFromSmarts(pattern)])
        rule['compiled_patterns'] = compiled_patterns
        # Compile exclude patterns if any
        if 'exclude_patterns' in rule:
            compiled_excludes = []
            for pattern in rule['exclude_patterns']:
                if isinstance(pattern, list):
                    compiled_group = [Chem.MolFromSmarts(p) for p in pattern]
                    compiled_excludes.append(compiled_group)
                else:
                    compiled_excludes.append([Chem.MolFromSmarts(pattern)])
            rule['compiled_exclude_patterns'] = compiled_excludes

    # Initialize results list
    results = []

    # Process each SMILES string
    for smi in smiles_list:
        mol = Chem.MolFromSmiles(smi)
        if mol is None:
            # If the molecule cannot be parsed, append a row of zeros
            results.append([0]*len(rules))
            continue
        row = []
        for rule in rules:
            try:
                match = True
                # Check exclude patterns if any
                if 'compiled_exclude_patterns' in rule:
                    for group in rule['compiled_exclude_patterns']:
                        for pat in group:
                            if mol.HasSubstructMatch(pat):
                                match = False
                                break
                        if not match:
                            break
                    if not match:
                        row.append(0)
                        continue
                # Check required patterns
                for compiled_group in rule['compiled_patterns']:
                    group_match = False
                    for pat in compiled_group:
                        if mol.HasSubstructMatch(pat):
                            group_match = True
                            break
                    if not group_match:
                        match = False
                        break
                if match:
                    row.append(rule['prediction'])
                else:
                    row.append(0)
            except Exception as e:
                # In case of any error, append 0
                row.append(0)
        results.append(row)
    # Create DataFrame with results
    df = pd.DataFrame(results, columns=[f'Rule {rule["number"]}' for rule in rules])
    return df

--------------------------------------------------
    Target Name: Fe/Hf
    GPT Model: o1-preview-2024-09-12
    ML Model: ETC
    Current_Rules:
    **Start of Rules**

---

**Rule 1**: **Aliphatic Carboxylic Acids with Terminal Primary Amino Groups (-NH₂) Lead to High Fe/Hf Values (`True`)**

*Modifiers that are straight-chain aliphatic carboxylic acids with a terminal primary amino group result in high Fe/Hf values.*

*Explanation*: The presence of both the carboxylate and amino functional groups allows the modifier to act as a bidentate ligand, effectively coordinating with Fe ions and increasing their incorporation into the catalyst. The flexible aliphatic chain facilitates the formation of stable chelate rings with Fe.

*Applicable Modifiers*:

- **High Fe/Hf (`True`)**:
  - 5-aminopentanoic acid
  - 7-aminoheptanoic acid
  - 8-aminooctanoic acid
  - (2S)-6-acetamido-2-aminohexanoic acid
  - 3-[2-(2-aminoethoxy)ethoxy]propanoic acid

---

**Rule 2**: **Aromatic Carboxylic Acids with Strong Electron-Withdrawing Para Substituents Lead to High Fe/Hf Values (`True`); Those with Electron-Donating Para Substituents Lead to Low Fe/Hf Values (`False`)**

*Explanation*: Electron-withdrawing groups (e.g., nitro, bromomethyl, pyridyl) increase the acidity of the carboxylic acid, enhancing the ability of the carboxylate to coordinate with Fe ions. Electron-donating groups (e.g., amino, methyl, hydroxyl) decrease acidity, reducing coordination effectiveness.

*Applicable Modifiers*:

- **High Fe/Hf (`True`)**:
  - 4-nitrobenzoic acid
  - 4-(bromomethyl)benzoic acid
  - 4-pyridin-4-ylbenzoic acid
- **Low Fe/Hf (`False`)**:
  - 4-aminobenzoic acid
  - 4-methylbenzoic acid
  - 3-(4-hydroxyphenyl)propanoic acid
  - 5-(4-hydroxyphenyl)pentanoic acid
  - 2-[(4-hydroxybenzoyl)amino]acetic acid

---

**Rule 3**: **Modifiers Containing Sulfur Functional Groups (Thiol or Thioether) Combined with Carboxylic Acid Groups Lead to High Fe/Hf Values (`True`)**

*Explanation*: Sulfur atoms are soft Lewis bases with lone pairs that can form strong coordination bonds with Fe ions. When combined with a carboxylic acid group, the modifier acts as a multidentate ligand, significantly enhancing Fe coordination.

*Applicable Modifiers*:

- **High Fe/Hf (`True`)**:
  - 4-sulfanylbenzoic acid
  - 3-sulfanylpropanoic acid
  - 2-[[(2S)-2-amino-4-methylsulfanylbutanoyl]amino]acetic acid

---

**Rule 4**: **Simple Aliphatic Carboxylic Acids Without Additional Coordinating Functional Groups Lead to Low Fe/Hf Values (`False`)**

*Explanation*: Without extra functional groups capable of coordinating with Fe ions, these modifiers have limited interaction with Fe, resulting in lower Fe incorporation.

*Applicable Modifiers*:

- **Low Fe/Hf (`False`)**:
  - Octanoic acid
  - 4-oxoheptanedioic acid

---

**Rule 5**: **Modifiers with Multiple Hydroxyl Groups on an Aliphatic Chain Lead to Low Fe/Hf Values (`False`); Those with a Single Terminal Hydroxyl Group May Lead to High Fe/Hf Values (`True`)**

*Explanation*: Multiple hydroxyl groups increase hydrophilicity and can form intramolecular hydrogen bonds, reducing the availability of coordinating sites for Fe ions. A single terminal hydroxyl group remains available for coordination without significant steric hindrance.

*Applicable Modifiers*:

- **Low Fe/Hf (`False`)**:
  - (2R,3S,4R,5R)-2,3,4,5,6-pentahydroxyhexanoic acid (Gluconic acid)
  - 2-[[1,3-dihydroxy-2-(hydroxymethyl)propan-2-yl]oxy]acetic acid
- **High Fe/Hf (`True`)**:
  - 7-hydroxyheptanoic acid

---

**Rule 6**: **Modifiers with Ether Linkages and Terminal Amino or Hydroxyl Groups Lead to High Fe/Hf Values (`True`)**

*Explanation*: Ether oxygen atoms provide flexibility, and terminal amino or hydroxyl groups offer coordination sites for Fe ions. The combination enhances the ability to chelate Fe effectively.

*Applicable Modifiers*:

- **High Fe/Hf (`True`)**:
  - 3-[2-(2-aminoethoxy)ethoxy]propanoic acid
  - 2-[2-(2-methoxyethoxy)ethoxy]acetic acid
  - 7-hydroxyheptanoic acid

---

**Rule 7**: **Modifiers with Fluorinated Alkyl Chains or Trifluoromethyl Groups Lead to Low Fe/Hf Values (`False`)**

*Explanation*: Fluorine's high electronegativity withdraws electron density from coordinating atoms, diminishing their ability to coordinate effectively with Fe ions. This electron-withdrawing effect reduces the nucleophilicity of potential donor atoms in the modifier.

*Applicable Modifiers*:

- **Low Fe/Hf (`False`)**:
  - 2,2,3,3,4,4,5,5,5-nonafluoropentanoic acid
  - 4-[(2,2,2-trifluoroacetyl)amino]butanoic acid

---

**Rule 8**: **Modifiers Containing Heterocyclic Nitrogen Atoms Capable of Chelation Lead to Variable Fe/Hf Values Depending on Linker Flexibility**

*Explanation*: When the heterocyclic nitrogen is connected via a flexible linker, it allows for optimal geometry in forming coordination bonds, leading to high Fe/Hf values. Direct attachment without a flexible linker may hinder coordination due to steric constraints or electronic factors, resulting in low Fe/Hf values.

*Applicable Modifiers*:

- **High Fe/Hf (`True`)**:
  - 4-pyridin-4-ylbutanoic acid (flexible linker)
- **Low Fe/Hf (`False`)**:
  - Pyridine-3-carboxylic acid
  - 1H-pyrazole-4-carboxylic acid
  - 2-oxo-1H-pyridine-4-carboxylic acid

---

**Rule 9**: **Modifiers with Aldehyde Groups Adjacent to an Aromatic Ring Lead to Low Fe/Hf Values (`False`)**

*Explanation*: Aldehyde groups are susceptible to side reactions under reaction conditions and may not coordinate effectively with Fe ions. The presence of an aldehyde can also reduce the overall electron density on the aromatic ring, hindering coordination.

*Applicable Modifiers*:

- **Low Fe/Hf (`False`)**:
  - 5-formyl-2-hydroxybenzoic acid
  - 4-formylbenzoic acid

---

**Rule 10**: **Amino Acids with Aromatic Side Chains Lead to High Fe/Hf Values (`True`) When Side Chains Are Less Electron-Rich; Highly Electron-Rich Aromatic Side Chains Lead to Low Fe/Hf Values (`False`)**

*Explanation*: Aromatic side chains that are less electron-rich can engage in π-π interactions and coordinate with Fe ions more effectively. Highly electron-rich groups, such as indole rings, can hinder coordination due to increased electron density and steric bulk.

*Applicable Modifiers*:

- **High Fe/Hf (`True`)**:
  - (2S)-2-amino-3-phenylpropanoic acid (Phenylalanine)
- **Low Fe/Hf (`False`)**:
  - (2R)-2-amino-3-(1H-indol-3-yl)propanoic acid (Tryptophan)

---

**Rule 11**: **Modifiers with Ketone Groups Conjugated with Aromatic Rings Lead to High Fe/Hf Values (`True`); Aliphatic Ketone Modifiers Lead to Low Fe/Hf Values (`False`)**

*Explanation*: Ketones in conjugation with aromatic rings can participate in coordination through resonance structures, enhancing Fe incorporation. Aliphatic ketones lack this resonance stabilization and may not coordinate as effectively.

*Applicable Modifiers*:

- **High Fe/Hf (`True`)**:
  - 1,3-dioxo-2-benzofuran-5-carboxylic acid
  - 4-(3,4-dimethoxyphenyl)-4-oxobutanoic acid
- **Low Fe/Hf (`False`)**:
  - 4-oxoheptanedioic acid

---

**Rule 12**: **Modifiers Containing Multiple Electron-Withdrawing Functional Groups Enhance Fe/Hf Values (`True`)**

*Explanation*: The combined effect of multiple electron-withdrawing groups increases the acidity and coordination ability of functional groups, facilitating stronger interactions with Fe ions.

*Applicable Modifiers*:

- **High Fe/Hf (`True`)**:
  - 4-nitrobenzoic acid
  - 1,3-dioxo-2-benzofuran-5-carboxylic acid

---

**Rule 13**: **Modifiers with Multiple Coordination Sites (e.g., Amide, Carboxylate, Sulfur-Containing Side Chains) Lead to High Fe/Hf Values (`True`)**

*Explanation*: Multidentate ligands with multiple coordination sites can form stable complexes with Fe ions, increasing Fe incorporation into the catalyst.

*Applicable Modifiers*:

- **High Fe/Hf (`True`)**:
  - 2-[[(2S)-2-amino-4-methylsulfanylbutanoyl]amino]acetic acid

---

**Rule 14**: **Modifiers with Electron-Rich Aromatic Rings Bearing Multiple Electron-Donating Groups Lead to Low Fe/Hf Values (`False`)**

*Explanation*: Electron-donating groups like hydroxyl (-OH) and methoxy (-OCH₃) increase the electron density of the aromatic ring and reduce the acidity of the carboxylic acid group. This decrease in acidity weakens the ability of the carboxylate to coordinate with Fe ions.

*Applicable Modifiers*:

- **Low Fe/Hf (`False`)**:
  - 5-(4-hydroxyphenyl)pentanoic acid
  - 2-[(4-hydroxybenzoyl)amino]acetic acid
  - 3-(4-hydroxyphenyl)propanoic acid

---

**Rule 15**: **Aliphatic Carboxylic Acids with Terminal Hydroxyl Groups Lead to High Fe/Hf Values (`True`), Especially with Longer Chains**

*Explanation*: Terminal hydroxyl groups can coordinate with Fe ions. In longer aliphatic chains, the flexibility and reduced steric hindrance facilitate effective coordination, enhancing Fe incorporation.

*Applicable Modifiers*:

- **High Fe/Hf (`True`)**:
  - 7-hydroxyheptanoic acid

---

**End of Rules**

---

These rules have been developed by analyzing the dataset and considering the underlying physicochemical properties of the modifiers. They illustrate direct combinations of sub-structures and functional groups, providing clear guidance on whether a modifier will lead to high or low Fe/Hf values in the catalyst. The rules cover a broad range of modifiers from the dataset, balancing simplicity and complexity to ensure practical applicability in predicting outcomes based on molecular structures.---------------------------------------------------------------


    Current_Matrix:
    Matrix Generator Message:
Rule 1,Rule 2,Rule 3,Rule 4,Rule 5,Rule 6,Rule 7,Rule 8,Rule 9,Rule 10,Rule 11,Rule 12,Rule 13,Rule 14,Rule 15
0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0
1,0,0,-1,0,0,0,0,0,0,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,1,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0
1,0,0,-1,0,0,0,0,0,0,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0
1,0,0,-1,0,0,0,0,0,0,0,0,0,0,0

---------------------------------------------------------------


    Train Accuracy: 0.5714285714285714; Test Accuracy: 1.0
    Train Support: 0.08571428571428572; Test Support: 0.0
    Train Confidence: 1.0; Test Confidence: 0.5
    Train Lift: 1.9444444444444446; Test Lift: NONE
    Train Leverage: 0.041632653061224496; Test Leverage: NONE
    ----------------------------------------------------------------------------------

    Current Rule Code:
def rule2matrix(smiles_list):
    # Define SMARTS patterns for functional groups and substructures
    
    # Carboxylic acid group (-COOH)
    carboxylic_acid = '[CX3](=O)[OX2H1]'
    
    # Terminal primary amine (-NH2)
    terminal_primary_amine = '[NX3;H2][CX4H2][CX3](=O)[OX2H1]'
    
    # Aliphatic chain of variable length
    aliphatic_chain = '[CX4H2]'  # Represents a CH2 group
    
    # Rule 1: Aliphatic Carboxylic Acids with Terminal Primary Amino Groups (-NH2)
    # High Fe/Hf Value (True)
    rule1_patterns = [
        '[NX3;H2]' + aliphatic_chain * n + carboxylic_acid for n in range(2, 10)
    ]
    
    # Rule 2: Aromatic Carboxylic Acids with EWGs (Electron-Withdrawing Groups) in Para Position
    # High Fe/Hf Value (True)
    ewg_para_substituents = '[c][cX3](=[OX1])[NX3](=O)[O-] | [c][c][F,Cl,Br,I]'
    rule2_pattern = '[c]1ccc(' + ewg_para_substituents + ')cc1' + carboxylic_acid
    
    # Rule 3: Modifiers Containing Sulfur Functional Groups (Thiol or Thioether) Combined with Carboxylic Acid Groups
    # High Fe/Hf Value (True)
    thiol = '[SX2H]'
    thioether = '[#16X2][#6]'  # Sulfur single-bonded to carbon
    rule3_patterns = [
        carboxylic_acid + thiol,
        carboxylic_acid + thioether
    ]
    
    # Rule 4: Simple Aliphatic Carboxylic Acids Without Additional Coordinating Functional Groups
    # Low Fe/Hf Value (False)
    rule4_pattern = carboxylic_acid
    
    # Rule 5: Modifiers with Multiple Hydroxyl Groups on an Aliphatic Chain
    # Low Fe/Hf Value (False)
    multiple_hydroxyl = '[OX2H][CX4]'  # Hydroxyl groups on aliphatic chain
    
    # Rule 6: Modifiers with Ether Linkages and Terminal Amino or Hydroxyl Groups
    # High Fe/Hf Value (True)
    ether_linkage = '[CX4][OX2][CX4]'
    terminal_amino_or_hydroxyl = '([NX3;H2] | [OX2H])'
    rule6_pattern = ether_linkage + terminal_amino_or_hydroxyl + carboxylic_acid
    
    # Rule 7: Modifiers with Fluorinated Alkyl Chains or Trifluoromethyl Groups
    # Low Fe/Hf Value (False)
    fluorinated_chain = '[CX4][F][F][F]'
    rule7_pattern = carboxylic_acid + fluorinated_chain
    
    # Rule 8: Modifiers Containing Heterocyclic Nitrogen Atoms with Flexible Linkers
    # High Fe/Hf Value (True)
    heterocyclic_nitrogen = '[n]'
    flexible_linker = '(' + aliphatic_chain + '{1,5})'
    rule8_pattern = heterocyclic_nitrogen + flexible_linker + carboxylic_acid
    
    # Rule 9: Modifiers with Aldehyde Groups Adjacent to an Aromatic Ring
    # Low Fe/Hf Value (False)
    aromatic_aldehyde = '[c][CX3H](=O)'
    rule9_pattern = aromatic_aldehyde + carboxylic_acid
    
    # Rule 10: Amino Acids with Aromatic Side Chains Less Electron-Rich
    # High Fe/Hf Value (True)
    phenylalanine_pattern = '[NX3;H2][CX4][CX4][c]1ccccc1'
    
    # Rule 11: Modifiers with Conjugated Ketone Groups with Aromatic Rings
    # High Fe/Hf Value (True)
    conjugated_ketone = '[c][CX3](=O)[c]'
    rule11_pattern = conjugated_ketone + carboxylic_acid
    
    # Rule 12: Modifiers with Multiple Electron-Withdrawing Functional Groups
    # High Fe/Hf Value (True)
    multiple_ewgs = '([CX3](=O)[OX1H])([CX3](=O)[OX1H])'
    rule12_pattern = carboxylic_acid + multiple_ewgs
    
    # Rule 13: Modifiers with Multiple Coordination Sites
    # High Fe/Hf Value (True)
    multiple_coord_sites = '([NX3][CX3](=O)[OX1H])'  # Amide and carboxylate
    rule13_pattern = multiple_coord_sites + carboxylic_acid
    
    # Rule 14: Modifiers with Electron-Rich Aromatic Rings Bearing Multiple Electron-Donating Groups
    # Low Fe/Hf Value (False)
    edg_on_aromatic = '[c]([OX2H])[c]([OX2H])[c]'
    rule14_pattern = edg_on_aromatic + carboxylic_acid
    
    # Rule 15: Aliphatic Carboxylic Acids with Terminal Hydroxyl Groups
    # High Fe/Hf Value (True)
    terminal_hydroxyl = '[OX2H][CX4]' + aliphatic_chain + carboxylic_acid
    
    # Compile SMARTS patterns
    patterns = [
        {'number': 1, 'patterns': [Chem.MolFromSmarts(pat) for pat in rule1_patterns], 'prediction': 1},
        {'number': 2, 'patterns': [Chem.MolFromSmarts(rule2_pattern)], 'prediction': 1},
        {'number': 3, 'patterns': [Chem.MolFromSmarts(pat) for pat in rule3_patterns], 'prediction': 1},
        {'number': 4, 'patterns': [Chem.MolFromSmarts(rule4_pattern)], 'prediction': -1},
        {'number': 5, 'patterns': [Chem.MolFromSmarts(multiple_hydroxyl)], 'prediction': -1, 'count_threshold': {'[OX2H]': 2}},
        {'number': 6, 'patterns': [Chem.MolFromSmarts(rule6_pattern)], 'prediction': 1},
        {'number': 7, 'patterns': [Chem.MolFromSmarts(rule7_pattern)], 'prediction': -1},
        {'number': 8, 'patterns': [Chem.MolFromSmarts(rule8_pattern)], 'prediction': 1},
        {'number': 9, 'patterns': [Chem.MolFromSmarts(rule9_pattern)], 'prediction': -1},
        {'number':10, 'patterns': [Chem.MolFromSmarts(phenylalanine_pattern)], 'prediction': 1},
        {'number':11, 'patterns': [Chem.MolFromSmarts(rule11_pattern)], 'prediction': 1},
        {'number':12, 'patterns': [Chem.MolFromSmarts(rule12_pattern)], 'prediction': 1},
        {'number':13, 'patterns': [Chem.MolFromSmarts(rule13_pattern)], 'prediction':1},
        {'number':14, 'patterns': [Chem.MolFromSmarts(rule14_pattern)], 'prediction': -1},
        {'number':15, 'patterns': [Chem.MolFromSmarts(terminal_hydroxyl)], 'prediction':1}
    ]
    
    # Initialize results list
    results = []
    
    # Process each SMILES string
    for smi in smiles_list:
        mol = Chem.MolFromSmiles(smi)
        if mol is None:
            # If the molecule cannot be parsed, append a row of zeros
            results.append([0]*len(patterns))
            continue
        row = []
        for rule in patterns:
            try:
                match = False
                for pat in rule['patterns']:
                    if mol.HasSubstructMatch(pat):
                        # Check for count threshold if specified
                        if 'count_threshold' in rule:
                            count = len(mol.GetSubstructMatches(pat))
                            threshold = rule['count_threshold'].get(pat.GetSmarts(), 1)
                            if count >= threshold:
                                match = True
                                break
                        else:
                            match = True
                            break
                if match:
                    row.append(rule['prediction'])
                else:
                    row.append(0)
            except Exception:
                # In case of any error, append 0
                row.append(0)
        results.append(row)
    
    # Create DataFrame with results
    df = pd.DataFrame(results, columns=[f'Rule {rule['number']}' for rule in patterns])
    return df

--------------------------------------------------
    Target Name: Fe/Hf
    GPT Model: o1-preview-2024-09-12
    ML Model: ETC
    Current_Rules:
    **Start of Rules**

---

**Rule 1**: **Aliphatic Carboxylic Acids with Terminal Primary Amino Groups Lead to High Fe/Hf Values (`True`)**

*Modifiers that are straight-chain aliphatic carboxylic acids with a terminal primary amino group (-NH₂) result in high Fe/Hf values.*

*Explanation*: The presence of both carboxylate and amino functional groups allows the modifier to act as a bidentate ligand, effectively coordinating with Fe ions and increasing their incorporation into the catalyst. The flexible aliphatic chain facilitates the formation of stable chelate rings with Fe.

*Applicable Modifiers*:

- **High Fe/Hf (`True`)**:
  - 5-aminopentanoic acid
  - 7-aminoheptanoic acid
  - 8-aminooctanoic acid
  - (2S)-6-acetamido-2-aminohexanoic acid

---

**Rule 2**: **Aromatic Carboxylic Acids with Strong Electron-Withdrawing Para Substituents Lead to High Fe/Hf Values (`True`); Those with Electron-Donating Para Substituents Lead to Low Fe/Hf Values (`False`)**

*Explanation*: Electron-withdrawing groups (e.g., nitro, bromomethyl) increase the acidity of the carboxylic acid, enhancing the ability of the carboxylate to coordinate with Fe ions. Electron-donating groups (e.g., amino, methyl, hydroxyl) decrease acidity, reducing coordination effectiveness.

*Applicable Modifiers*:

- **High Fe/Hf (`True`)**:
  - 4-nitrobenzoic acid
  - 4-(bromomethyl)benzoic acid
- **Low Fe/Hf (`False`)**:
  - 4-aminobenzoic acid
  - 4-methylbenzoic acid
  - 5-(4-hydroxyphenyl)pentanoic acid
  - 3-(4-hydroxyphenyl)propanoic acid

---

**Rule 3**: **Modifiers Containing Sulfur Functional Groups (Thiol or Thioether) Along with Carboxylic Acid Groups Lead to High Fe/Hf Values (`True`)**

*Explanation*: Sulfur atoms are soft Lewis bases with lone pairs that can form strong coordination bonds with Fe ions. When combined with a carboxylic acid group, the modifier acts as a multidentate ligand, significantly enhancing Fe coordination.

*Applicable Modifiers*:

- **High Fe/Hf (`True`)**:
  - 4-sulfanylbenzoic acid
  - 3-sulfanylpropanoic acid
  - 2-[[(2S)-2-amino-4-methylsulfanylbutanoyl]amino]acetic acid

---

**Rule 4**: **Simple Aliphatic Carboxylic Acids Without Additional Coordinating Functional Groups Lead to Low Fe/Hf Values (`False`)**

*Explanation*: Without extra functional groups capable of coordinating with Fe ions, these modifiers have limited interaction with Fe, resulting in lower Fe incorporation.

*Applicable Modifiers*:

- **Low Fe/Hf (`False`)**:
  - Octanoic acid
  - 4-oxoheptanedioic acid

---

**Rule 5**: **Modifiers with Multiple Hydroxyl Groups on an Aliphatic Chain Lead to Low Fe/Hf Values (`False`); Those with a Single Terminal Hydroxyl Group May Lead to High Fe/Hf Values (`True`)**

*Explanation*: Multiple hydroxyl groups increase hydrophilicity and can form intramolecular hydrogen bonds, reducing the availability of coordinating sites for Fe ions. A single terminal hydroxyl group remains available for coordination without significant steric hindrance.

*Applicable Modifiers*:

- **Low Fe/Hf (`False`)**:
  - (2R,3S,4R,5R)-2,3,4,5,6-pentahydroxyhexanoic acid
  - 2-[[1,3-dihydroxy-2-(hydroxymethyl)propan-2-yl]oxy]acetic acid
- **High Fe/Hf (`True`)**:
  - 7-hydroxyheptanoic acid

---

**Rule 6**: **Modifiers with Ether Linkages and Terminal Amino or Hydroxyl Groups Lead to High Fe/Hf Values (`True`)**

*Explanation*: Ether oxygen atoms provide flexibility, and terminal amino or hydroxyl groups offer coordination sites for Fe ions. The combination enhances the ability to chelate Fe effectively.

*Applicable Modifiers*:

- **High Fe/Hf (`True`)**:
  - 3-[2-(2-aminoethoxy)ethoxy]propanoic acid
  - 2-[2-(2-methoxyethoxy)ethoxy]acetic acid

---

**Rule 7**: **Modifiers with Fluorinated Alkyl Chains or Trifluoromethyl Groups Lead to Low Fe/Hf Values (`False`)**

*Explanation*: Fluorine's high electronegativity withdraws electron density from coordinating atoms, diminishing their ability to coordinate effectively with Fe ions. This electron-withdrawing effect reduces the nucleophilicity of potential donor atoms in the modifier.

*Applicable Modifiers*:

- **Low Fe/Hf (`False`)**:
  - 2,2,3,3,4,4,5,5,5-nonafluoropentanoic acid
  - 4-[(2,2,2-trifluoroacetyl)amino]butanoic acid

---

**Rule 8**: **Modifiers with Aldehyde Groups Adjacent to Aromatic Rings Lead to Low Fe/Hf Values (`False`)**

*Explanation*: Aldehyde groups are susceptible to side reactions under reaction conditions and may not coordinate effectively with Fe ions. The presence of an aldehyde can also reduce the overall electron density on the aromatic ring, hindering coordination.

*Applicable Modifiers*:

- **Low Fe/Hf (`False`)**:
  - 5-formyl-2-hydroxybenzoic acid
  - 4-formylbenzoic acid

---

**Rule 9**: **Modifiers with Ketone Groups Conjugated with Aromatic Rings Lead to High Fe/Hf Values (`True`); Aliphatic Ketone Modifiers Lead to Low Fe/Hf Values (`False`)**

*Explanation*: Ketones in conjugation with aromatic rings can participate in coordination through resonance structures, enhancing Fe incorporation. Aliphatic ketones lack this resonance stabilization and may not coordinate as effectively.

*Applicable Modifiers*:

- **High Fe/Hf (`True`)**:
  - 1,3-dioxo-2-benzofuran-5-carboxylic acid
  - 4-(3,4-dimethoxyphenyl)-4-oxobutanoic acid
- **Low Fe/Hf (`False`)**:
  - 4-oxoheptanedioic acid

---

**Rule 10**: **Amino Acids with Aromatic Side Chains Lead to High Fe/Hf Values (`True`) When Side Chains Are Less Electron-Rich; Highly Electron-Rich Aromatic Side Chains Lead to Low Fe/Hf Values (`False`)**

*Explanation*: Aromatic side chains that are less electron-rich can engage in π-π interactions and coordinate with Fe ions more effectively. Highly electron-rich groups, such as indole rings, can hinder coordination due to increased electron density and steric bulk.

*Applicable Modifiers*:

- **High Fe/Hf (`True`)**:
  - (2S)-2-amino-3-phenylpropanoic acid
- **Low Fe/Hf (`False`)**:
  - (2R)-2-amino-3-(1H-indol-3-yl)propanoic acid

---

**Rule 11**: **Modifiers Containing Heterocyclic Nitrogen Atoms with Flexible Linkers Lead to High Fe/Hf Values (`True`); Directly Attached Heterocycles May Lead to Low Fe/Hf Values (`False`)**

*Explanation*: When the heterocyclic nitrogen is connected via a flexible linker, it allows for optimal geometry in forming coordination bonds, leading to high Fe/Hf values. Direct attachment without a flexible linker may hinder coordination due to steric constraints or electronic factors.

*Applicable Modifiers*:

- **High Fe/Hf (`True`)**:
  - 4-pyridin-4-ylbutanoic acid
  - 4-pyridin-4-ylbenzoic acid
- **Low Fe/Hf (`False`)**:
  - Pyridine-3-carboxylic acid
  - 2-oxo-1H-pyridine-4-carboxylic acid
  - 1H-pyrazole-4-carboxylic acid

---

**Rule 12**: **Modifiers Containing Multiple Electron-Withdrawing Functional Groups Enhance Fe/Hf Values (`True`)**

*Explanation*: The combined effect of multiple electron-withdrawing groups increases the acidity and coordination ability of functional groups, facilitating stronger interactions with Fe ions.

*Applicable Modifiers*:

- **High Fe/Hf (`True`)**:
  - 4-nitrobenzoic acid
  - 1,3-dioxo-2-benzofuran-5-carboxylic acid

---

**Rule 13**: **Modifiers with Multiple Electron-Donating Groups on Aromatic Rings Lead to Low Fe/Hf Values (`False`)**

*Explanation*: Electron-donating groups like hydroxyl (-OH) and methoxy (-OCH₃) increase the electron density of the aromatic ring and reduce the acidity of the carboxylic acid group. This decrease in acidity weakens the ability of the carboxylate to coordinate with Fe ions.

*Applicable Modifiers*:

- **Low Fe/Hf (`False`)**:
  - 5-(4-hydroxyphenyl)pentanoic acid
  - 2-[(4-hydroxybenzoyl)amino]acetic acid
  - 3-(4-hydroxyphenyl)propanoic acid
  - 4-(3,4-dimethoxyphenyl)-4-oxobutanoic acid (Note: Despite being in the dataset as `True`, this compound has multiple methoxy groups which typically lead to `False`; however, the ketone group may enhance Fe coordination, indicating an exception.)

---

**End of Rules**

---

These rules have been developed by analyzing the dataset and considering the underlying physicochemical properties of the modifiers. They illustrate direct combinations of sub-structures and functional groups, providing clear guidance on whether a modifier will lead to high or low Fe/Hf values in the catalyst. The rules cover a broad range of modifiers from the dataset, balancing simplicity and complexity to ensure practical applicability in predicting outcomes based on molecular structures.---------------------------------------------------------------


    Current_Matrix:
    Matrix Generator Message:
Rule 1,Rule 2,Rule 3,Rule 4,Rule 5,Rule 6,Rule 7,Rule 8,Rule 9,Rule 10,Rule 11,Rule 12,Rule 13
0,0,0,0,-1,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,-1,0,0,0,0,0,0,0,0
1,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,-1,0,0,0,0,0,0,0,0
0,0,0,0,-1,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,-1,0,0,0,0,0,0,0,0
0,0,1,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,1,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,-1,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,1,0,0,0,0,0,0,0
0,0,1,0,0,0,0,0,0,0,0,0,0
0,0,0,0,-1,0,0,-1,0,0,0,0,0
0,0,0,0,0,0,0,-1,0,0,0,0,0
0,1,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,1,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,1,0,0,0,0,0,0,-1
0,0,0,0,-1,0,0,0,0,0,0,0,0
0,0,0,0,-1,0,0,0,0,0,0,0,0
0,0,0,0,0,0,-1,0,0,0,0,0,0
0,0,0,0,-1,0,0,0,0,0,0,0,0
0,0,0,0,-1,0,0,0,0,0,0,0,0
1,0,0,0,0,0,0,0,0,0,0,0,0
1,0,0,0,0,1,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0
1,0,0,0,0,0,0,0,0,0,0,0,0

---------------------------------------------------------------


    Train Accuracy: 0.7714285714285715; Test Accuracy: 1.0
    Train Support: 0.10476190476190476; Test Support: 0.0
    Train Confidence: 1.0; Test Confidence: 0.5
    Train Lift: 1.9444444444444446; Test Lift: NONE
    Train Leverage: 0.05088435374149661; Test Leverage: NONE
    ----------------------------------------------------------------------------------

    Current Rule Code:
def rule2matrix(smiles_list):
    # Define SMARTS patterns for functional groups and structural features

    # Carboxylic acid group (-COOH)
    carboxylic_acid = '[CX3](=O)[OX1H0-,OX2H1]'

    # Aliphatic chain (at least two carbons)
    aliphatic_chain = '[CX4H2][CX4H2]'

    # Terminal primary amino group (-NH2) attached to primary carbon
    terminal_primary_amino = '[CX4H2][NX3H2]'

    # Aromatic atoms
    aromatic_atoms = '[a]'

    # Electron-withdrawing groups (EWGs) on aromatic rings
    ewg_patterns = [
        '[c][NX3+](=O)[O-]',     # Nitro group
        '[c][C#N]',              # Cyano group
        '[c][CX3](=O)[OX1H0-,OX2H1,O-]',   # Carbonyl group on aromatic
        '[c][F,Cl,Br,I]',        # Halogens on aromatic
        '[c][CX4](F)(F)F'        # Trifluoromethyl group
    ]

    # Electron-donating groups (EDGs) on aromatic rings
    edg_patterns = [
        '[c][NX3H2]',            # Amino group on aromatic
        '[c][OX2H]',             # Hydroxyl group on aromatic
        '[c][OX2][CX4H3]',       # Methoxy group on aromatic
        '[c][CX4H3]'             # Methyl group on aromatic
    ]

    # Sulfur functional groups
    sulfur_functional_group = [
        '[SX2H]',                # Thiol group
        '[#16X2][#6]'            # Thioether group
    ]

    # Multiple hydroxyl groups on aliphatic chain
    multiple_hydroxyls = '[OX2H]'

    # Ether linkage with terminal amino or hydroxyl groups
    ether_linkage = '[#6][OX2][#6]'
    terminal_amino = '[NX3H2]'
    terminal_hydroxyl = '[OX2H]'

    # Fluorinated alkyl chains or trifluoromethyl groups
    fluorinated_chain_patterns = [
        '[CX4](F)(F)(F)',        # Trifluoromethyl group
        'F[CX4](F)[CX4](F)F'     # Perfluoroalkyl chain (simplified)
    ]

    # Aldehyde group adjacent to aromatic ring
    aromatic_aldehyde = '[c][CX3H](=O)'

    # Ketone groups conjugated with aromatic ring
    conjugated_ketone = '[c][CX3](=O)[c]'

    # Aliphatic ketone group
    aliphatic_ketone = '[CX3](=O)[CX4]'

    # Heterocyclic nitrogen with flexible linker
    heterocyclic_nitrogen_with_linker = '[#6][CX2][CX2][n][a]'

    # Indole ring
    indole_ring = 'c1c[cH][nH]c[cH]1'  # Simple indole pattern

    # Patterns for aromatic rings
    aromatic_ring = '[c]'

    # Compile SMARTS patterns
    patterns = {
        'carboxylic_acid': Chem.MolFromSmarts(carboxylic_acid),
        'aliphatic_chain': Chem.MolFromSmarts(aliphatic_chain),
        'terminal_primary_amino': Chem.MolFromSmarts(terminal_primary_amino),
        'aromatic_atoms': Chem.MolFromSmarts(aromatic_atoms),
        'multiple_hydroxyls': Chem.MolFromSmarts(multiple_hydroxyls),
        'ether_linkage': Chem.MolFromSmarts(ether_linkage),
        'terminal_amino': Chem.MolFromSmarts(terminal_amino),
        'terminal_hydroxyl': Chem.MolFromSmarts(terminal_hydroxyl),
        'aromatic_aldehyde': Chem.MolFromSmarts(aromatic_aldehyde),
        'conjugated_ketone': Chem.MolFromSmarts(conjugated_ketone),
        'aliphatic_ketone': Chem.MolFromSmarts(aliphatic_ketone),
        'heterocyclic_nitrogen_with_linker': Chem.MolFromSmarts(heterocyclic_nitrogen_with_linker),
        'indole_ring': Chem.MolFromSmarts(indole_ring),
        'aromatic_ring': Chem.MolFromSmarts(aromatic_ring)
    }

    # Compile EWG and EDG patterns
    ewg_mols = [Chem.MolFromSmarts(pat) for pat in ewg_patterns]
    edg_mols = [Chem.MolFromSmarts(pat) for pat in edg_patterns]
    sulfur_mols = [Chem.MolFromSmarts(pat) for pat in sulfur_functional_group]
    fluorinated_chain_mols = [Chem.MolFromSmarts(pat) for pat in fluorinated_chain_patterns]

    # Define the rules with their associated patterns and predictions
    rules = [
        {
            'number': 1,
            'description': 'Aliphatic Carboxylic Acids with Terminal Primary Amino Groups Lead to High Fe/Hf Values',
            'include': ['carboxylic_acid', 'terminal_primary_amino'],
            'exclude': ['aromatic_atoms'],
            'prediction': 1
        },
        {
            'number': 2,
            'description': 'Aromatic Carboxylic Acids with Strong Electron-Withdrawing Para Substituents Lead to High Fe/Hf Values; Those with Electron-Donating Para Substituents Lead to Low Fe/Hf Values',
            'include': ['carboxylic_acid', 'aromatic_ring'],
            'ewg_include': ewg_mols,
            'edg_exclude': edg_mols,
            'prediction': 1
        },
        {
            'number': 3,
            'description': 'Modifiers Containing Sulfur Functional Groups (Thiol or Thioether) Along with Carboxylic Acid Groups Lead to High Fe/Hf Values',
            'include': ['carboxylic_acid'],
            'sulfur_include': sulfur_mols,
            'prediction': 1
        },
        {
            'number': 4,
            'description': 'Simple Aliphatic Carboxylic Acids Without Additional Coordinating Functional Groups Lead to Low Fe/Hf Values',
            'include': ['carboxylic_acid'],
            'exclude': ['terminal_primary_amino', 'aromatic_atoms', 'multiple_hydroxyls', 'ether_linkage', 'aromatic_ring', 'terminal_amino', 'terminal_hydroxyl'],
            'prediction': -1
        },
        {
            'number': 5,
            'description': 'Modifiers with Multiple Hydroxyl Groups on an Aliphatic Chain Lead to Low Fe/Hf Values',
            'include': ['carboxylic_acid', 'multiple_hydroxyls'],
            'hydroxyl_count': 2,  # At least 2 hydroxyl groups
            'prediction': -1
        },
        {
            'number': 6,
            'description': 'Modifiers with Ether Linkages and Terminal Amino or Hydroxyl Groups Lead to High Fe/Hf Values',
            'include': ['carboxylic_acid', 'ether_linkage'],
            'terminal_include': ['terminal_amino', 'terminal_hydroxyl'],
            'prediction': 1
        },
        {
            'number': 7,
            'description': 'Modifiers with Fluorinated Alkyl Chains or Trifluoromethyl Groups Lead to Low Fe/Hf Values',
            'include': ['carboxylic_acid'],
            'fluorinated_include': fluorinated_chain_mols,
            'prediction': -1
        },
        {
            'number': 8,
            'description': 'Modifiers with Aldehyde Groups Adjacent to Aromatic Rings Lead to Low Fe/Hf Values',
            'include': ['carboxylic_acid', 'aromatic_aldehyde'],
            'prediction': -1
        },
        {
            'number': 9,
            'description': 'Modifiers with Ketone Groups Conjugated with Aromatic Rings Lead to High Fe/Hf Values',
            'include': ['carboxylic_acid', 'conjugated_ketone'],
            'prediction': 1
        },
        {
            'number': 10,
            'description': 'Amino Acids with Aromatic Side Chains Lead to High Fe/Hf Values When Side Chains Are Less Electron-Rich',
            'include': ['carboxylic_acid', 'terminal_primary_amino', 'aromatic_ring'],
            'exclude': ['indole_ring'],
            'prediction': 1
        },
        {
            'number': 11,
            'description': 'Modifiers Containing Heterocyclic Nitrogen Atoms with Flexible Linkers Lead to High Fe/Hf Values',
            'include': ['carboxylic_acid', 'heterocyclic_nitrogen_with_linker'],
            'prediction': 1
        },
        {
            'number': 12,
            'description': 'Modifiers Containing Multiple Electron-Withdrawing Functional Groups Enhance Fe/Hf Values',
            'include': ['carboxylic_acid', 'aromatic_ring'],
            'ewg_multiple_include': ewg_mols,
            'ewg_count': 2,
            'prediction': 1
        },
        {
            'number': 13,
            'description': 'Modifiers with Multiple Electron-Donating Groups on Aromatic Rings Lead to Low Fe/Hf Values',
            'include': ['carboxylic_acid', 'aromatic_ring'],
            'edg_multiple_include': edg_mols,
            'edg_count': 2,
            'prediction': -1
        }
    ]

    # Initialize results list
    results = []

    for smi in smiles_list:
        mol = Chem.MolFromSmiles(smi)
        if mol is None:
            # Cannot parse SMILES, append zeros
            results.append([0]*len(rules))
            continue
        row = []
        for rule in rules:
            try:
                match = True
                # Apply exclude patterns
                if 'exclude' in rule:
                    for key in rule['exclude']:
                        patt = patterns.get(key)
                        if patt and mol.HasSubstructMatch(patt):
                            match = False
                            break
                    if not match:
                        row.append(0)
                        continue
                # Check include patterns
                for key in rule.get('include', []):
                    patt = patterns.get(key)
                    if patt and not mol.HasSubstructMatch(patt):
                        match = False
                        break
                if not match:
                    row.append(0)
                    continue
                # Check special includes for this rule
                if 'ewg_include' in rule:
                    ewg_match = False
                    for patt in rule['ewg_include']:
                        if mol.HasSubstructMatch(patt):
                            ewg_match = True
                            break
                    if not ewg_match:
                        match = False
                if 'edg_exclude' in rule:
                    for patt in rule['edg_exclude']:
                        if mol.HasSubstructMatch(patt):
                            match = False
                            break
                if 'sulfur_include' in rule:
                    sulfur_match = False
                    for patt in rule['sulfur_include']:
                        if mol.HasSubstructMatch(patt):
                            sulfur_match = True
                            break
                    if not sulfur_match:
                        match = False
                if 'fluorinated_include' in rule:
                    fluorinated_match = False
                    for patt in rule['fluorinated_include']:
                        if mol.HasSubstructMatch(patt):
                            fluorinated_match = True
                            break
                    if not fluorinated_match:
                        match = False
                if 'terminal_include' in rule:
                    terminal_match = False
                    for key in rule['terminal_include']:
                        patt = patterns.get(key)
                        if patt and mol.HasSubstructMatch(patt):
                            terminal_match = True
                            break
                    if not terminal_match:
                        match = False
                if 'hydroxyl_count' in rule:
                    hydroxyl_patt = patterns.get('multiple_hydroxyls')
                    matches = mol.GetSubstructMatches(hydroxyl_patt)
                    if len(matches) < rule['hydroxyl_count']:
                        match = False
                if 'ewg_multiple_include' in rule and 'ewg_count' in rule:
                    ewg_count = 0
                    for patt in rule['ewg_multiple_include']:
                        matches = mol.GetSubstructMatches(patt)
                        ewg_count += len(matches)
                    if ewg_count < rule['ewg_count']:
                        match = False
                if 'edg_multiple_include' in rule and 'edg_count' in rule:
                    edg_count = 0
                    for patt in rule['edg_multiple_include']:
                        matches = mol.GetSubstructMatches(patt)
                        edg_count += len(matches)
                    if edg_count < rule['edg_count']:
                        match = False
                # Finally, append prediction if match is still True
                if match:
                    row.append(rule['prediction'])
                else:
                    row.append(0)
            except Exception as e:
                # In case of any error, append 0
                row.append(0)
        results.append(row)
    # Create DataFrame with results
    df = pd.DataFrame(results, columns=[f'Rule {rule['number']}' for rule in rules])
    return df
--------------------------------------------------
    Target Name: Fe/Hf
    GPT Model: o1-preview-2024-09-12
    ML Model: ETC
    Current_Rules:
    **Start of Rules**

---

**Rule 1**: **Aliphatic Carboxylic Acids with Terminal Primary Amino Groups Result in High Fe/Hf Values (`True`)**

*Modifiers that are straight-chain aliphatic carboxylic acids with a terminal primary amino group (-NH₂) lead to high Fe/Hf values.*

**Explanation**: The presence of both carboxylate and amino groups allows the modifier to act as a bidentate ligand, effectively coordinating with Fe ions. The flexible aliphatic chain facilitates the formation of stable chelate structures, enhancing Fe incorporation into the catalyst.

**Applicable Modifiers**:

- **High Fe/Hf (`True`)**:
  - 5-aminopentanoic acid
  - 7-aminoheptanoic acid
  - 8-aminooctanoic acid
  - (2S)-6-acetamido-2-aminohexanoic acid

---

**Rule 2**: **Aromatic Carboxylic Acids with Electron-Withdrawing Para Substituents Lead to High Fe/Hf Values (`True`); Those with Electron-Donating Para Substituents Lead to Low Fe/Hf Values (`False`)**

*Modifiers that are aromatic carboxylic acids with strong electron-withdrawing groups at the para position enhance Fe coordination, while those with electron-donating groups reduce it.*

**Explanation**: Electron-withdrawing groups (e.g., nitro, bromomethyl) increase the acidity of the carboxylic acid, enhancing the carboxylate's ability to coordinate with Fe ions. Electron-donating groups (e.g., amino, methyl, hydroxyl) decrease acidity, reducing coordination effectiveness.

**Applicable Modifiers**:

- **High Fe/Hf (`True`)**:
  - 4-nitrobenzoic acid
  - 4-(bromomethyl)benzoic acid
- **Low Fe/Hf (`False`)**:
  - 4-aminobenzoic acid
  - 4-methylbenzoic acid
  - 5-(4-hydroxyphenyl)pentanoic acid
  - 3-(4-hydroxyphenyl)propanoic acid

---

**Rule 3**: **Modifiers Containing Sulfur Functional Groups (Thiol or Thioether) Along with Carboxylic Acid Groups Lead to High Fe/Hf Values (`True`)**

*Modifiers that include sulfur-containing functional groups in addition to carboxylic acids enhance Fe incorporation.*

**Explanation**: Sulfur atoms are soft Lewis bases with lone pairs that can form strong coordination bonds with Fe ions. The combination of sulfur and carboxylate groups allows the modifier to act as a multidentate ligand, significantly improving Fe coordination.

**Applicable Modifiers**:

- **High Fe/Hf (`True`)**:
  - 4-sulfanylbenzoic acid
  - 3-sulfanylpropanoic acid
  - 2-[[(2S)-2-amino-4-methylsulfanylbutanoyl]amino]acetic acid

---

**Rule 4**: **Simple Aliphatic Carboxylic Acids Without Additional Coordinating Functional Groups Lead to Low Fe/Hf Values (`False`)**

*Modifiers that are straight-chain aliphatic carboxylic acids lacking additional coordinating groups result in low Fe/Hf values.*

**Explanation**: Without extra functional groups capable of coordinating with Fe ions, these modifiers have limited interaction with Fe, resulting in lower Fe incorporation into the catalyst.

**Applicable Modifiers**:

- **Low Fe/Hf (`False`)**:
  - Octanoic acid
  - 4-oxoheptanedioic acid

---

**Rule 5**: **Modifiers with Multiple Hydroxyl Groups on an Aliphatic Chain Lead to Low Fe/Hf Values (`False`); Modifiers with a Single Terminal Hydroxyl Group May Lead to High Fe/Hf Values (`True`)**

*The number and position of hydroxyl groups on the modifier affect Fe coordination.*

**Explanation**: Multiple hydroxyl groups increase hydrophilicity and can form intramolecular hydrogen bonds, reducing the availability of coordinating sites for Fe ions. A single terminal hydroxyl group remains available for coordination without significant steric hindrance.

**Applicable Modifiers**:

- **Low Fe/Hf (`False`)**:
  - (2R,3S,4R,5R)-2,3,4,5,6-pentahydroxyhexanoic acid
  - 2-[[1,3-dihydroxy-2-(hydroxymethyl)propan-2-yl]oxy]acetic acid
- **High Fe/Hf (`True`)**:
  - 7-hydroxyheptanoic acid

---

**Rule 6**: **Modifiers with Ether Linkages and Terminal Amino or Hydroxyl Groups Lead to High Fe/Hf Values (`True`)**

*Modifiers featuring ether linkages with terminal coordinating groups enhance Fe incorporation.*

**Explanation**: Ether oxygen atoms provide flexibility, allowing the molecule to adopt conformations favorable for coordination. Terminal amino or hydroxyl groups offer strong coordination sites for Fe ions, enhancing the overall binding affinity.

**Applicable Modifiers**:

- **High Fe/Hf (`True`)**:
  - 3-[2-(2-aminoethoxy)ethoxy]propanoic acid
  - 2-[2-(2-methoxyethoxy)ethoxy]acetic acid

---

**Rule 7**: **Modifiers with Fluorinated Alkyl Chains or Trifluoromethyl Groups Lead to Low Fe/Hf Values (`False`)**

*The presence of fluorine atoms in the alkyl chain or functional groups reduces Fe coordination.*

**Explanation**: Fluorine's high electronegativity withdraws electron density from potential coordinating atoms, diminishing their ability to coordinate effectively with Fe ions. This electron-withdrawing effect reduces the nucleophilicity of donor atoms in the modifier.

**Applicable Modifiers**:

- **Low Fe/Hf (`False`)**:
  - 2,2,3,3,4,4,5,5,5-nonafluoropentanoic acid
  - 4-[(2,2,2-trifluoroacetyl)amino]butanoic acid

---

**Rule 8**: **Modifiers with Aldehyde Groups Adjacent to Aromatic Rings Lead to Low Fe/Hf Values (`False`)**

*Modifiers that have aldehyde groups directly attached to aromatic rings tend to result in low Fe/Hf values.*

**Explanation**: Aldehyde groups can be susceptible to side reactions under the reaction conditions and may not coordinate effectively with Fe ions. Additionally, the aldehyde can decrease the electron density of the aromatic ring, hindering coordination.

**Applicable Modifiers**:

- **Low Fe/Hf (`False`)**:
  - 5-formyl-2-hydroxybenzoic acid
  - 4-formylbenzoic acid

---

**Rule 9**: **Modifiers with Ketone Groups Conjugated with Aromatic Rings Lead to High Fe/Hf Values (`True`); Aliphatic Ketone Modifiers Without Conjugation Lead to Low Fe/Hf Values (`False`)**

*The nature of the ketone and its position relative to aromatic systems influence Fe coordination.*

**Explanation**: Ketones conjugated with aromatic rings can participate in resonance structures, enhancing the ability to coordinate with Fe ions. Aliphatic ketones lacking conjugation do not benefit from this effect and may not coordinate as effectively.

**Applicable Modifiers**:

- **High Fe/Hf (`True`)**:
  - 1,3-dioxo-2-benzofuran-5-carboxylic acid
- **Low Fe/Hf (`False`)**:
  - 4-oxoheptanedioic acid

*Note*: **4-(3,4-dimethoxyphenyl)-4-oxobutanoic acid** is an exception, as it possesses both a conjugated ketone and electron-donating methoxy groups. The conjugation appears to dominate, resulting in a high Fe/Hf value.

---

**Rule 10**: **Amino Acids with Aromatic Side Chains Lead to High Fe/Hf Values (`True`), Except When the Side Chain is Highly Electron-Rich, Leading to Low Fe/Hf Values (`False`)**

*The electronic nature of the aromatic side chain in amino acids affects Fe coordination.*

**Explanation**: Amino acids with less electron-rich aromatic side chains (e.g., phenylalanine) can coordinate effectively with Fe ions. Highly electron-rich side chains (e.g., indole ring of tryptophan) may result in steric hindrance or unfavorable electronic interactions, reducing Fe coordination.

**Applicable Modifiers**:

- **High Fe/Hf (`True`)**:
  - (2S)-2-amino-3-phenylpropanoic acid (Phenylalanine)
- **Low Fe/Hf (`False`)**:
  - (2R)-2-amino-3-(1H-indol-3-yl)propanoic acid (Tryptophan)

---

**Rule 11**: **Modifiers Containing Heterocyclic Nitrogen Atoms with Flexible Linkers Lead to High Fe/Hf Values (`True`); Those Directly Attached Without Flexibility Lead to Low Fe/Hf Values (`False`)**

*The presence and positioning of heterocyclic nitrogen atoms influence Fe coordination.*

**Explanation**: When a heterocyclic nitrogen is connected via a flexible linker, it allows optimal spatial orientation for coordination with Fe ions. Direct attachment without flexibility may hinder effective coordination due to steric constraints or electronic factors.

**Applicable Modifiers**:

- **High Fe/Hf (`True`)**:
  - 4-pyridin-4-ylbutanoic acid
  - 4-pyridin-4-ylbenzoic acid
- **Low Fe/Hf (`False`)**:
  - Pyridine-3-carboxylic acid
  - 2-oxo-1H-pyridine-4-carboxylic acid
  - 1H-pyrazole-4-carboxylic acid

---

**Rule 12**: **Modifiers with Multiple Electron-Donating Groups on Aromatic Rings Lead to Low Fe/Hf Values (`False`)**

*The cumulative effect of electron-donating groups reduces Fe coordination.*

**Explanation**: Electron-donating groups like hydroxyl (-OH) and methoxy (-OCH₃) increase the electron density of the aromatic ring and decrease the acidity of the carboxylic acid group. This reduction in acidity weakens the carboxylate's ability to coordinate with Fe ions.

**Applicable Modifiers**:

- **Low Fe/Hf (`False`)**:
  - 5-(4-hydroxyphenyl)pentanoic acid
  - 3-(4-hydroxyphenyl)propanoic acid
  - 2-[(4-hydroxybenzoyl)amino]acetic acid

---

**Rule 13**: **Modifiers with Ether Linkages and Multiple Methoxy Groups on Aromatic Rings May Lead to High Fe/Hf Values (`True`) Due to Additional Coordination Sites**

*Certain modifiers defy the general trend due to unique structural features.*

**Explanation**: While multiple methoxy groups are electron-donating and typically reduce Fe coordination, the presence of ether linkages and conjugated systems can provide additional coordination sites or resonance stabilization that enhances Fe incorporation.

**Applicable Modifier**:

- **High Fe/Hf (`True`)**:
  - 4-(3,4-dimethoxyphenyl)-4-oxobutanoic acid

---

**Rule 14**: **Modifiers with Multiple Electron-Withdrawing Functional Groups Enhance Fe/Hf Values (`True`)**

*The presence of multiple electron-withdrawing groups increases Fe coordination propensity.*

**Explanation**: Electron-withdrawing groups (e.g., nitro, carbonyl) increase the acidity of coordinating groups and enhance their ability to bind Fe ions. The cumulative effect strengthens the coordination bond formation.

**Applicable Modifiers**:

- **High Fe/Hf (`True`)**:
  - 4-nitrobenzoic acid
  - 1,3-dioxo-2-benzofuran-5-carboxylic acid

---

**Rule 15**: **Modifiers with Aliphatic Chains Containing Terminal Functional Groups (Other Than Amino or Hydroxyl) May Lead to Variable Fe/Hf Values Based on the Nature of the Functional Group**

*The specific functional group at the terminal position influences Fe coordination.*

**Explanation**: Terminal functional groups such as carboxylates, aldehydes, or other non-coordinating groups may not enhance Fe incorporation unless they possess strong coordinating ability. The Fe/Hf value depends on the group's ability to donate electrons and form stable complexes with Fe ions.

**Applicable Modifiers**:

- **Variable Fe/Hf Values**:
  - 4-oxoheptanedioic acid (`False`)
  - 4-[(2,2,2-trifluoroacetyl)amino]butanoic acid (`False`)
  - Others as applicable

---

**End of Rules**

---

These rules have been refined to align closely with the dataset and underlying physicochemical principles. They illustrate direct combinations of functional groups in the modifiers and provide clear predictions of whether a modifier will lead to high or low Fe/Hf values. The rules prioritize broader coverage of the dataset while maintaining a balance between simplicity and complexity, ensuring practical applicability in predicting outcomes based on molecular structures.---------------------------------------------------------------


    Current_Matrix:
    Matrix Generator Message:
Rule 1,Rule 2,Rule 3,Rule 4,Rule 5,Rule 6,Rule 7,Rule 8,Rule 9,Rule 10,Rule 11,Rule 12,Rule 13,Rule 14,Rule 15
1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0
1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0
0,0,1,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0
1,0,0,0,0,0,0,0,0,1,0,0,0,0,0
0,0,0,-1,0,0,-1,0,0,0,0,0,0,0,0
1,0,0,0,0,0,0,0,0,1,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0
0,0,1,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0
1,0,1,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0
0,0,0,-1,0,0,0,0,-1,0,0,0,0,0,0
0,0,0,-1,0,0,-1,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0
1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1,0,0,0,0,1,0,0,0,0,0,0,0,0,0
1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1,0,0,0,0,0,0,0,0,0,0,0,0,0,0

---------------------------------------------------------------


    Train Accuracy: 0.7714285714285715; Test Accuracy: 0.0
    Train Support: 0.22857142857142856; Test Support: 0.0
    Train Confidence: 0.8518518518518517; Test Confidence: 0.3333333333333333
    Train Lift: 1.719922536916001; Test Lift: NONE
    Train Leverage: 0.0780952380952381; Test Leverage: NONE
    ----------------------------------------------------------------------------------

    Current Rule Code:
def rule2matrix(smiles_list):
    # Define SMARTS patterns for functional groups according to the rules

    # Rule 1: Aliphatic Carboxylic Acids with Terminal Primary Amino Groups
    carboxylic_acid = Chem.MolFromSmarts('[CX3](=O)[OX1H0-,OX2H1]')
    primary_aliphatic_amine = Chem.MolFromSmarts('[NX3;H2][CX4;!$(C=[O,N,S])]')  # Terminal primary amine attached to aliphatic carbon

    # Rule 2: Aromatic Carboxylic Acids with Para Substituents
    # Generalized patterns for EWGs and EDGs at para position
    ewg_substituents = ['[N+](=O)[O-]', '[C](=O)[OX1H0-,OX2H1]', '[C]#[N]', '[S](=O)(=O)[#6]']  # Nitro, carboxylate, cyano, sulfonyl groups
    edg_substituents = ['[NH2]', '[OH]', '[OCH3]', '[CH3]']  # Amino, hydroxyl, methoxy, methyl groups

    ewg_para_patterns = []
    edg_para_patterns = []
    for ewg in ewg_substituents:
        pattern = f'c1cc({ewg})cc([C](=O)[OX1H0-,OX2H1])c1'
        ewg_para_patterns.append(Chem.MolFromSmarts(pattern))
    for edg in edg_substituents:
        pattern = f'c1cc({edg})cc([C](=O)[OX1H0-,OX2H1])c1'
        edg_para_patterns.append(Chem.MolFromSmarts(pattern))

    # Rule 3: Sulfur Functional Groups with Carboxylic Acid
    thiol = Chem.MolFromSmarts('[SX2H]')
    thioether = Chem.MolFromSmarts('[#16X2][CX4]')  # Sulfur single-bonded to carbon

    # Rule 4: Simple Aliphatic Carboxylic Acids Without Additional Coordinating Groups
    # Exclude molecules that have any functional groups that could coordinate
    coordinating_groups = [primary_aliphatic_amine, thiol, thioether,
                           Chem.MolFromSmarts('[OX2H][CX4]'),  # Hydroxyl group
                           Chem.MolFromSmarts('[OX2][CX4][CX4][NX3;H2]'),  # Ether with terminal amino
                           Chem.MolFromSmarts('[OX2][CX4][CX4][OX2H]')]  # Ether with terminal hydroxyl

    # Rule 5: Multiple Hydroxyl Groups on Aliphatic Chain
    hydroxyl_group = Chem.MolFromSmarts('[OX2H][CX4]')

    # Rule 6: Ether Linkages with Terminal Amino or Hydroxyl Groups
    ether_linkage = Chem.MolFromSmarts('[CX4][OX2][CX4]')
    terminal_amino = Chem.MolFromSmarts('[NX3;H2][CX4]')
    terminal_hydroxyl = Chem.MolFromSmarts('[OX2H][CX4]')

    # Rule 7: Fluorinated Alkyl Chains or Trifluoromethyl Groups
    fluorinated_alkyl = Chem.MolFromSmarts('[CX4][CF3]')
    trifluoromethyl = Chem.MolFromSmarts('[CX4](F)(F)F')

    # Rule 8: Aldehyde Groups Adjacent to Aromatic Rings
    aromatic_aldehyde = Chem.MolFromSmarts('c[C](=O)[H]')

    # Rule 9: Ketone Groups Conjugated with Aromatic Rings vs. Aliphatic Ketones
    conjugated_ketone = Chem.MolFromSmarts('c[C](=O)c')
    aliphatic_ketone = Chem.MolFromSmarts('[CX4][CX3](=O)[CX4]')

    # Rule 10: Amino Acids with Aromatic Side Chains
    amino_acid_aromatic = Chem.MolFromSmarts('[NX3;H2][CX4][CX4][c]')
    indole_side_chain = Chem.MolFromSmarts('c1c([nH])ccc1')  # Tryptophan indole ring

    # Rule 11: Heterocyclic Nitrogen Atoms with Flexible Linkers vs. Direct Attachment
    heterocycle_with_linker = Chem.MolFromSmarts('[n][c][CX4][CX4][CX3](=O)[OX1H0-,OX2H1]')
    heterocycle_direct = Chem.MolFromSmarts('[n][c][CX3](=O)[OX1H0-,OX2H1]')

    # Rule 12: Multiple Electron-Donating Groups on Aromatic Rings
    edg_list = ['[OH]', '[OCH3]', '[NH2]', '[NHR]', '[NR2]', '[OR]']
    multi_edg_patterns = []
    for edg in edg_list:
        pattern = f'c1cc({edg})cc({edg})c1'
        multi_edg_patterns.append(Chem.MolFromSmarts(pattern))

    # Rule 13: Ether Linkages and Multiple Methoxy Groups on Aromatic Rings
    methoxy_aromatic = Chem.MolFromSmarts('c[OX2][CH3]')

    # Rule 14: Multiple Electron-Withdrawing Functional Groups
    ewg_list = ['[N+](=O)[O-]', '[C](=O)[OX1H0-,OX2H1]', '[C]#[N]', '[S](=O)(=O)[#6]']
    multi_ewg_patterns = []
    for ewg in ewg_list:
        pattern = f'c1cc({ewg})cc({ewg})c1'
        multi_ewg_patterns.append(Chem.MolFromSmarts(pattern))

    # Initialize results list
    results = []

    for smi in smiles_list:
        mol = Chem.MolFromSmiles(smi)
        if mol is None:
            # If the molecule cannot be parsed, append a row of zeros
            results.append([0]*15)
            continue
        row = []

        # Rule 1
        try:
            if mol.HasSubstructMatch(carboxylic_acid) and mol.HasSubstructMatch(primary_aliphatic_amine):
                row.append(1)
            else:
                row.append(0)
        except:
            row.append(0)

        # Rule 2
        try:
            matched = False
            for pat in ewg_para_patterns:
                if mol.HasSubstructMatch(pat):
                    row.append(1)
                    matched = True
                    break
            if not matched:
                for pat in edg_para_patterns:
                    if mol.HasSubstructMatch(pat):
                        row.append(-1)
                        matched = True
                        break
            if not matched:
                row.append(0)
        except:
            row.append(0)

        # Rule 3
        try:
            if mol.HasSubstructMatch(carboxylic_acid) and (mol.HasSubstructMatch(thiol) or mol.HasSubstructMatch(thioether)):
                row.append(1)
            else:
                row.append(0)
        except:
            row.append(0)

        # Rule 4
        try:
            if mol.HasSubstructMatch(carboxylic_acid):
                has_coordinating_group = False
                for group in coordinating_groups:
                    if mol.HasSubstructMatch(group):
                        has_coordinating_group = True
                        break
                if not has_coordinating_group:
                    row.append(-1)
                else:
                    row.append(0)
            else:
                row.append(0)
        except:
            row.append(0)

        # Rule 5
        try:
            hydroxyl_matches = mol.GetSubstructMatches(hydroxyl_group)
            # Count hydroxyl groups on aliphatic carbons
            count = len(hydroxyl_matches)
            if count >= 2:
                row.append(-1)
            elif count == 1:
                C_atom_idx = mol.GetAtomWithIdx(hydroxyl_matches[0][1]).GetIdx()
                C_atom = mol.GetAtomWithIdx(C_atom_idx)
                if C_atom.GetDegree() == 1:
                    row.append(1)
                else:
                    row.append(0)
            else:
                row.append(0)
        except:
            row.append(0)

        # Rule 6
        try:
            if mol.HasSubstructMatch(ether_linkage) and (mol.HasSubstructMatch(terminal_amino) or mol.HasSubstructMatch(terminal_hydroxyl)):
                row.append(1)
            else:
                row.append(0)
        except:
            row.append(0)

        # Rule 7
        try:
            if mol.HasSubstructMatch(fluorinated_alkyl) or mol.HasSubstructMatch(trifluoromethyl):
                row.append(-1)
            else:
                row.append(0)
        except:
            row.append(0)

        # Rule 8
        try:
            if mol.HasSubstructMatch(aromatic_aldehyde):
                row.append(-1)
            else:
                row.append(0)
        except:
            row.append(0)

        # Rule 9
        try:
            if mol.HasSubstructMatch(conjugated_ketone):
                row.append(1)
            elif mol.HasSubstructMatch(aliphatic_ketone):
                row.append(-1)
            else:
                row.append(0)
        except:
            row.append(0)

        # Rule 10
        try:
            if mol.HasSubstructMatch(amino_acid_aromatic):
                if mol.HasSubstructMatch(indole_side_chain):
                    row.append(-1)
                else:
                    row.append(1)
            else:
                row.append(0)
        except:
            row.append(0)

        # Rule 11
        try:
            if mol.HasSubstructMatch(heterocycle_with_linker):
                row.append(1)
            elif mol.HasSubstructMatch(heterocycle_direct):
                row.append(-1)
            else:
                row.append(0)
        except:
            row.append(0)

        # Rule 12
        try:
            matched = False
            for pat in multi_edg_patterns:
                if mol.HasSubstructMatch(pat):
                    row.append(-1)
                    matched = True
                    break
            if not matched:
                row.append(0)
        except:
            row.append(0)

        # Rule 13
        try:
            methoxy_matches = mol.GetSubstructMatches(methoxy_aromatic)
            if len(methoxy_matches) >= 2 and mol.HasSubstructMatch(ether_linkage):
                row.append(1)
            else:
                row.append(0)
        except:
            row.append(0)

        # Rule 14
        try:
            matched = False
            for pat in multi_ewg_patterns:
                if mol.HasSubstructMatch(pat):
                    row.append(1)
                    matched = True
                    break
            if not matched:
                row.append(0)
        except:
            row.append(0)

        # Rule 15
        row.append(0)  # Variable Fe/Hf Value

        # Ensure the row has exactly 15 entries
        row = row[:15] + [0]*(15 - len(row))
        results.append(row)

    # Create DataFrame with results
    df = pd.DataFrame(results, columns=[f'Rule {i+1}' for i in range(15)])
    return df

--------------------------------------------------
    Target Name: Fe/Hf
    GPT Model: o1-preview-2024-09-12
    ML Model: ETC
    Current_Rules:
    **Start of Rules**

---

**Rule 1**: **Aliphatic Carboxylic Acids with Terminal Primary Amino Groups Lead to High Fe/Hf Values (`True`)**

*Modifiers that are straight-chain aliphatic carboxylic acids with a terminal primary amino group (-NH₂) result in high Fe/Hf values.*

**Explanation**: The presence of both carboxylate and amino groups allows the modifier to act as a bidentate ligand, coordinating effectively with Fe ions. The flexible aliphatic chain facilitates the formation of stable chelate structures, enhancing Fe incorporation into the catalyst.

**Applicable Modifiers**:

- **High Fe/Hf (`True`)**:
  - 5-aminopentanoic acid
  - 7-aminoheptanoic acid
  - 8-aminooctanoic acid

---

**Rule 2**: **Aromatic Carboxylic Acids with Electron-Withdrawing Para Substituents Lead to High Fe/Hf Values (`True`); Those with Electron-Donating Para Substituents Lead to Low Fe/Hf Values (`False`)**

*Modifiers that are aromatic carboxylic acids with strong electron-withdrawing groups at the para position enhance Fe coordination (high Fe/Hf), while those with electron-donating groups reduce it (low Fe/Hf).*

**Explanation**: Electron-withdrawing groups (e.g., nitro, bromomethyl) increase the acidity of the carboxylic acid, enhancing the carboxylate's ability to coordinate with Fe ions. Electron-donating groups (e.g., amino, methyl, hydroxy) decrease acidity, reducing coordination effectiveness.

**Applicable Modifiers**:

- **High Fe/Hf (`True`)**:
  - 4-nitrobenzoic acid
  - 4-(bromomethyl)benzoic acid
- **Low Fe/Hf (`False`)**:
  - 4-aminobenzoic acid
  - 4-methylbenzoic acid
  - 5-(4-hydroxyphenyl)pentanoic acid
  - 3-(4-hydroxyphenyl)propanoic acid

---

**Rule 3**: **Modifiers Containing Thiol Groups (-SH) Along with Carboxylic Acid Groups Lead to High Fe/Hf Values (`True`)**

*Modifiers that include thiol (sulfhydryl) groups in addition to carboxylate groups enhance Fe incorporation.*

**Explanation**: Sulfur atoms are soft Lewis bases with lone pairs that can form strong coordination bonds with Fe ions. The combination of thiol and carboxylate groups allows the modifier to act as a multidentate ligand, significantly improving Fe coordination.

**Applicable Modifiers**:

- **High Fe/Hf (`True`)**:
  - 4-sulfanylbenzoic acid
  - 3-sulfanylpropanoic acid

---

**Rule 4**: **Simple Aliphatic Carboxylic Acids Without Additional Coordinating Functional Groups Lead to Low Fe/Hf Values (`False`)**

*Modifiers that are straight-chain aliphatic carboxylic acids lacking additional coordinating groups result in low Fe/Hf values.*

**Explanation**: Without extra functional groups capable of coordinating with Fe ions, these modifiers have limited interaction with Fe, resulting in lower Fe incorporation into the catalyst.

**Applicable Modifiers**:

- **Low Fe/Hf (`False`)**:
  - Octanoic acid
  - 4-oxoheptanedioic acid

---

**Rule 5**: **Modifiers with Multiple Hydroxyl Groups on an Aliphatic Chain Lead to Low Fe/Hf Values (`False`); Modifiers with a Single Terminal Hydroxyl Group May Lead to High Fe/Hf Values (`True`)**

*The number and position of hydroxyl groups on the modifier affect Fe coordination.*

**Explanation**: Multiple hydroxyl groups increase hydrophilicity and can form intramolecular hydrogen bonds, reducing the availability of coordinating sites for Fe ions. A single terminal hydroxyl group remains available for coordination without significant steric hindrance.

**Applicable Modifiers**:

- **Low Fe/Hf (`False`)**:
  - (2R,3S,4R,5R)-2,3,4,5,6-pentahydroxyhexanoic acid
  - 2-[[1,3-dihydroxy-2-(hydroxymethyl)propan-2-yl]oxy]acetic acid
- **High Fe/Hf (`True`)**:
  - 7-hydroxyheptanoic acid

---

**Rule 6**: **Modifiers with Ether Linkages and Terminal Amino Groups Lead to High Fe/Hf Values (`True`)**

*Modifiers featuring ether linkages with terminal amino groups enhance Fe incorporation.*

**Explanation**: Ether oxygen atoms provide flexibility, allowing the molecule to adopt conformations favorable for coordination. Terminal amino groups offer strong coordination sites for Fe ions, enhancing the overall binding affinity.

**Applicable Modifiers**:

- **High Fe/Hf (`True`)**:
  - 3-[2-(2-aminoethoxy)ethoxy]propanoic acid

---

**Rule 7**: **Amino Acids with Aromatic Side Chains Lead to High Fe/Hf Values (`True`); Those with Highly Electron-Rich Aromatic Side Chains Lead to Low Fe/Hf Values (`False`)**

*The electronic nature of the aromatic side chain in amino acids affects Fe coordination.*

**Explanation**: Amino acids with less electron-rich aromatic side chains (e.g., phenylalanine) can coordinate effectively with Fe ions. Highly electron-rich side chains (e.g., indole ring of tryptophan) may result in steric hindrance or unfavorable electronic interactions, reducing Fe coordination.

**Applicable Modifiers**:

- **High Fe/Hf (`True`)**:
  - (2S)-2-amino-3-phenylpropanoic acid (Phenylalanine)
- **Low Fe/Hf (`False`)**:
  - (2R)-2-amino-3-(1H-indol-3-yl)propanoic acid (Tryptophan)

---

**Rule 8**: **Modifiers with Heterocyclic Nitrogen Atoms Connected via Flexible Linkers Lead to High Fe/Hf Values (`True`); Those Directly Attached Without Flexibility Lead to Low Fe/Hf Values (`False`)**

*The presence and positioning of heterocyclic nitrogen atoms influence Fe coordination.*

**Explanation**: When a heterocyclic nitrogen is connected via a flexible linker, it allows optimal spatial orientation for coordination with Fe ions. Direct attachment without flexibility may hinder effective coordination due to steric constraints or electronic factors.

**Applicable Modifiers**:

- **High Fe/Hf (`True`)**:
  - 4-pyridin-4-ylbutanoic acid
  - 4-pyridin-4-ylbenzoic acid
- **Low Fe/Hf (`False`)**:
  - Pyridine-3-carboxylic acid
  - 2-oxo-1H-pyridine-4-carboxylic acid
  - 1H-pyrazole-4-carboxylic acid

---

**Rule 9**: **Modifiers with Fluorinated Alkyl Chains or Trifluoromethyl Groups Lead to Low Fe/Hf Values (`False`)**

*The presence of fluorine atoms in the alkyl chain or functional groups reduces Fe coordination.*

**Explanation**: Fluorine's high electronegativity withdraws electron density from potential coordinating atoms, diminishing their ability to coordinate effectively with Fe ions. This electron-withdrawing effect reduces the nucleophilicity of donor atoms in the modifier.

**Applicable Modifiers**:

- **Low Fe/Hf (`False`)**:
  - 2,2,3,3,4,4,5,5,5-nonafluoropentanoic acid
  - 4-[(2,2,2-trifluoroacetyl)amino]butanoic acid

---

**Rule 10**: **Modifiers with Aldehyde Groups Adjacent to Aromatic Rings Lead to Low Fe/Hf Values (`False`)**

*Modifiers that have aldehyde groups directly attached to aromatic rings tend to result in low Fe/Hf values.*

**Explanation**: Aldehyde groups can be susceptible to side reactions under the reaction conditions and may not coordinate effectively with Fe ions. Additionally, the aldehyde can decrease the electron density of the aromatic ring, hindering coordination.

**Applicable Modifiers**:

- **Low Fe/Hf (`False`)**:
  - 5-formyl-2-hydroxybenzoic acid
  - 4-formylbenzoic acid

---

**Rule 11**: **Modifiers with Conjugated Ketone Groups Linked to Aromatic Rings via Flexible Linkers Lead to High Fe/Hf Values (`True`)**

*The nature of the ketone and its position relative to aromatic systems influence Fe coordination.*

**Explanation**: Ketones conjugated with aromatic rings can participate in resonance structures, enhancing their ability to coordinate with Fe ions. Flexible linkers allow optimal positioning for coordination.

**Applicable Modifiers**:

- **High Fe/Hf (`True`)**:
  - 4-(3,4-dimethoxyphenyl)-4-oxobutanoic acid
- **Low Fe/Hf (`False`)**:
  - 4-oxoheptanedioic acid (Non-conjugated ketone)

---

**Rule 12**: **Modifiers with Multiple Electron-Donating Groups on Aromatic Rings Lead to Low Fe/Hf Values (`False`)**

*The cumulative effect of electron-donating groups reduces Fe coordination.*

**Explanation**: Electron-donating groups like hydroxyl (-OH) and methoxy (-OCH₃) increase the electron density of the aromatic ring and decrease the acidity of the carboxylic acid group. This reduction in acidity weakens the carboxylate's ability to coordinate with Fe ions.

**Applicable Modifiers**:

- **Low Fe/Hf (`False`)**:
  - 5-(4-hydroxyphenyl)pentanoic acid
  - 3-(4-hydroxyphenyl)propanoic acid
  - 2-[(4-hydroxybenzoyl)amino]acetic acid

---

**Rule 13**: **Modifiers with Ether Linkages and Terminal Hydroxyl Groups Lead to High Fe/Hf Values (`True`)**

*Modifiers featuring ether linkages with terminal hydroxyl groups can enhance Fe incorporation.*

**Explanation**: The ether linkages provide flexibility, and the terminal hydroxyl groups offer coordination sites for Fe ions. This combination can facilitate effective binding to Fe.

**Applicable Modifiers**:

- **High Fe/Hf (`True`)**:
  - 2-[2-(2-methoxyethoxy)ethoxy]acetic acid

---

**Rule 14**: **Modifiers with Aliphatic Chains Containing Acetamido Groups and Additional Amino Groups Lead to High Fe/Hf Values (`True`)**

*Modifiers with an acetamido group and an additional amino group enhance Fe coordination.*

**Explanation**: The combination of multiple nitrogen-containing functional groups increases the number of potential coordination sites for Fe ions, enhancing Fe incorporation into the catalyst.

**Applicable Modifiers**:

- **High Fe/Hf (`True`)**:
  - (2S)-6-acetamido-2-aminohexanoic acid
  - 2-[[(2S)-2-amino-4-methylsulfanylbutanoyl]amino]acetic acid

---

**Rule 15**: **Modifiers with Indole Functional Groups Lead to Low Fe/Hf Values (`False`)**

*The presence of bulky, electron-rich indole rings can hinder Fe coordination.*

**Explanation**: Indole rings are highly electron-rich and can cause steric hindrance, reducing the ability of coordinating groups to interact effectively with Fe ions.

**Applicable Modifiers**:

- **Low Fe/Hf (`False`)**:
  - (2R)-2-amino-3-(1H-indol-3-yl)propanoic acid

---

**End of Rules**

---

These rules have been generated by analyzing the dataset and considering underlying physicochemical principles such as coordination chemistry, electronic effects, and steric factors. Each rule combines functional group features to predict whether a modifier will lead to high or low Fe/Hf values. The rules balance simplicity and complexity, covering a broad range of the dataset while providing specific insights into how different substructures influence the Fe/Hf ratio in the catalyst.---------------------------------------------------------------


    Current_Matrix:
    Matrix Generator Message:
Rule 1,Rule 2,Rule 3,Rule 4,Rule 5,Rule 6,Rule 7,Rule 8,Rule 9,Rule 10,Rule 11,Rule 12,Rule 13,Rule 14,Rule 15
0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0
1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0
0,0,1,0,0,0,0,0,0,-1,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0
0,0,0,-1,0,0,0,0,-1,0,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,0,0,0,0,0,-1
0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0
0,0,1,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0
0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0
0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,-1,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0
0,0,0,-1,0,0,0,0,-1,0,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0
1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1,0,0,0,0,1,0,0,0,0,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0
1,0,0,0,0,0,0,0,0,0,0,0,0,0,0

---------------------------------------------------------------


    Train Accuracy: 0.7142857142857143; Test Accuracy: 1.0
    Train Support: 0.37142857142857144; Test Support: 1.0
    Train Confidence: 0.6842105263157895; Test Confidence: 1.0
    Train Lift: 1.4086687306501546; Test Lift: NONE
    Train Leverage: 0.10775510204081634; Test Leverage: NONE
    ----------------------------------------------------------------------------------

    Current Rule Code:
def rule2matrix(smiles_list):
    # Define SMARTS patterns for functional groups
    # Carboxylic acid group (-COOH)
    carboxylic_acid = ['[CX3](=O)[OX2H1]', '[CX3](=O)[O-]']
    
    # Primary aliphatic amine group (-NH2)
    primary_aliph_amine = ['[NX3H2][CX4H2]', '[NX3H2][CH2]']
    
    # Thiol group (-SH)
    thiol = ['[SX2H]']
    
    # Ether linkage (-O-)
    ether_linkage = ['[OD2]([#6])[#6]']
    
    # Pyridine ring connected via flexible linker
    pyridine_linker = ['[#6]-[#6]-[#6]-[#6]-c1ccncc1', '[#6]-[#6]-c1ccncc1']
    
    # Aromatic carboxylic acid
    aromatic_carboxylic_acid = ['c1ccccc1C(=O)[OX2H1]', 'c1ccccc1C(=O)[O-]']
    
    # Electron-withdrawing groups on aromatic ring (para position)
    ewg_para = ['c1ccc([NX3+](=O)[O-])cc1C(=O)[OX2H1]', 'c1ccc(Br)cc1C(=O)[OX2H1]']
    
    # Electron-donating groups on aromatic ring (para position)
    edg_para = ['c1ccc([NX3H2])cc1C(=O)[OX2H1]', 'c1ccc(C)cc1C(=O)[OX2H1]', 'c1ccc(O)cc1C(=O)[OX2H1]']
    
    # Multiple hydroxyl groups on aliphatic chain
    multiple_hydroxyl = ['[OX2H][CX4H]([OX2H])[CX4H]([OX2H])[CX4H]']
    
    # Single terminal hydroxyl group on aliphatic chain
    terminal_hydroxyl = ['[CX4H2][OX2H]']
    
    # Amino acids with aromatic side chains
    aromatic_amino_acid = ['[NX3H2][CX4H]([CX3](=O)[OX2H1])[c]']
    
    # Amino acids with electron-rich aromatic side chains (e.g., indole)
    electron_rich_aromatic_amino_acid = ['[NX3H2][CX4H]([CX3](=O)[OX2H1])[c]n']
    
    # Heterocyclic nitrogen connected via flexible linker
    heterocyclic_nitrogen_linker = ['[#6]-[#6]-[#6]-[#6]-c1ccncc1C(=O)[OX2H1]', '[#6]-[#6]-c1ccncc1C(=O)[OX2H1]']
    
    # Heterocyclic nitrogen directly attached
    heterocyclic_nitrogen_direct = ['c1ccncc1C(=O)[OX2H1]', 'c1c[nH]ccc1C(=O)[OX2H1]', 'c1cnc[nH]c1C(=O)[OX2H1]']
    
    # Fluorinated alkyl chains or trifluoromethyl groups
    fluorinated_alkyl = ['[CX4](F)(F)F', '[CX4][CX4](F)(F)F']
    
    # Aldehyde groups adjacent to aromatic rings
    aromatic_aldehyde = ['c1ccccc1C=O']
    
    # Conjugated ketone groups linked to aromatic rings via flexible linkers
    conjugated_ketone_linker = ['c1ccccc1-[#6]-[#6]-C(=O)-[#6]']
    
    # Non-conjugated ketone groups
    non_conjugated_ketone = ['[CX3](=O)[CX4]']
    
    # Modifiers with multiple electron-donating groups on aromatic rings
    multiple_edg_aromatic = ['c1cc([OX2H])cc([OX2H])c1', 'c1cc([OX2H])ccc1[OX2H]', 'c1cc([OX2][CH3])cc([OX2][CH3])c1']
    
    # Ether linkages with terminal hydroxyl groups
    ether_terminal_hydroxyl = ['[OD2]([#6])[#6][OD2]([#6])[#6][OD2H]']
    
    # Acetamido groups with additional amino groups
    acetamido_with_amino = ['[NX3][CX3](=O)[NX3H2]']
    
    # Indole functional groups
    indole_group = ['c1cc2ccccc2[nH]1']
    
    # Compile SMARTS patterns
    smarts_patterns = {
        'carboxylic_acid': carboxylic_acid,
        'primary_aliph_amine': primary_aliph_amine,
        'thiol': thiol,
        'ether_linkage': ether_linkage,
        'pyridine_linker': pyridine_linker,
        'aromatic_carboxylic_acid': aromatic_carboxylic_acid,
        'ewg_para': ewg_para,
        'edg_para': edg_para,
        'multiple_hydroxyl': multiple_hydroxyl,
        'terminal_hydroxyl': terminal_hydroxyl,
        'aromatic_amino_acid': aromatic_amino_acid,
        'electron_rich_aromatic_amino_acid': electron_rich_aromatic_amino_acid,
        'heterocyclic_nitrogen_linker': heterocyclic_nitrogen_linker,
        'heterocyclic_nitrogen_direct': heterocyclic_nitrogen_direct,
        'fluorinated_alkyl': fluorinated_alkyl,
        'aromatic_aldehyde': aromatic_aldehyde,
        'conjugated_ketone_linker': conjugated_ketone_linker,
        'non_conjugated_ketone': non_conjugated_ketone,
        'multiple_edg_aromatic': multiple_edg_aromatic,
        'ether_terminal_hydroxyl': ether_terminal_hydroxyl,
        'acetamido_with_amino': acetamido_with_amino,
        'indole_group': indole_group,
    }
    
    compiled_patterns = {key: [Chem.MolFromSmarts(pat) for pat in patterns] for key, patterns in smarts_patterns.items()}
    
    # Define the rules with their associated patterns and predictions
    rules = [
        {
            'number': 1,
            'description': 'Aliphatic Carboxylic Acids with Terminal Primary Amino Groups Lead to High Fe/Hf Values (True)',
            'patterns': [compiled_patterns['primary_aliph_amine'], compiled_patterns['carboxylic_acid']],
            'exclude_patterns': [compiled_patterns['aromatic_aldehyde'], compiled_patterns['indole_group']],
            'prediction': 1
        },
        {
            'number': 2,
            'description': 'Aromatic Carboxylic Acids with Electron-Withdrawing Para Substituents Lead to High Fe/Hf Values (True)',
            'patterns': [compiled_patterns['aromatic_carboxylic_acid'], compiled_patterns['ewg_para']],
            'prediction': 1
        },
        {
            'number': 3,
            'description': 'Modifiers Containing Thiol Groups (-SH) Along with Carboxylic Acid Groups Lead to High Fe/Hf Values (True)',
            'patterns': [compiled_patterns['thiol'], compiled_patterns['carboxylic_acid']],
            'prediction': 1
        },
        {
            'number': 4,
            'description': 'Simple Aliphatic Carboxylic Acids Without Additional Coordinating Functional Groups Lead to Low Fe/Hf Values (False)',
            'patterns': [compiled_patterns['carboxylic_acid']],
            'exclude_patterns': [compiled_patterns['primary_aliph_amine'], compiled_patterns['thiol'], compiled_patterns['ether_linkage'], compiled_patterns['aromatic_carboxylic_acid']],
            'prediction': -1
        },
        {
            'number': 5,
            'description': 'Modifiers with Multiple Hydroxyl Groups on an Aliphatic Chain Lead to Low Fe/Hf Values (False); Modifiers with a Single Terminal Hydroxyl Group May Lead to High Fe/Hf Values (True)',
            'patterns': [compiled_patterns['multiple_hydroxyl'], compiled_patterns['carboxylic_acid']],
            'prediction': -1
        },
        {
            'number': 6,
            'description': 'Modifiers with Ether Linkages and Terminal Amino Groups Lead to High Fe/Hf Values (True)',
            'patterns': [compiled_patterns['ether_linkage'], compiled_patterns['primary_aliph_amine']],
            'prediction': 1
        },
        {
            'number': 7,
            'description': 'Amino Acids with Aromatic Side Chains Lead to High Fe/Hf Values (True); Those with Highly Electron-Rich Aromatic Side Chains Lead to Low Fe/Hf Values (False)',
            'patterns': [compiled_patterns['aromatic_amino_acid']],
            'exclude_patterns': [compiled_patterns['electron_rich_aromatic_amino_acid']],
            'prediction': 1
        },
        {
            'number': 8,
            'description': 'Modifiers with Heterocyclic Nitrogen Atoms Connected via Flexible Linkers Lead to High Fe/Hf Values (True); Those Directly Attached Without Flexibility Lead to Low Fe/Hf Values (False)',
            'patterns': [compiled_patterns['heterocyclic_nitrogen_linker'], compiled_patterns['carboxylic_acid']],
            'exclude_patterns': [compiled_patterns['heterocyclic_nitrogen_direct']],
            'prediction': 1
        },
        {
            'number': 9,
            'description': 'Modifiers with Fluorinated Alkyl Chains or Trifluoromethyl Groups Lead to Low Fe/Hf Values (False)',
            'patterns': [compiled_patterns['fluorinated_alkyl']],
            'prediction': -1
        },
        {
            'number': 10,
            'description': 'Modifiers with Aldehyde Groups Adjacent to Aromatic Rings Lead to Low Fe/Hf Values (False)',
            'patterns': [compiled_patterns['aromatic_aldehyde'], compiled_patterns['carboxylic_acid']],
            'prediction': -1
        },
        {
            'number': 11,
            'description': 'Modifiers with Conjugated Ketone Groups Linked to Aromatic Rings via Flexible Linkers Lead to High Fe/Hf Values (True)',
            'patterns': [compiled_patterns['conjugated_ketone_linker'], compiled_patterns['carboxylic_acid']],
            'exclude_patterns': [compiled_patterns['non_conjugated_ketone']],
            'prediction': 1
        },
        {
            'number': 12,
            'description': 'Modifiers with Multiple Electron-Donating Groups on Aromatic Rings Lead to Low Fe/Hf Values (False)',
            'patterns': [compiled_patterns['multiple_edg_aromatic'], compiled_patterns['carboxylic_acid']],
            'prediction': -1
        },
        {
            'number': 13,
            'description': 'Modifiers with Ether Linkages and Terminal Hydroxyl Groups Lead to High Fe/Hf Values (True)',
            'patterns': [compiled_patterns['ether_terminal_hydroxyl'], compiled_patterns['carboxylic_acid']],
            'prediction': 1
        },
        {
            'number': 14,
            'description': 'Modifiers with Aliphatic Chains Containing Acetamido Groups and Additional Amino Groups Lead to High Fe/Hf Values (True)',
            'patterns': [compiled_patterns['acetamido_with_amino'], compiled_patterns['carboxylic_acid']],
            'prediction': 1
        },
        {
            'number': 15,
            'description': 'Modifiers with Indole Functional Groups Lead to Low Fe/Hf Values (False)',
            'patterns': [compiled_patterns['indole_group']],
            'prediction': -1
        }
    ]
    
    # Initialize results list
    results = []
    
    # Process each SMILES string
    for smi in smiles_list:
        mol = Chem.MolFromSmiles(smi)
        if mol is None:
            # If the molecule cannot be parsed, append a row of zeros
            results.append([0]*len(rules))
            continue
        row = []
        for rule in rules:
            try:
                match = True
                # Check exclude patterns if any
                if 'exclude_patterns' in rule:
                    for pat_list in rule['exclude_patterns']:
                        for pat in pat_list:
                            if mol.HasSubstructMatch(pat):
                                match = False
                                break
                        if not match:
                            break
                    if not match:
                        row.append(0)
                        continue
                # Check required patterns
                for pat_list in rule['patterns']:
                    group_match = False
                    for pat in pat_list:
                        if mol.HasSubstructMatch(pat):
                            group_match = True
                            break
                    if not group_match:
                        match = False
                        break
                if match:
                    row.append(rule['prediction'])
                else:
                    row.append(0)
            except Exception:
                # In case of any error, append 0
                row.append(0)
        results.append(row)
    # Create DataFrame with results
    df = pd.DataFrame(results, columns=[f'Rule {rule['number']}' for rule in rules])
    return df

--------------------------------------------------