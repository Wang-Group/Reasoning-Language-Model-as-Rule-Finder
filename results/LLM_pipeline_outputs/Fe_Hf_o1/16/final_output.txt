
    Target Name: Fe/Hf
    GPT Model: o1-preview-2024-09-12
    ML Model: ETC
    Current_Rules:
    **Start of Rules**

- **Rule 1**: *Modifiers with a terminal amino group on an aliphatic chain increase Fe/Hf (Fe/Hf_high_or_low_value == True).*  
  Examples: 5-aminopentanoic acid, 7-aminoheptanoic acid, 8-aminooctanoic acid, (2S)-6-acetamido-2-aminohexanoic acid.

- **Rule 2**: *Modifiers containing sulfur functional groups—such as thiol (–SH) or thioether (–S–)—increase Fe/Hf.*  
  Examples: 4-sulfanylbenzoic acid, 3-sulfanylpropanoic acid, 2-[[(2S)-2-amino-4-methylsulfanylbutanoyl]amino]acetic acid.

- **Rule 3**: *Modifiers with electron-withdrawing substituents (e.g., nitro, halogen) at the para position on a benzene ring increase Fe/Hf.*  
  Examples: 4-nitrobenzoic acid, 4-(bromomethyl)benzoic acid.

- **Rule 4**: *Modifiers containing nitrogen heterocycles, such as pyridine rings attached to a carboxylic acid, increase Fe/Hf.*  
  Examples: 4-pyridin-4-ylbenzoic acid, 4-pyridin-4-ylbutanoic acid.

- **Rule 5**: *Modifiers with electron-donating substituents (e.g., amino, hydroxy, methyl) at the para position on a benzene ring decrease Fe/Hf (Fe/Hf_high_or_low_value == False).*  
  Examples: 4-aminobenzoic acid, 4-methylbenzoic acid, 2-[(4-hydroxybenzoyl)amino]acetic acid.

- **Rule 6**: *Modifiers with aldehyde (–CHO) functional groups decrease Fe/Hf.*  
  Examples: 5-formyl-2-hydroxybenzoic acid, 4-formylbenzoic acid.

- **Rule 7**: *Modifiers with perfluoroalkyl chains decrease Fe/Hf.*  
  Example: 2,2,3,3,4,4,5,5,5-nonafluoropentanoic acid.

- **Rule 8**: *Modifiers capable of coordinating Fe via nitrogen or sulfur donor atoms increase Fe/Hf.*  
  This includes modifiers with terminal amino groups, thiol groups, or nitrogen-containing heterocycles.

- **Rule 9**: *Modifiers with hydroxy substituents on aromatic rings decrease Fe/Hf.*  
  Examples: 5-(4-hydroxyphenyl)pentanoic acid, 3-(4-hydroxyphenyl)propanoic acid, 2-[(4-hydroxybenzoyl)amino]acetic acid.

- **Rule 10**: *Modifiers that are saturated aliphatic carboxylic acids without additional coordinating functional groups decrease Fe/Hf.*  
  Example: octanoic acid.

- **Rule 11**: *Modifiers with polyether chains terminating with groups capable of coordinating Fe increase Fe/Hf.*  
  Example: 2-[2-(2-methoxyethoxy)ethoxy]acetic acid.

**End of Rules**---------------------------------------------------------------


    Current_Matrix:
    Matrix Generator Message:
Rule 1,Rule 2,Rule 3,Rule 4,Rule 5,Rule 6,Rule 7,Rule 8,Rule 9,Rule 10,Rule 11
0,0,0,1,0,0,0,1,0,0,1
0,0,0,0,0,0,0,1,0,0,1
0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,1,0,0,1
0,0,0,0,0,0,0,1,0,0,1
0,0,0,0,0,0,0,1,0,0,1
0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,1,0,0,1
0,0,0,0,0,0,0,0,-1,0,0
0,0,0,1,0,0,0,1,0,0,1
0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,1,0,0,1
0,0,0,0,0,0,0,0,0,0,0
0,0,0,1,0,0,0,1,0,0,1
0,0,0,0,0,0,0,1,0,0,1
0,0,0,0,0,0,-1,0,0,0,0
0,0,0,1,0,0,0,1,0,0,1
0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,1,0,0,1
0,0,0,0,0,-1,0,0,-1,0,0
0,0,0,0,0,-1,0,0,0,0,0
0,0,1,0,0,0,0,1,0,0,1
0,0,0,1,0,0,0,1,0,0,1
0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,1,0,0,1
0,0,0,1,0,0,0,1,0,0,1
0,0,0,0,-1,0,0,0,0,0,0
0,0,0,0,0,0,0,1,-1,0,1
0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,-1,1,0,0,1
0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,-1,0,0
0,0,0,0,0,0,0,1,0,0,1
0,0,0,0,0,0,0,1,0,0,1
0,0,0,0,0,0,0,1,0,0,1
0,0,0,0,0,0,0,1,0,0,1

---------------------------------------------------------------


    Train Accuracy: 0.6285714285714286; Test Accuracy: 0.0
    Train Support: 0.11428571428571428; Test Support: 0.0
    Train Confidence: 1.0; Test Confidence: 0.5
    Train Lift: 2.0588235294117645; Test Lift: NONE
    Train Leverage: 0.05877551020408162; Test Leverage: NONE
    ----------------------------------------------------------------------------------

    Current Rule Code:
def rule2matrix(smiles_list):
    # Define SMARTS patterns for the functional groups and structures
    # Common substructures
    carboxylic_acid = '[CX3](=O)[OX2H1]'  # Carboxylic acid group (-COOH)
    primary_amine = '[NX3;H2]'  # Primary amine (-NH2)
    aliphatic_chain = '[CX4H2][CX4H2][CX4H2]'  # Three or more methylene units
    thiol = '[SX2H]'  # Thiol group (-SH)
    thioether = '[#6][SX2][#6]'  # Thioether group (-S-)
    nitro_group = '[NX3+](=O)[O-]'  # Nitro group (-NO2)
    halogen = '[F,Cl,Br,I]'  # Halogens
    benzene_ring = 'c1ccccc1'  # Benzene ring
    electron_withdrawing_group = '[F,Cl,Br,I,NX3+](=O)[O-]'  # Halogens or nitro group
    electron_donating_group = '[OX2H,OX2][CX4H3]'  # Hydroxy or methoxy group
    aldehyde = '[CX3H1](=O)'  # Aldehyde group (-CHO)
    perfluoroalkyl_chain = '[CX4]([F])[F]'  # CF2 groups
    nitrogen_heterocycle = '[n]'  # Nitrogen in an aromatic ring
    hydroxy_on_aromatic = '[c][OX2H]'  # Hydroxy group attached to aromatic ring
    saturated_aliphatic_acid = '[CX3H2][CX3](=O)[OX2H1]'  # Simple saturated aliphatic acid
    ether_chain = '[OX2][CX4]'  # Ether linkage in a chain

    # Define rules with their associated SMARTS patterns and predictions
    rules = [
        {
            'number': 1,
            'description': 'Modifiers with a terminal amino group on an aliphatic chain increase Fe/Hf.',
            'patterns': [
                primary_amine + aliphatic_chain + carboxylic_acid  # Terminal NH2 + aliphatic chain + COOH
            ],
            'prediction': 1
        },
        {
            'number': 2,
            'description': 'Modifiers containing sulfur functional groups such as thiol (-SH) or thioether (-S-) increase Fe/Hf.',
            'patterns': [
                thiol,
                thioether,
                carboxylic_acid  # Include carboxylic acid group
            ],
            'prediction': 1
        },
        {
            'number': 3,
            'description': 'Modifiers with electron-withdrawing substituents at the para position on a benzene ring increase Fe/Hf.',
            'patterns': [
                benzene_ring,
                carboxylic_acid,
                electron_withdrawing_group  # EWG at para position
            ],
            'prediction': 1
        },
        {
            'number': 4,
            'description': 'Modifiers containing nitrogen heterocycles increase Fe/Hf.',
            'patterns': [
                nitrogen_heterocycle,
                carboxylic_acid  # Attached to carboxylic acid
            ],
            'prediction': 1
        },
        {
            'number': 5,
            'description': 'Modifiers with electron-donating substituents at the para position on a benzene ring decrease Fe/Hf.',
            'patterns': [
                benzene_ring,
                carboxylic_acid,
                electron_donating_group  # EDG at para position
            ],
            'prediction': -1
        },
        {
            'number': 6,
            'description': 'Modifiers with aldehyde (-CHO) functional groups decrease Fe/Hf.',
            'patterns': [
                aldehyde,
                carboxylic_acid
            ],
            'prediction': -1
        },
        {
            'number': 7,
            'description': 'Modifiers with perfluoroalkyl chains decrease Fe/Hf.',
            'patterns': [
                perfluoroalkyl_chain,
                carboxylic_acid
            ],
            'prediction': -1
        },
        {
            'number': 8,
            'description': 'Modifiers capable of coordinating Fe via nitrogen or sulfur donor atoms increase Fe/Hf.',
            'patterns': [
                '[#7,#16]',  # Nitrogen or sulfur atoms
                carboxylic_acid
            ],
            'prediction': 1
        },
        {
            'number': 9,
            'description': 'Modifiers with hydroxy substituents on aromatic rings decrease Fe/Hf.',
            'patterns': [
                hydroxy_on_aromatic,
                carboxylic_acid
            ],
            'prediction': -1
        },
        {
            'number': 10,
            'description': 'Modifiers that are saturated aliphatic carboxylic acids without additional coordinating functional groups decrease Fe/Hf.',
            'patterns': [
                saturated_aliphatic_acid
            ],
            'exclude_patterns': [
                '[#7,#8,#16]',  # Exclude if N, O, or S functional groups other than COOH
                '[a]'  # Exclude aromatic rings
            ],
            'prediction': -1
        },
        {
            'number': 11,
            'description': 'Modifiers with polyether chains terminating with groups capable of coordinating Fe increase Fe/Hf.',
            'patterns': [
                ether_chain + '{2,}',  # At least two ether linkages
                '[#7,#16]',  # Terminating with N or S atom
                carboxylic_acid
            ],
            'prediction': 1
        }
    ]

    # Compile SMARTS patterns
    for rule in rules:
        compiled_patterns = []
        for smarts in rule.get('patterns', []):
            try:
                pat = Chem.MolFromSmarts(smarts)
                compiled_patterns.append(pat)
            except:
                compiled_patterns.append(None)
        rule['compiled_patterns'] = compiled_patterns
        # Compile exclude patterns if any
        if 'exclude_patterns' in rule:
            compiled_excludes = []
            for smarts in rule['exclude_patterns']:
                try:
                    pat = Chem.MolFromSmarts(smarts)
                    compiled_excludes.append(pat)
                except:
                    compiled_excludes.append(None)
            rule['compiled_exclude_patterns'] = compiled_excludes

    # Initialize results list
    results = []

    # Process each SMILES string
    for smi in smiles_list:
        mol = Chem.MolFromSmiles(smi)
        if mol is None:
            # If the molecule cannot be parsed, append a row of zeros
            results.append([0]*len(rules))
            continue
        row = []
        for rule in rules:
            try:
                match = True
                # Check exclude patterns if any
                if 'exclude_patterns' in rule:
                    for pat in rule['compiled_exclude_patterns']:
                        if pat is not None and mol.HasSubstructMatch(pat):
                            match = False
                            break
                    if not match:
                        row.append(0)
                        continue
                # Check required patterns
                for pat in rule['compiled_patterns']:
                    if pat is not None and not mol.HasSubstructMatch(pat):
                        match = False
                        break
                if match:
                    row.append(rule['prediction'])
                else:
                    row.append(0)
            except:
                # In case of any error, append 0
                row.append(0)
        results.append(row)
    # Create DataFrame with results
    df = pd.DataFrame(results, columns=[f'Rule {rule["number"]}' for rule in rules])
    return df
--------------------------------------------------
    Target Name: Fe/Hf
    GPT Model: o1-preview-2024-09-12
    ML Model: ETC
    Current_Rules:
    **Start of Rules**

- **Rule 1**: *Modifiers containing a terminal primary amine group (-NH₂) on an aliphatic chain increase Fe/Hf (Fe/Hf_high_or_low_value == True).*

  - **Explanation**: Terminal primary amines can strongly coordinate with Fe ions, enhancing Fe loading onto the catalyst. The flexibility of the aliphatic chain allows effective interaction between the amine group and Fe ions.
  - **Examples**: 5-aminopentanoic acid, 7-aminoheptanoic acid, 8-aminooctanoic acid, 3-[2-(2-aminoethoxy)ethoxy]propanoic acid.

---

- **Rule 2**: *Modifiers with thiol (-SH) functional groups increase Fe/Hf.*

  - **Explanation**: Thiol groups contain sulfur atoms with lone pairs that form strong coordination bonds with Fe ions, enhancing the metal loading.
  - **Examples**: 4-sulfanylbenzoic acid, 3-sulfanylpropanoic acid.

---

- **Rule 3**: *Modifiers possessing electron-withdrawing groups (e.g., nitro, halogens) at the para position of a benzene ring increase Fe/Hf.*

  - **Explanation**: Electron-withdrawing groups increase the acidity of the carboxylic acid, promoting stronger coordination with Fe ions. They can also stabilize the negative charge formed during coordination.
  - **Examples**: 4-(bromomethyl)benzoic acid, 4-nitrobenzoic acid.

---

- **Rule 4**: *Modifiers with electron-donating groups (e.g., amino, hydroxy, methoxy) on aromatic rings decrease Fe/Hf.*

  - **Explanation**: Electron-donating groups reduce the acidity of the carboxylic acid, diminishing its ability to coordinate with Fe ions. They may also engage in intramolecular interactions that hinder coordination.
  - **Examples**: 4-aminobenzoic acid, 4-methylbenzoic acid, 3-(4-hydroxyphenyl)propanoic acid.

---

- **Rule 5**: *Modifiers containing pyridine rings directly attached to carboxylic acid groups increase Fe/Hf.*

  - **Explanation**: The nitrogen atom in the pyridine ring offers an additional coordination site for Fe ions, enhancing metal loading. The aromatic system facilitates electron delocalization, stabilizing the coordination complex.
  - **Examples**: 4-pyridin-4-ylbenzoic acid, 4-pyridin-4-ylbutanoic acid.

---

- **Rule 6**: *Modifiers that are simple aliphatic carboxylic acids without additional coordinating functional groups decrease Fe/Hf.*

  - **Explanation**: The lack of additional coordination sites reduces the modifier's ability to enhance Fe loading onto the catalyst. Simple carboxylic acids may not form strong enough interactions with Fe ions.
  - **Examples**: Octanoic acid, 4-oxoheptanedioic acid.

---

- **Rule 7**: *Modifiers with terminal hydroxyl groups on long aliphatic chains increase Fe/Hf.*

  - **Explanation**: Terminal hydroxyl groups can coordinate with Fe ions, and the flexibility of the long aliphatic chain facilitates this interaction. This enhances the Fe loading onto the catalyst.
  - **Example**: 7-hydroxyheptanoic acid.
  - **Counter-Examples**: Modifiers with multiple hydroxyl groups on short chains may decrease Fe/Hf due to intramolecular hydrogen bonding (e.g., (2R,3S,4R,5R)-2,3,4,5,6-pentahydroxyhexanoic acid).

---

- **Rule 8**: *Modifiers containing polyether chains terminating in coordinating groups increase Fe/Hf.*

  - **Explanation**: Polyether chains provide flexibility and increase the solubility of the modifier, allowing the terminal coordinating groups (e.g., amino or carboxyl) to effectively interact with Fe ions.
  - **Examples**: 2-[2-(2-methoxyethoxy)ethoxy]acetic acid, 3-[2-(2-aminoethoxy)ethoxy]propanoic acid.

---

- **Rule 9**: *Modifiers containing aldehyde (-CHO) functional groups decrease Fe/Hf.*

  - **Explanation**: Aldehyde groups may form intramolecular interactions or react with other functional groups, reducing the availability of coordination sites for Fe ions.
  - **Examples**: 4-formylbenzoic acid, 5-formyl-2-hydroxybenzoic acid.

---

- **Rule 10**: *Modifiers that are α-amino acids with side chains capable of coordinating with Fe ions increase Fe/Hf.*

  - **Explanation**: α-Amino acids have both amino and carboxyl groups that can act as bidentate ligands. Side chains with additional coordinating functionalities (e.g., carboxylate, aromatic rings) enhance their ability to bind Fe ions.
  - **Examples**: 
    - **High Fe/Hf**: (2S)-2-aminobutanedioic acid (aspartic acid) with an extra carboxylate group; (2S)-2-amino-3-phenylpropanoic acid (phenylalanine) with an aromatic side chain.
    - **Low Fe/Hf**: (2S)-2-aminopentanedioic acid (glutamic acid) may have steric hindrance or less effective coordination due to longer side chains.

---

**End of Rules**---------------------------------------------------------------


    Current_Matrix:
    Matrix Generator Message:
Rule 1,Rule 2,Rule 3,Rule 4,Rule 5,Rule 6,Rule 7,Rule 8,Rule 9,Rule 10
0,0,0,0,0,0,0,0,0,1
0,0,0,0,0,0,0,0,0,1
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,1
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,1,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,1
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,1,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,-1,0
0,0,0,0,0,0,0,0,-1,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,1,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,1
0,0,0,0,0,0,0,0,0,0

---------------------------------------------------------------


    Train Accuracy: 0.6285714285714286; Test Accuracy: 0.0
    Train Support: 0.05714285714285714; Test Support: 0.0
    Train Confidence: 0.9375; Test Confidence: 0.375
    Train Lift: 1.851511437908497; Test Lift: NONE
    Train Leverage: 0.02448979591836735; Test Leverage: NONE
    ----------------------------------------------------------------------------------

    Current Rule Code:

def rule2matrix(smiles_list):
    # Define SMARTS patterns for functional groups
    
    # Carboxylic acid group (-COOH)
    carboxylic_acid = '[CX3](=O)[OX2H1]'
    
    # Primary amine group (-NH2)
    primary_amine = '[NX3H2]'
    
    # Thiol group (-SH)
    thiol = '[SX2H]'
    
    # Nitro group (-NO2)
    nitro_group = '[N+](=O)[O-]'
    
    # Halogens attached to aromatic ring
    halogen_on_aromatic = '[c][F,Cl,Br,I]'
    
    # Aromatic ring
    aromatic_ring = 'c1ccccc1'
    
    # Electron-donating groups (EDG) on aromatic ring
    amine_on_aromatic = '[c][NX3;H2]'
    hydroxyl_on_aromatic = '[c][OX2H]'
    methoxy_on_aromatic = '[c][OX2][CH3]'
    
    # Pyridine ring attached to carboxylic acid
    pyridine_with_carboxylic_acid = 'n1cccc1C(=O)O'
    
    # Aldehyde group
    aldehyde = '[CX3H1](=O)'
    
    # Terminal hydroxyl group on long aliphatic chain
    terminal_hydroxyl = '[CX4H2][OX2H]'
    long_aliphatic_chain = '[CH2][CH2][CH2][CH2][CH2]'
    
    # Polyether chain terminating in coordinating groups
    polyether_chain = '([#6][OX2][#6])+[OX2H0]'  # Ether chain
    coordinating_groups = [primary_amine, carboxylic_acid, thiol]  # Coordinating groups
    
    # Alpha amino acid
    alpha_amino_acid = '[NX3][CH1][CX3](=O)[OX2H1]'
    
    # Define the rules with their associated patterns and predictions
    rules = [
        {
            'number': 1,
            'description': 'Modifiers containing a terminal primary amine group (-NH₂) on an aliphatic chain increase Fe/Hf.',
            'patterns': [
                primary_amine,
                carboxylic_acid
            ],
            'additional_checks': 'terminal_primary_amine',
            'prediction': 1
        },
        {
            'number': 2,
            'description': 'Modifiers with thiol (-SH) functional groups increase Fe/Hf.',
            'patterns': [
                thiol,
                carboxylic_acid
            ],
            'prediction': 1
        },
        {
            'number': 3,
            'description': 'Modifiers possessing electron-withdrawing groups (e.g., nitro, halogens) at the para position of a benzene ring increase Fe/Hf.',
            'patterns': [
                aromatic_ring,
                nitro_group,
                halogen_on_aromatic,
                carboxylic_acid
            ],
            'prediction': 1
        },
        {
            'number': 4,
            'description': 'Modifiers with electron-donating groups (e.g., amino, hydroxy, methoxy) on aromatic rings decrease Fe/Hf.',
            'patterns': [
                aromatic_ring,
                amine_on_aromatic,
                hydroxyl_on_aromatic,
                methoxy_on_aromatic,
                carboxylic_acid
            ],
            'prediction': -1
        },
        {
            'number': 5,
            'description': 'Modifiers containing pyridine rings directly attached to carboxylic acid groups increase Fe/Hf.',
            'patterns': [
                pyridine_with_carboxylic_acid
            ],
            'prediction': 1
        },
        {
            'number': 6,
            'description': 'Modifiers that are simple aliphatic carboxylic acids without additional coordinating functional groups decrease Fe/Hf.',
            'patterns': [
                carboxylic_acid
            ],
            'exclude_patterns': [
                '[NX3]',  # Exclude amines
                '[SX2]',  # Exclude thiols
                '[OX2][#6]',  # Exclude ethers
                '[!#1][F,Cl,Br,I]',  # Exclude halogens
                '[a]'  # Exclude aromatic rings
            ],
            'prediction': -1
        },
        {
            'number': 7,
            'description': 'Modifiers with terminal hydroxyl groups on long aliphatic chains increase Fe/Hf.',
            'patterns': [
                terminal_hydroxyl,
                long_aliphatic_chain,
                carboxylic_acid
            ],
            'prediction': 1
        },
        {
            'number': 8,
            'description': 'Modifiers containing polyether chains terminating in coordinating groups increase Fe/Hf.',
            'patterns': [
                polyether_chain,
                carboxylic_acid
            ],
            'coordinating_groups': coordinating_groups,
            'prediction': 1
        },
        {
            'number': 9,
            'description': 'Modifiers containing aldehyde (-CHO) functional groups decrease Fe/Hf.',
            'patterns': [
                aldehyde,
                carboxylic_acid
            ],
            'prediction': -1
        },
        {
            'number': 10,
            'description': 'Modifiers that are α-amino acids with side chains capable of coordinating with Fe ions increase Fe/Hf.',
            'patterns': [
                alpha_amino_acid
            ],
            'prediction': 1
        }
    ]
    
    # Compile SMARTS patterns
    for rule in rules:
        compiled_patterns = [Chem.MolFromSmarts(p) for p in rule.get('patterns', [])]
        rule['compiled_patterns'] = compiled_patterns
        # Compile exclude patterns if any
        if 'exclude_patterns' in rule:
            compiled_excludes = [Chem.MolFromSmarts(p) for p in rule['exclude_patterns']]
            rule['compiled_exclude_patterns'] = compiled_excludes
        # Compile coordinating groups for rule 8
        if 'coordinating_groups' in rule:
            compiled_coord_groups = [Chem.MolFromSmarts(p) for p in rule['coordinating_groups']]
            rule['compiled_coord_groups'] = compiled_coord_groups
    
    # Initialize results list
    results = []
    
    # Process each SMILES string
    for smi in smiles_list:
        mol = Chem.MolFromSmiles(smi)
        if mol is None:
            # If the molecule cannot be parsed, append a row of zeros
            results.append([0]*len(rules))
            continue
        row = []
        for rule in rules:
            try:
                match = True
                # Check exclude patterns if any
                if 'exclude_patterns' in rule:
                    for pat in rule['compiled_exclude_patterns']:
                        if mol.HasSubstructMatch(pat):
                            match = False
                            break
                    if not match:
                        row.append(0)
                        continue
                # Check required patterns
                for pat in rule['compiled_patterns']:
                    if not mol.HasSubstructMatch(pat):
                        match = False
                        break
                # Additional checks, e.g., for terminal primary amine
                if match and 'additional_checks' in rule:
                    if rule['additional_checks'] == 'terminal_primary_amine':
                        # Check if the primary amine is at terminal position
                        pattern = Chem.MolFromSmarts(primary_amine)
                        matches = mol.GetSubstructMatches(pattern)
                        terminal_match = False
                        for match_idx in matches:
                            atom = mol.GetAtomWithIdx(match_idx[0])
                            nbr_carbons = [nbr for nbr in atom.GetNeighbors() if nbr.GetAtomicNum() == 6]
                            for carbon in nbr_carbons:
                                if carbon.GetTotalDegree() == 1:
                                    terminal_match = True
                                    break
                            if terminal_match:
                                break
                        if not terminal_match:
                            match = False
                # Additional checks for rule 8 coordinating groups
                if match and 'coordinating_groups' in rule:
                    coord_match = False
                    for coord_pat in rule['compiled_coord_groups']:
                        if mol.HasSubstructMatch(coord_pat):
                            coord_match = True
                            break
                    if not coord_match:
                        match = False
                # Add prediction
                if match:
                    row.append(rule['prediction'])
                else:
                    row.append(0)
            except Exception as e:
                # In case of any error, append 0 and optionally log the error
                # print(f"Error processing rule {rule['number']} for SMILES {smi}: {e}")
                row.append(0)
        results.append(row)
    # Create DataFrame with results
    df = pd.DataFrame(results, columns=[f'Rule {rule['number']}' for rule in rules])
    return df

--------------------------------------------------
    Target Name: Fe/Hf
    GPT Model: o1-preview-2024-09-12
    ML Model: ETC
    Current_Rules:
    **Start of Rules**

---

- **Rule 1**: *Modifiers containing a terminal primary amine group (-NH₂) connected via an aliphatic chain of at least three carbon atoms to a carboxylic acid group increase Fe/Hf* (Fe/Hf_high_or_low_value == True).

  - **Explanation**: The primary amine and carboxylate groups act as bidentate ligands, effectively chelating Fe ions. The aliphatic chain provides optimal spacing for coordination, enhancing metal binding and increasing Fe loading onto the catalyst.

  - **Examples**:
    - **High Fe/Hf**:
      - *5-aminopentanoic acid*
      - *7-aminoheptanoic acid*
      - *8-aminooctanoic acid*
    - **Structural Features**:
      - Terminal primary amine (-NH₂)
      - Aliphatic chain (≥3 carbons)
      - Carboxylic acid group (-COOH)

  - **Counter-Examples**:
    - **Low Fe/Hf**:
      - *Octanoic acid* (lacks amine group)
      - *(2S)-2-aminopentanedioic acid* (glutamic acid; side chain may be too long for effective chelation)

---

- **Rule 2**: *Modifiers with both a thiol group (-SH) and a carboxylic acid group increase Fe/Hf.*

  - **Explanation**: Thiol groups have lone pair electrons on sulfur atoms that form strong coordinate bonds with Fe ions. The combination of thiol and carboxylate groups enables the modifier to act as a chelating agent, enhancing Fe binding.

  - **Examples**:
    - **High Fe/Hf**:
      - *3-sulfanylpropanoic acid*
      - *4-sulfanylbenzoic acid*
    - **Structural Features**:
      - Thiol group (-SH)
      - Carboxylic acid group (-COOH)

  - **Counter-Examples**:
    - **Low Fe/Hf**:
      - *Octanoic acid* (no thiol group)
      - *4-hydroxybenzoic acid* (hydroxyl group instead of thiol)

---

- **Rule 3**: *Modifiers containing an aromatic ring with an electron-withdrawing group (e.g., nitro (-NO₂), halogen (-Br)) at the para position relative to a carboxylic acid group increase Fe/Hf.*

  - **Explanation**: Electron-withdrawing groups increase the acidity of the carboxylic acid by stabilizing the negative charge on the carboxylate anion. This enhances the carboxylate's ability to coordinate with Fe ions, leading to stronger metal-ligand interactions and higher Fe loading.

  - **Examples**:
    - **High Fe/Hf**:
      - *4-nitrobenzoic acid*
      - *4-(bromomethyl)benzoic acid*
      - *1,3-dioxo-2-benzofuran-5-carboxylic acid*
    - **Structural Features**:
      - Aromatic ring
      - Electron-withdrawing group at para position
      - Carboxylic acid group (-COOH)

  - **Counter-Examples**:
    - **Low Fe/Hf**:
      - *4-methylbenzoic acid* (electron-donating methyl group)
      - *4-aminobenzoic acid* (electron-donating amino group)

---

- **Rule 4**: *Modifiers containing an aromatic ring with an electron-donating group (e.g., amino (-NH₂), hydroxyl (-OH), methyl (-CH₃)) at the para position relative to a carboxylic acid group decrease Fe/Hf* (Fe/Hf_high_or_low_value == False).

  - **Explanation**: Electron-donating groups decrease the acidity of the carboxylic acid by destabilizing the carboxylate anion. This reduces the carboxylate's ability to coordinate with Fe ions, leading to weaker metal-ligand interactions and lower Fe loading.

  - **Examples**:
    - **Low Fe/Hf**:
      - *4-aminobenzoic acid*
      - *4-hydroxybenzoic acid*
      - *4-methylbenzoic acid*
    - **Structural Features**:
      - Aromatic ring
      - Electron-donating group at para position
      - Carboxylic acid group (-COOH)

  - **Counter-Examples**:
    - **High Fe/Hf**:
      - *4-nitrobenzoic acid* (electron-withdrawing group)
      - *4-(bromomethyl)benzoic acid* (electron-withdrawing group)

---

- **Rule 5**: *Modifiers containing a pyridine ring attached such that the nitrogen atom is not adjacent to the carboxylic acid group increase Fe/Hf.*

  - **Explanation**: The pyridine nitrogen serves as an additional coordination site for Fe ions. When the nitrogen is positioned away from the carboxylic acid group, it enhances chelation by reducing steric hindrance and allowing simultaneous coordination.

  - **Examples**:
    - **High Fe/Hf**:
      - *4-pyridin-4-ylbenzoic acid*
      - *4-pyridin-4-ylbutanoic acid*
    - **Structural Features**:
      - Pyridine ring (nitrogen-containing aromatic ring)
      - Nitrogen not adjacent to carboxylic acid group
      - Carboxylic acid group (-COOH)

  - **Counter-Examples**:
    - **Low Fe/Hf**:
      - *Pyridine-3-carboxylic acid* (nicotinic acid; nitrogen adjacent to carboxylic acid group)

---

- **Rule 6**: *Modifiers containing polyether chains ending with a carboxylic acid or primary amine group increase Fe/Hf.*

  - **Explanation**: Polyether chains increase solubility and flexibility, allowing terminal coordinating groups to interact effectively with Fe ions. Ether oxygens may also contribute to coordination through lone pair electrons.

  - **Examples**:
    - **High Fe/Hf**:
      - *2-[2-(2-methoxyethoxy)ethoxy]acetic acid*
      - *3-[2-(2-aminoethoxy)ethoxy]propanoic acid*
    - **Structural Features**:
      - Polyether chain (-O-CH₂-CH₂-)ₙ
      - Terminal carboxylic acid (-COOH) or primary amine (-NH₂)

  - **Counter-Examples**:
    - **Low Fe/Hf**:
      - *2-[[1,3-dihydroxy-2-(hydroxymethyl)propan-2-yl]oxy]acetic acid* (multiple hydroxyl groups may hinder coordination)

---

- **Rule 7**: *Modifiers containing multiple hydroxyl groups (-OH) on a short aliphatic chain decrease Fe/Hf.*

  - **Explanation**: Multiple hydroxyl groups can form intramolecular hydrogen bonds or increase steric hindrance, reducing available coordination sites for Fe ions. Increased hydrophilicity may also adversely affect catalyst interactions.

  - **Examples**:
    - **Low Fe/Hf**:
      - *(2R,3S,4R,5R)-2,3,4,5,6-pentahydroxyhexanoic acid* (gluconic acid)
    - **Structural Features**:
      - Short aliphatic chain
      - Multiple hydroxyl groups (-OH)
      - Carboxylic acid group (-COOH)

  - **Counter-Examples**:
    - **High Fe/Hf**:
      - *7-hydroxyheptanoic acid* (single hydroxyl group; longer chain allows better coordination)

---

- **Rule 8**: *Modifiers with perfluorinated or highly fluorinated aliphatic chains decrease Fe/Hf.*

  - **Explanation**: Fluorine atoms withdraw electron density from coordinating oxygen atoms, reducing their ability to donate electron pairs to Fe ions. This weakens metal-ligand interactions and lowers Fe loading.

  - **Examples**:
    - **Low Fe/Hf**:
      - *2,2,3,3,4,4,5,5,5-nonafluoropentanoic acid*
    - **Structural Features**:
      - Aliphatic chain
      - Multiple fluorine atoms (-C-F bonds)
      - Carboxylic acid group (-COOH)

  - **Counter-Examples**:
    - **High Fe/Hf**:
      - *Non-fluorinated aliphatic acids with coordinating groups*

---

- **Rule 9**: *Modifiers containing aldehyde groups (-CHO) adjacent to the carboxylic acid group decrease Fe/Hf.*

  - **Explanation**: Aldehyde groups may engage in side reactions or form intramolecular interactions that interfere with Fe coordination. Proximity of the aldehyde can create steric hindrance, reducing effective metal binding.

  - **Examples**:
    - **Low Fe/Hf**:
      - *4-formylbenzoic acid*
      - *5-formyl-2-hydroxybenzoic acid*
    - **Structural Features**:
      - Aldehyde group (-CHO) adjacent to carboxylic acid (-COOH)
      - Aromatic ring

  - **Counter-Examples**:
    - **High Fe/Hf**:
      - *4-pyridin-4-ylbenzoic acid* (no aldehyde group; additional nitrogen coordination)

---

- **Rule 10**: *Simple aliphatic carboxylic acids without additional coordinating functional groups decrease Fe/Hf* (Fe/Hf_high_or_low_value == False).

  - **Explanation**: These modifiers interact weakly with Fe ions due to the absence of additional coordinating sites. Limited coordination reduces Fe loading onto the catalyst.

  - **Examples**:
    - **Low Fe/Hf**:
      - *Octanoic acid*
      - *4-oxoheptanedioic acid*
    - **Structural Features**:
      - Aliphatic chain
      - Only one carboxylic acid group (-COOH)
      - No additional coordinating groups

  - **Counter-Examples**:
    - **High Fe/Hf**:
      - *5-aminopentanoic acid* (presence of amine group)
      - *7-hydroxyheptanoic acid* (additional hydroxyl group)

---

**End of Rules**

---

These rules have been refined to enhance clarity and coverage of the dataset while maintaining a balance between simplicity and complexity. They focus on combinations of functional groups and structural features that directly influence the Fe/Hf ratio based on underlying chemical principles. Each rule includes explanations, examples, structural features, and counter-examples to illustrate their applicability and limitations.---------------------------------------------------------------


    Current_Matrix:
    Matrix Generator Message:
Rule 1,Rule 2,Rule 3,Rule 4,Rule 5,Rule 6,Rule 7,Rule 8,Rule 9,Rule 10
0,1,0,0,0,0,0,0,0,0
1,1,0,0,0,0,0,0,0,0
0,1,0,0,0,0,0,0,0,0
0,1,0,0,0,0,0,0,0,0
1,1,0,0,0,0,0,0,0,0
1,1,0,0,0,0,0,0,0,0
0,1,0,0,0,0,0,0,0,0
0,1,0,0,0,0,0,0,0,0
0,1,0,0,0,0,0,0,0,0
0,1,0,0,1,0,0,0,0,0
0,1,0,0,0,0,0,0,0,0
0,1,0,0,0,0,0,0,0,0
0,1,0,0,0,0,0,0,0,0
0,1,0,0,1,0,0,0,0,0
0,1,0,0,0,0,0,0,0,0
0,1,0,0,0,0,0,0,0,0
0,1,0,0,0,0,0,0,0,0
0,1,0,0,0,0,0,0,0,0
0,1,0,0,0,0,0,0,0,0
0,1,0,0,0,0,0,0,0,0
0,1,0,0,0,0,0,0,0,0
0,1,0,0,0,0,0,0,0,0
0,1,0,0,1,0,0,0,0,0
0,1,0,0,0,0,0,0,0,0
1,1,0,0,0,0,0,0,0,0
0,1,0,0,1,0,0,0,0,0
0,1,0,0,0,0,0,0,0,0
0,1,0,0,0,0,0,0,0,0
0,1,0,0,0,0,0,0,0,0
0,1,0,0,0,0,0,0,0,0
0,1,0,0,0,0,0,0,0,0
0,1,0,0,0,0,0,0,0,0
1,1,0,0,0,0,0,0,0,0
1,1,0,0,0,0,0,0,0,0
0,1,0,0,0,0,0,0,0,0
1,1,0,0,0,0,0,0,0,0

---------------------------------------------------------------


    Train Accuracy: 0.5714285714285714; Test Accuracy: 1.0
    Train Support: 0.14285714285714285; Test Support: 0.0
    Train Confidence: 0.7142857142857143; Test Confidence: 0.5
    Train Lift: 1.388888888888889; Test Lift: NONE
    Train Leverage: 0.039999999999999994; Test Leverage: NONE
    ----------------------------------------------------------------------------------

    Current Rule Code:
def rule2matrix(smiles_list):
    # Define SMARTS patterns for functional groups and features used in the rules
    
    # Carboxylic acid group (-COOH)
    carboxylic_acid = '[CX3](=O)[OX2H1]'
    
    # Primary amine group (-NH2)
    primary_amine = '[NX3;H2]'
    
    # Thiol group (-SH)
    thiol_group = '[SX2H]'
    
    # Aromatic ring
    aromatic_ring = 'a1aaaaa1'  # Generic aromatic ring
    
    # Electron-withdrawing groups at para position relative to carboxylic acid
    # Halogens at para position
    para_halogen = '[c][c][cX1;$([cX1][F,Cl,Br,I])][c][c](=O)[OX2H1]'
    # Nitro group at para position
    para_nitro = '[c][c][c][c](N(=O)=O)[c](=O)[OX2H1]'
    
    # Electron-donating groups at para position relative to carboxylic acid
    para_amino = '[c][c][c][c][NX3;H2][c](=O)[OX2H1]'
    para_hydroxyl = '[c][c][c][c][OX2H][c](=O)[OX2H1]'
    para_methyl = '[c][c][c][c][CH3][c](=O)[OX2H1]'
    
    # Pyridine ring with nitrogen not adjacent to carboxylic acid
    pyridine_ring = 'n1ccccc1'
    
    # Polyether chain ending with carboxylic acid or primary amine group
    polyether_chain_acid = '[OX2][CH2][CH2]([OX2][CH2][CH2]){0,}[C](=O)[OX2H1]'
    polyether_chain_amine = '[OX2][CH2][CH2]([OX2][CH2][CH2]){0,}[NH2]'
    
    # Multiple hydroxyl groups on a short aliphatic chain (at least 2 hydroxyls)
    multiple_hydroxyls = '[#6][OX2H][#6][OX2H][#6][OX2H]'
    
    # Perfluorinated chains
    perfluoro_chain = '[CF2][CF2][CF2][C](=O)[OX2H1]'
    
    # Aldehyde group adjacent to carboxylic acid
    aldehyde_adjacent_to_carboxylic = '[CX3H1](=O)[CX3](=O)[OX2H1]'
    
    # Simple aliphatic carboxylic acids without additional coordinating functional groups
    simple_aliphatic_acid = '[CH3][CH2]{0,}[C](=O)[OX2H1]'
    
    # Compile SMARTS patterns
    patterns = {
        'carboxylic_acid': Chem.MolFromSmarts(carboxylic_acid),
        'primary_amine': Chem.MolFromSmarts(primary_amine),
        'thiol_group': Chem.MolFromSmarts(thiol_group),
        'aromatic_ring': Chem.MolFromSmarts(aromatic_ring),
        'para_halogen': Chem.MolFromSmarts(para_halogen),
        'para_nitro': Chem.MolFromSmarts(para_nitro),
        'para_amino': Chem.MolFromSmarts(para_amino),
        'para_hydroxyl': Chem.MolFromSmarts(para_hydroxyl),
        'para_methyl': Chem.MolFromSmarts(para_methyl),
        'pyridine_ring': Chem.MolFromSmarts(pyridine_ring),
        'polyether_chain_acid': Chem.MolFromSmarts(polyether_chain_acid),
        'polyether_chain_amine': Chem.MolFromSmarts(polyether_chain_amine),
        'multiple_hydroxyls': Chem.MolFromSmarts(multiple_hydroxyls),
        'perfluoro_chain': Chem.MolFromSmarts(perfluoro_chain),
        'aldehyde_adjacent_to_carboxylic': Chem.MolFromSmarts(aldehyde_adjacent_to_carboxylic),
        'simple_aliphatic_acid': Chem.MolFromSmarts(simple_aliphatic_acid),
    }
    
    # Define the rules with their associated patterns and predictions
    rules = [
        {
            'number': 1,
            'description': 'Modifiers containing a terminal primary amine group (-NH₂) connected via an aliphatic chain of at least three carbon atoms to a carboxylic acid group increase Fe/Hf.',
            'function': rule1,
            'prediction': 1
        },
        {
            'number': 2,
            'description': 'Modifiers with both a thiol group (-SH) and a carboxylic acid group increase Fe/Hf.',
            'patterns': ['thiol_group', 'carboxylic_acid'],
            'prediction': 1
        },
        {
            'number': 3,
            'description': 'Modifiers containing an aromatic ring with an electron-withdrawing group at the para position relative to a carboxylic acid group increase Fe/Hf.',
            'patterns': ['para_halogen', 'para_nitro'],
            'prediction': 1
        },
        {
            'number': 4,
            'description': 'Modifiers containing an aromatic ring with an electron-donating group at the para position relative to a carboxylic acid group decrease Fe/Hf.',
            'patterns': ['para_amino', 'para_hydroxyl', 'para_methyl'],
            'prediction': -1
        },
        {
            'number': 5,
            'description': 'Modifiers containing a pyridine ring attached such that the nitrogen atom is not adjacent to the carboxylic acid group increase Fe/Hf.',
            'function': rule5,
            'prediction': 1
        },
        {
            'number': 6,
            'description': 'Modifiers containing polyether chains ending with a carboxylic acid or primary amine group increase Fe/Hf.',
            'patterns': ['polyether_chain_acid', 'polyether_chain_amine'],
            'prediction': 1
        },
        {
            'number': 7,
            'description': 'Modifiers containing multiple hydroxyl groups (-OH) on a short aliphatic chain decrease Fe/Hf.',
            'patterns': ['multiple_hydroxyls'],
            'prediction': -1
        },
        {
            'number': 8,
            'description': 'Modifiers with perfluorinated or highly fluorinated aliphatic chains decrease Fe/Hf.',
            'patterns': ['perfluoro_chain'],
            'prediction': -1
        },
        {
            'number': 9,
            'description': 'Modifiers containing aldehyde groups (-CHO) adjacent to the carboxylic acid group decrease Fe/Hf.',
            'patterns': ['aldehyde_adjacent_to_carboxylic'],
            'prediction': -1
        },
        {
            'number': 10,
            'description': 'Simple aliphatic carboxylic acids without additional coordinating functional groups decrease Fe/Hf.',
            'patterns': ['simple_aliphatic_acid'],
            'exclude_patterns': ['primary_amine', 'thiol_group', 'aromatic_ring', 'polyether_chain_acid', 'polyether_chain_amine'],
            'prediction': -1
        }
    ]
    
    results = []

    for smi in smiles_list:
        mol = Chem.MolFromSmiles(smi)
        if mol is None:
            # Append zeros if SMILES is invalid
            results.append([0]*len(rules))
            continue
        row = []
        for rule in rules:
            try:
                match = False
                # Use function if specified (for complex rules)
                if 'function' in rule:
                    match = rule['function'](mol)
                else:
                    # Check include patterns
                    for pat_name in rule.get('patterns', []):
                        pat = patterns[pat_name]
                        if mol.HasSubstructMatch(pat):
                            match = True
                            break
                    # Check exclude patterns
                    if match and 'exclude_patterns' in rule:
                        for pat_name in rule['exclude_patterns']:
                            pat = patterns[pat_name]
                            if mol.HasSubstructMatch(pat):
                                match = False
                                break
                if match:
                    row.append(rule['prediction'])
                else:
                    row.append(0)
            except Exception as e:
                row.append(0)
        results.append(row)
    
    # Create DataFrame
    df = pd.DataFrame(results, columns=[f'Rule {rule["number"]}' for rule in rules])
    return df

# Define function for Rule 1

def rule1(mol):
    # Identify primary amine nitrogens
    primary_amine = Chem.MolFromSmarts('[NX3;H2]')
    amine_matches = mol.GetSubstructMatches(primary_amine)
    # Identify carboxylic acid carbons
    carboxylic_acid = Chem.MolFromSmarts('[CX3](=O)[OX2H1]')
    acid_matches = mol.GetSubstructMatches(carboxylic_acid)
    if not amine_matches or not acid_matches:
        return False
    # For each pair, find shortest path
    for amine_match in amine_matches:
        amine_atom = mol.GetAtomWithIdx(amine_match[0])
        for acid_match in acid_matches:
            acid_atom = mol.GetAtomWithIdx(acid_match[0])
            # Find path
            path = Chem.GetShortestPath(mol, amine_atom.GetIdx(), acid_atom.GetIdx())
            # Check number of carbons in path (excluding amine nitrogen and carboxyl carbon)
            carbons_in_path = 0
            for idx in path:
                atom = mol.GetAtomWithIdx(idx)
                if atom.GetAtomicNum() == 6 and idx != amine_atom.GetIdx() and idx != acid_atom.GetIdx():
                    carbons_in_path +=1
            if carbons_in_path >=3:
                return True
    return False

# Define function for Rule 5

def rule5(mol):
    # Identify pyridine rings
    pyridine = Chem.MolFromSmarts('n1ccccc1')
    pyridine_matches = mol.GetSubstructMatches(pyridine)
    # Identify carboxylic acid group
    carboxylic_acid = Chem.MolFromSmarts('[CX3](=O)[OX2H1]')
    acid_matches = mol.GetSubstructMatches(carboxylic_acid)
    if not pyridine_matches or not acid_matches:
        return False
    # Check that nitrogen is not adjacent to carboxylic acid
    for pyridine_match in pyridine_matches:
        nitrogen_idx = pyridine_match[0]  # Nitrogen atom in pyridine
        for acid_match in acid_matches:
            acid_carbon_idx = acid_match[0]
            # Check if nitrogen and acid carbon are adjacent
            bond = mol.GetBondBetweenAtoms(nitrogen_idx, acid_carbon_idx)
            if bond:
                continue  # Nitrogen is adjacent to carboxylic acid
            else:
                # Check distance between nitrogen and acid carbon
                path = Chem.GetShortestPath(mol, nitrogen_idx, acid_carbon_idx)
                if len(path) > 1:
                    return True
    return False
--------------------------------------------------
    Target Name: Fe/Hf
    GPT Model: o1-preview-2024-09-12
    ML Model: ETC
    Current_Rules:
    **Start of Rules**

---

- **Rule 1**: *Modifiers containing a primary amine group (-NH₂) connected via an aliphatic chain of at least three carbon atoms to a carboxylic acid group increase Fe/Hf* (Fe/Hf_high_or_low_value == True).

  - **Explanation**: The primary amine and carboxylate groups can act as bidentate ligands, effectively chelating Fe ions. The aliphatic chain provides optimal spacing for coordination, enhancing metal binding and increasing Fe loading onto the catalyst.

  - **Examples**:
    - **High Fe/Hf**:
      - *5-aminopentanoic acid*
      - *7-aminoheptanoic acid*
      - *8-aminooctanoic acid*
    - **Structural Features**:
      - Terminal primary amine (-NH₂)
      - Aliphatic chain (≥3 carbons)
      - Carboxylic acid group (-COOH)

  - **Counter-Examples**:
    - **Low Fe/Hf**:
      - *(2S)-2-aminopentanedioic acid* (glutamic acid; additional carboxylate may hinder effective chelation)
      - *Octanoic acid* (lacks amine group)

---

- **Rule 2**: *Modifiers containing thiol groups (-SH) alongside carboxylic acid groups increase Fe/Hf.*

  - **Explanation**: Thiol groups have lone pair electrons on sulfur atoms that form strong coordinate bonds with Fe ions. The combination of thiol and carboxylate groups enables the modifier to act as a chelating agent, enhancing Fe binding.

  - **Examples**:
    - **High Fe/Hf**:
      - *3-sulfanylpropanoic acid*
      - *4-sulfanylbenzoic acid*
    - **Structural Features**:
      - Thiol group (-SH)
      - Carboxylic acid group (-COOH)

  - **Counter-Examples**:
    - **Low Fe/Hf**:
      - *4-hydroxybenzoic acid* (has hydroxyl group instead of thiol)
      - *Octanoic acid* (no thiol group)

---

- **Rule 3**: *Modifiers containing an aromatic ring with an electron-withdrawing group (e.g., nitro (-NO₂), halogen (-Br)) at the para position relative to a carboxylic acid group increase Fe/Hf.*

  - **Explanation**: Electron-withdrawing groups increase the acidity of the carboxylic acid by stabilizing the negative charge on the carboxylate anion. This enhances the carboxylate's ability to coordinate with Fe ions, leading to stronger metal-ligand interactions and higher Fe loading.

  - **Examples**:
    - **High Fe/Hf**:
      - *4-nitrobenzoic acid*
      - *4-(bromomethyl)benzoic acid*
    - **Structural Features**:
      - Aromatic ring
      - Electron-withdrawing group at para position
      - Carboxylic acid group (-COOH)

  - **Counter-Examples**:
    - **Low Fe/Hf**:
      - *4-methylbenzoic acid* (electron-donating methyl group)
      - *4-aminobenzoic acid* (electron-donating amino group)

---

- **Rule 4**: *Modifiers containing an aromatic ring with an electron-donating group (e.g., amino (-NH₂), hydroxyl (-OH), methyl (-CH₃)) at the para position relative to a carboxylic acid group decrease Fe/Hf* (Fe/Hf_high_or_low_value == False).

  - **Explanation**: Electron-donating groups decrease the acidity of the carboxylic acid by destabilizing the carboxylate anion. This reduces the carboxylate's ability to coordinate with Fe ions, leading to weaker metal-ligand interactions and lower Fe loading.

  - **Examples**:
    - **Low Fe/Hf**:
      - *4-aminobenzoic acid*
      - *4-hydroxybenzoic acid*
      - *4-methylbenzoic acid*
    - **Structural Features**:
      - Aromatic ring
      - Electron-donating group at para position
      - Carboxylic acid group (-COOH)

  - **Counter-Examples**:
    - **High Fe/Hf**:
      - *4-nitrobenzoic acid* (electron-withdrawing group)
      - *4-(bromomethyl)benzoic acid* (electron-withdrawing group)

---

- **Rule 5**: *Modifiers containing a pyridine ring where the nitrogen atom is not adjacent to the carboxylic acid group increase Fe/Hf.*

  - **Explanation**: The pyridine nitrogen serves as an additional coordination site for Fe ions. When the nitrogen is positioned away from the carboxylic acid group, it enhances chelation by reducing steric hindrance and allowing simultaneous coordination.

  - **Examples**:
    - **High Fe/Hf**:
      - *4-pyridin-4-ylbenzoic acid*
      - *4-pyridin-4-ylbutanoic acid*
    - **Structural Features**:
      - Pyridine ring (nitrogen-containing aromatic ring)
      - Nitrogen not adjacent to carboxylic acid group
      - Carboxylic acid group (-COOH)

  - **Counter-Examples**:
    - **Low Fe/Hf**:
      - *Pyridine-3-carboxylic acid* (nicotinic acid; nitrogen adjacent to carboxylic acid group)

---

- **Rule 6**: *Modifiers containing multiple hydroxyl groups (-OH) on a short aliphatic chain decrease Fe/Hf.*

  - **Explanation**: Multiple hydroxyl groups can form intramolecular hydrogen bonds or increase steric hindrance, reducing available coordination sites for Fe ions. Increased hydrophilicity may also adversely affect catalyst interactions.

  - **Examples**:
    - **Low Fe/Hf**:
      - *(2R,3S,4R,5R)-2,3,4,5,6-pentahydroxyhexanoic acid* (gluconic acid)
      - *2-[[1,3-dihydroxy-2-(hydroxymethyl)propan-2-yl]oxy]acetic acid*
    - **Structural Features**:
      - Short aliphatic chain
      - Multiple hydroxyl groups (-OH)
      - Carboxylic acid group (-COOH)

  - **Counter-Examples**:
    - **High Fe/Hf**:
      - *7-hydroxyheptanoic acid* (single hydroxyl group; longer chain allows better coordination)

---

- **Rule 7**: *Modifiers with perfluorinated or highly fluorinated aliphatic chains decrease Fe/Hf.*

  - **Explanation**: Fluorine atoms withdraw electron density from coordinating oxygen atoms, reducing their ability to donate electron pairs to Fe ions. This weakens metal-ligand interactions and lowers Fe loading.

  - **Examples**:
    - **Low Fe/Hf**:
      - *2,2,3,3,4,4,5,5,5-nonafluoropentanoic acid*

    - **Structural Features**:
      - Aliphatic chain
      - Multiple fluorine atoms (-C-F bonds)
      - Carboxylic acid group (-COOH)

  - **Counter-Examples**:
    - **High Fe/Hf**:
      - *Non-fluorinated aliphatic acids with coordinating groups*

---

- **Rule 8**: *Modifiers containing aldehyde groups (-CHO) adjacent to the carboxylic acid group decrease Fe/Hf.*

  - **Explanation**: Aldehyde groups may engage in side reactions or form intramolecular interactions that interfere with Fe coordination. Proximity of the aldehyde can create steric hindrance, reducing effective metal binding.

  - **Examples**:
    - **Low Fe/Hf**:
      - *4-formylbenzoic acid*
      - *5-formyl-2-hydroxybenzoic acid*
    - **Structural Features**:
      - Aldehyde group (-CHO) adjacent to carboxylic acid (-COOH)
      - Aromatic ring

  - **Counter-Examples**:
    - **High Fe/Hf**:
      - *4-pyridin-4-ylbenzoic acid* (no aldehyde group; additional nitrogen coordination)

---

- **Rule 9**: *Simple aliphatic carboxylic acids without additional coordinating functional groups decrease Fe/Hf* (Fe/Hf_high_or_low_value == False).

  - **Explanation**: These modifiers interact weakly with Fe ions due to the absence of additional coordinating sites. Limited coordination reduces Fe loading onto the catalyst.

  - **Examples**:
    - **Low Fe/Hf**:
      - *Octanoic acid*
      - *4-oxoheptanedioic acid*
    - **Structural Features**:
      - Aliphatic chain
      - Only carboxylic acid group (-COOH)
      - No additional coordinating groups

  - **Counter-Examples**:
    - **High Fe/Hf**:
      - *5-aminopentanoic acid* (presence of amine group)
      - *7-hydroxyheptanoic acid* (additional hydroxyl group)

---

- **Rule 10**: *Modifiers containing polyether chains ending with a carboxylic acid or primary amine group increase Fe/Hf.*

  - **Explanation**: Polyether chains increase solubility and flexibility, allowing terminal coordinating groups to interact effectively with Fe ions. Ether oxygens may also contribute to coordination through lone pair electrons.

  - **Examples**:
    - **High Fe/Hf**:
      - *2-[2-(2-methoxyethoxy)ethoxy]acetic acid*
      - *3-[2-(2-aminoethoxy)ethoxy]propanoic acid*
    - **Structural Features**:
      - Polyether chain (-O-CH₂-CH₂-)ₙ
      - Terminal carboxylic acid (-COOH) or primary amine (-NH₂)

  - **Counter-Examples**:
    - **Low Fe/Hf**:
      - *Modifiers lacking polyether chains or additional coordinating groups*

---

**End of Rules**---------------------------------------------------------------


    Current_Matrix:
    Matrix Generator Message:
Rule 1,Rule 2,Rule 3,Rule 4,Rule 5,Rule 6,Rule 7,Rule 8,Rule 9,Rule 10
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,1,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,1,-1,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,1,0,1,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,1,1,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,1,0,1,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,-1,0,0,0
0,0,1,0,0,0,0,0,0,0
0,0,1,0,0,0,0,0,0,0
0,1,0,0,0,0,0,0,0,0
0,0,1,-1,0,0,0,0,0,0
0,0,1,0,0,0,0,0,0,0
0,0,1,0,0,0,0,0,0,0
0,0,1,0,1,0,0,0,0,0
0,0,1,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,1,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,-1,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0

---------------------------------------------------------------


    Train Accuracy: 0.6571428571428571; Test Accuracy: 0.0
    Train Support: 0.07857142857142857; Test Support: 0.0
    Train Confidence: 0.8541666666666667; Test Confidence: 0.5
    Train Lift: 1.7180691721132897; Test Lift: NONE
    Train Leverage: 0.013265306122448983; Test Leverage: NONE
    ----------------------------------------------------------------------------------

    Current Rule Code:
def rule2matrix(smiles_list):
    # Define SMARTS patterns for functional groups and structural features
    
    # Carboxylic acid group (-COOH)
    carboxylic_acid = '[CX3](=O)[OX2H1]'
    
    # Carboxylate anion
    carboxylate_anion = '[CX3](=O)[O-]'
    
    # Primary amine group (-NH2)
    primary_amine = '[NX3;H2][#6]'
    
    # Thiol group (-SH)
    thiol_group = '[SX2H]'
    
    # Aromatic ring
    aromatic_ring = 'a1aaaaa1'
    
    # Nitro group (-NO2)
    nitro_group = '[NX3](=O)=O'
    
    # Halogen atoms
    halogen_atom = '[F,Cl,Br,I]'
    
    # Electron-donating groups (EDGs) on aromatic ring
    edg_on_aromatic = '[c][$([OX2H]),$([OX2][CH3]),$([NX3;H2,H1][#6])]'  # -OH, -OCH3, -NH2
    
    # Pyridine ring with nitrogen not adjacent to carboxylic acid
    pyridine_ring = '[n][c][c][c][c][c]'
    
    # Aldehyde group adjacent to carboxylic acid (-CHO)
    aldehyde_adjacent = '[#6][CX3H1](=O)[#6][CX3](=O)[OX2H1]'
    
    # Polyether chain ending with carboxylic acid or primary amine
    polyether_chain = '[#6][OX2][#6][OX2][#6][$([OX2H1]),$([NX3;H2])]'  # Simplified pattern
    
    # Aliphatic chain of at least five carbons
    aliphatic_chain_5 = '[CH2][CH2][CH2][CH2][CH2]'
    
    # Define the rules with their associated patterns and predictions
    rules = [
        {
            'number': 1,
            'description': 'High Fe/Hf: Modifiers containing a primary amine group (-NH2) connected via an aliphatic chain of at least three carbon atoms to a carboxylic acid group.',
            'function': lambda mol: rule1(mol),
            'prediction': 1
        },
        {
            'number': 2,
            'description': 'High Fe/Hf: Modifiers containing thiol groups (-SH) alongside carboxylic acid groups.',
            'patterns': [thiol_group, carboxylic_acid],
            'prediction': 1
        },
        {
            'number': 3,
            'description': 'High Fe/Hf: Modifiers containing an aromatic ring with an electron-withdrawing group at the para position relative to a carboxylic acid group.',
            'function': lambda mol: rule3(mol),
            'prediction': 1
        },
        {
            'number': 4,
            'description': 'Low Fe/Hf: Modifiers containing an aromatic ring with an electron-donating group at the para position relative to a carboxylic acid group.',
            'function': lambda mol: rule4(mol),
            'prediction': -1
        },
        {
            'number': 5,
            'description': 'High Fe/Hf: Modifiers containing a pyridine ring where the nitrogen atom is not adjacent to the carboxylic acid group.',
            'function': lambda mol: rule5(mol),
            'prediction': 1
        },
        {
            'number': 6,
            'description': 'Low Fe/Hf: Modifiers containing multiple hydroxyl groups (-OH) on a short aliphatic chain.',
            'function': lambda mol: rule6(mol),
            'prediction': -1
        },
        {
            'number': 7,
            'description': 'Low Fe/Hf: Modifiers with perfluorinated or highly fluorinated aliphatic chains.',
            'function': lambda mol: rule7(mol),
            'prediction': -1
        },
        {
            'number': 8,
            'description': 'Low Fe/Hf: Modifiers containing aldehyde groups (-CHO) adjacent to the carboxylic acid group.',
            'patterns': [aldehyde_adjacent],
            'prediction': -1
        },
        {
            'number': 9,
            'description': 'Low Fe/Hf: Simple aliphatic carboxylic acids without additional coordinating functional groups.',
            'function': lambda mol: rule9(mol),
            'prediction': -1
        },
        {
            'number': 10,
            'description': 'High Fe/Hf: Modifiers containing polyether chains ending with a carboxylic acid or primary amine group.',
            'patterns': [polyether_chain],
            'prediction': 1
        }
    ]
    
    # Compile SMARTS patterns where applicable
    for rule in rules:
        if 'patterns' in rule:
            compiled_patterns = [Chem.MolFromSmarts(pat) for pat in rule['patterns']]
            rule['compiled_patterns'] = compiled_patterns
    
    # Initialize results list
    results = []
    
    # Define rule functions for complex rules
    def rule1(mol):
        try:
            # Primary amine and carboxylic acid connected via aliphatic chain of at least three carbons
            primary_amine_pat = Chem.MolFromSmarts(primary_amine)
            carboxylic_acid_pat = Chem.MolFromSmarts(carboxylic_acid)
            amine_matches = mol.GetSubstructMatches(primary_amine_pat)
            acid_matches = mol.GetSubstructMatches(carboxylic_acid_pat)
            if not amine_matches or not acid_matches:
                return False
            # Check for aliphatic chain connection
            for amine_match in amine_matches:
                for acid_match in acid_matches:
                    path = Chem.rdmolops.GetShortestPath(mol, amine_match[0], acid_match[0])
                    if len(path) >= 5:  # At least three atoms between amine and acid
                        submol = Chem.PathToSubmol(mol, path)
                        if all(not atom.GetIsAromatic() and atom.GetSymbol() == 'C' for atom in submol.GetAtoms()[1:-1]):
                            return True
            return False
        except:
            return False
    
    def rule3(mol):
        try:
            # Aromatic ring with EWG at para position relative to carboxylic acid
            carboxylic_acid_pat = Chem.MolFromSmarts(carboxylic_acid)
            ewg_pat = Chem.MolFromSmarts('c[CX3](=O)[OX1]')  # Simplified EWG pattern
            matches = mol.GetSubstructMatches(carboxylic_acid_pat)
            if not matches:
                return False
            for match in matches:
                atom = mol.GetAtomWithIdx(match[0])
                neighbors = atom.GetNeighbors()
                for nbr in neighbors:
                    if nbr.GetIsAromatic():
                        # Check for para-substituted EWG
                        idx = nbr.GetIdx()
                        for path in Chem.rdmolops.FindAllPathsOfLengthN(mol, 4, useBonds=False):
                            if idx in path:
                                ewg_atom = mol.GetAtomWithIdx(path[-1])
                                if ewg_atom.GetSymbol() in ['F', 'Cl', 'Br', 'I', 'N', 'O']:
                                    return True
            return False
        except:
            return False
    
    def rule4(mol):
        try:
            # Aromatic ring with EDG at para position relative to carboxylic acid
            carboxylic_acid_pat = Chem.MolFromSmarts(carboxylic_acid)
            edg_pat = Chem.MolFromSmarts(edg_on_aromatic)
            matches = mol.GetSubstructMatches(carboxylic_acid_pat)
            if not matches:
                return False
            for match in matches:
                atom = mol.GetAtomWithIdx(match[0])
                neighbors = atom.GetNeighbors()
                for nbr in neighbors:
                    if nbr.GetIsAromatic():
                        # Check for para-substituted EDG
                        idx = nbr.GetIdx()
                        for path in Chem.rdmolops.FindAllPathsOfLengthN(mol, 4, useBonds=False):
                            if idx in path:
                                submol = Chem.PathToSubmol(mol, path)
                                if submol.HasSubstructMatch(edg_pat):
                                    return True
            return False
        except:
            return False
    
    def rule5(mol):
        try:
            # Pyridine ring where nitrogen is not adjacent to carboxylic acid
            pyridine_pat = Chem.MolFromSmarts('n1ccccc1')
            carboxylic_acid_pat = Chem.MolFromSmarts(carboxylic_acid)
            pyridine_matches = mol.GetSubstructMatches(pyridine_pat)
            acid_matches = mol.GetSubstructMatches(carboxylic_acid_pat)
            if not pyridine_matches or not acid_matches:
                return False
            for pyr_match in pyridine_matches:
                for acid_match in acid_matches:
                    pyr_atoms = set(pyr_match)
                    acid_atom_idx = acid_match[0]
                    if acid_atom_idx not in pyr_atoms:
                        # Ensure nitrogen is not adjacent to acid group
                        nitrogen_idx = [idx for idx in pyr_match if mol.GetAtomWithIdx(idx).GetSymbol() == 'N'][0]
                        if not mol.GetBondBetweenAtoms(nitrogen_idx, acid_atom_idx):
                            return True
            return False
        except:
            return False
    
    def rule6(mol):
        try:
            # Multiple hydroxyl groups on a short aliphatic chain
            hydroxyl_pat = Chem.MolFromSmarts(hydroxyl_group)
            matches = mol.GetSubstructMatches(hydroxyl_pat)
            if len(matches) >= 2:
                # Check if hydroxyls are on a chain
                for i in range(len(matches)):
                    for j in range(i+1, len(matches)):
                        path = Chem.rdmolops.GetShortestPath(mol, matches[i][0], matches[j][0])
                        if len(path) <= 6:  # Short chain
                            return True
            return False
        except:
            return False
    
    def rule7(mol):
        try:
            # Highly fluorinated aliphatic chains
            fluorine_pat = Chem.MolFromSmarts('[CX4](F)(F)(F)')
            if mol.HasSubstructMatch(fluorine_pat):
                return True
            return False
        except:
            return False
    
    def rule9(mol):
        try:
            # Simple aliphatic carboxylic acids without additional coordinating functional groups
            carboxylic_acid_pat = Chem.MolFromSmarts(carboxylic_acid)
            other_donor_pats = [Chem.MolFromSmarts(pat) for pat in [primary_amine, thiol_group, hydroxyl_group]]
            if mol.HasSubstructMatch(carboxylic_acid_pat):
                for pat in other_donor_pats:
                    if mol.HasSubstructMatch(pat):
                        return False
                return True
            return False
        except:
            return False
    
    # Process each SMILES string
    for smi in smiles_list:
        mol = Chem.MolFromSmiles(smi)
        if mol is None:
            # If the molecule cannot be parsed, append a row of zeros
            results.append([0]*len(rules))
            continue
        row = []
        for rule in rules:
            try:
                if 'function' in rule:
                    match = rule['function'](mol)
                else:
                    match = all(mol.HasSubstructMatch(pat) for pat in rule['compiled_patterns'])
                if match:
                    row.append(rule['prediction'])
                else:
                    row.append(0)
            except:
                # In case of any error, append 0
                row.append(0)
        results.append(row)
    # Create DataFrame with results
    df = pd.DataFrame(results, columns=[f"Rule {rule['number']}" for rule in rules])
    return df

--------------------------------------------------
    Target Name: Fe/Hf
    GPT Model: o1-preview-2024-09-12
    ML Model: ETC
    Current_Rules:
    **Start of Rules**

---

- **Rule 1**: *Modifiers containing a primary amine group (-NH₂) separated by at least four carbon atoms from a carboxylic acid group increase Fe/Hf* (Fe/Hf_high_or_low_value == True).

  - **Explanation**: A longer aliphatic chain between the amine and carboxylic acid allows for effective chelation of Fe ions. The spatial separation reduces steric hindrance and enhances coordination flexibility, leading to increased Fe loading onto the catalyst.

  - **Examples**:
    - **High Fe/Hf**:
      - *5-aminopentanoic acid*
      - *7-aminoheptanoic acid*
      - *8-aminooctanoic acid*
      - *3-[2-(2-aminoethoxy)ethoxy]propanoic acid*
      - *(2S)-6-acetamido-2-aminohexanoic acid*
    - **Structural Features**:
      - Primary amine (-NH₂) or acetamido group (-NHCOCH₃)
      - Aliphatic chain of at least four carbon atoms between the amine and carboxylic acid
      - Carboxylic acid group (-COOH)

  - **Counter-Examples**:
    - **Low Fe/Hf**:
      - *(2S)-2-aminopentanedioic acid* (glutamic acid; amine too close to carboxylic acids)
      - *4-aminobenzoic acid* (amine directly attached to aromatic ring)

---

- **Rule 2**: *Modifiers containing thiol groups (-SH) in combination with carboxylic acid groups increase Fe/Hf.*

  - **Explanation**: Thiol groups form strong coordinate bonds with Fe ions due to the high affinity of sulfur atoms. The presence of both thiol and carboxylate groups enables bidentate chelation, enhancing metal binding and increasing Fe loading.

  - **Examples**:
    - **High Fe/Hf**:
      - *3-sulfanylpropanoic acid*
      - *4-sulfanylbenzoic acid*
      - *2-[[(2S)-2-amino-4-methylsulfanylbutanoyl]amino]acetic acid*
    - **Structural Features**:
      - Thiol group (-SH) or methylthio group (-SCH₃)
      - Carboxylic acid group (-COOH)
      - Aliphatic or aromatic structure

  - **Counter-Examples**:
    - **Low Fe/Hf**:
      - *Modifiers lacking thiol groups or containing thiol groups that are sterically hindered*
      - *Octanoic acid* (no thiol group)

---

- **Rule 3**: *Modifiers containing an aromatic ring with a strong electron-withdrawing group (e.g., nitro (-NO₂), bromomethyl (-CH₂Br), pyridyl) at the para position relative to a carboxylic acid group increase Fe/Hf.*

  - **Explanation**: Electron-withdrawing groups enhance the acidity of the carboxylic acid by stabilizing the carboxylate anion. This increases the ligand's ability to coordinate with Fe ions, strengthening metal-ligand interactions and promoting higher Fe loading.

  - **Examples**:
    - **High Fe/Hf**:
      - *4-nitrobenzoic acid*
      - *4-(bromomethyl)benzoic acid*
      - *4-pyridin-4-ylbenzoic acid*
    - **Structural Features**:
      - Aromatic ring
      - Electron-withdrawing group at para position
      - Carboxylic acid group (-COOH)

  - **Counter-Examples**:
    - **Low Fe/Hf**:
      - *4-methylbenzoic acid* (electron-donating methyl group)
      - *4-aminobenzoic acid* (electron-donating amino group)

---

- **Rule 4**: *Modifiers containing multiple hydroxyl groups (-OH) on a short aliphatic chain decrease Fe/Hf* (Fe/Hf_high_or_low_value == False).

  - **Explanation**: Multiple hydroxyl groups can increase hydrophilicity and steric hindrance, reducing the ability of coordinating groups to interact effectively with Fe ions. Additionally, extensive hydrogen bonding may compete with metal coordination sites.

  - **Examples**:
    - **Low Fe/Hf**:
      - *(2R,3S,4R,5R)-2,3,4,5,6-pentahydroxyhexanoic acid* (gluconic acid)
      - *2-[[1,3-dihydroxy-2-(hydroxymethyl)propan-2-yl]oxy]acetic acid*
    - **Structural Features**:
      - Short aliphatic chain
      - Multiple hydroxyl groups (-OH)
      - Carboxylic acid group (-COOH)

  - **Counter-Examples**:
    - **High Fe/Hf**:
      - *7-hydroxyheptanoic acid* (single hydroxyl group; longer chain reduces steric hindrance)

---

- **Rule 5**: *Modifiers with perfluorinated or highly fluorinated aliphatic chains decrease Fe/Hf.*

  - **Explanation**: Fluorine atoms are highly electronegative and withdraw electron density from neighboring atoms, diminishing the coordinating ability of groups like carboxylates. The strong C-F bonds reduce the overall polarity and coordination potential of the molecule.

  - **Examples**:
    - **Low Fe/Hf**:
      - *2,2,3,3,4,4,5,5,5-nonafluoropentanoic acid*
      - *4-[(2,2,2-trifluoroacetyl)amino]butanoic acid*
    - **Structural Features**:
      - Aliphatic chain with multiple fluorine atoms (-CF₃, -CF₂-)
      - Carboxylic acid group (-COOH) or trifluoroacetyl group

  - **Counter-Examples**:
    - **High Fe/Hf**:
      - *Non-fluorinated analogs with coordinating groups*

---

- **Rule 6**: *Modifiers containing aromatic rings with electron-donating groups (e.g., hydroxyl (-OH), amino (-NH₂), methoxy (-OCH₃)) at the para position relative to a carboxylic acid group decrease Fe/Hf.*

  - **Explanation**: Electron-donating groups reduce the acidity of the carboxylic acid by destabilizing the carboxylate anion. This weakens its ability to coordinate with Fe ions, resulting in lower Fe loading onto the catalyst.

  - **Examples**:
    - **Low Fe/Hf**:
      - *4-hydroxybenzoic acid*
      - *4-aminobenzoic acid*
      - *4-methylbenzoic acid*
      - *5-(4-hydroxyphenyl)pentanoic acid*
      - *3-(4-hydroxyphenyl)propanoic acid*
    - **Structural Features**:
      - Aromatic ring
      - Electron-donating group at para position
      - Carboxylic acid group (-COOH) or aliphatic acid chain attached to aromatic ring

  - **Counter-Examples**:
    - **High Fe/Hf**:
      - *4-nitrobenzoic acid* (electron-withdrawing group)
      - *4-pyridin-4-ylbenzoic acid* (electron-withdrawing pyridyl group)

---

- **Rule 7**: *Modifiers containing aldehyde groups (-CHO) adjacent to or conjugated with a carboxylic acid group on an aromatic ring decrease Fe/Hf.*

  - **Explanation**: Aldehyde groups can form internal hydrogen bonds or engage in side reactions that interfere with metal coordination. Their presence may also cause steric hindrance or electronic effects that reduce the ligand's affinity for Fe ions.

  - **Examples**:
    - **Low Fe/Hf**:
      - *4-formylbenzoic acid*
      - *5-formyl-2-hydroxybenzoic acid*
    - **Structural Features**:
      - Aromatic ring
      - Aldehyde group (-CHO) near the carboxylic acid (-COOH)
      - Possible additional hydroxyl groups (-OH)

  - **Counter-Examples**:
    - **High Fe/Hf**:
      - *4-nitrobenzoic acid* (substituted with electron-withdrawing group instead of aldehyde)

---

- **Rule 8**: *Modifiers that are amino acids with aromatic side chains increase Fe/Hf.*

  - **Explanation**: The combination of an amino group, carboxylate group, and aromatic side chain provides multiple coordination sites and potential for π-π interactions. This enhances the ligand's ability to chelate Fe ions effectively.

  - **Examples**:
    - **High Fe/Hf**:
      - *(2S)-2-amino-3-phenylpropanoic acid* (phenylalanine)
      - *4-(3,4-dimethoxyphenyl)-4-oxobutanoic acid* (aromatic ketone and methoxy groups)
    - **Structural Features**:
      - α-Amino acid structure
      - Aromatic side chain (e.g., phenyl group, substituted phenyl)
      - Carboxylic acid group (-COOH)

  - **Counter-Examples**:
    - **Low Fe/Hf**:
      - *Aliphatic amino acids without aromatic side chains (unless covered by other rules)*

---

- **Rule 9**: *Modifiers containing polyether chains ending with a primary amine or carboxylic acid group increase Fe/Hf.*

  - **Explanation**: Polyether chains impart flexibility and solubility, allowing terminal coordinating groups to interact effectively with Fe ions. Ether oxygens may also contribute to metal coordination through lone pair donation.

  - **Examples**:
    - **High Fe/Hf**:
      - *2-[2-(2-methoxyethoxy)ethoxy]acetic acid*
      - *3-[2-(2-aminoethoxy)ethoxy]propanoic acid*
    - **Structural Features**:
      - Polyether chain (-O-CH₂-CH₂-)ₙ
      - Terminal primary amine (-NH₂) or carboxylic acid group (-COOH)

  - **Counter-Examples**:
    - **Low Fe/Hf**:
      - *Modifiers lacking polyether chains or with non-coordinating terminal groups*

---

- **Rule 10**: *Simple aliphatic carboxylic acids without additional coordinating functional groups decrease Fe/Hf.*

  - **Explanation**: These modifiers have limited ability to chelate Fe ions due to the absence of additional donor atoms or functional groups. The single carboxylate group provides minimal interaction, resulting in lower Fe loading.

  - **Examples**:
    - **Low Fe/Hf**:
      - *Octanoic acid*
      - *4-oxoheptanedioic acid*
    - **Structural Features**:
      - Straight-chain aliphatic acids
      - Only carboxylic acid groups (-COOH)
      - Lack of additional coordinating groups (e.g., amine, hydroxyl, thiol)

  - **Counter-Examples**:
    - **High Fe/Hf**:
      - *Modifiers with additional functional groups capable of coordinating Fe ions*

---

- **Rule 11**: *Modifiers containing fused aromatic systems with carbonyl groups and a carboxylic acid increase Fe/Hf.*

  - **Explanation**: Fused aromatic systems with carbonyl functionalities provide multiple coordination sites and rigid structures that facilitate strong interactions with Fe ions. The presence of both carbonyl and carboxylate groups enhances chelation.

  - **Examples**:
    - **High Fe/Hf**:
      - *1,3-dioxo-2-benzofuran-5-carboxylic acid*
    - **Structural Features**:
      - Fused aromatic rings (e.g., benzofuran)
      - Carbonyl groups (=O)
      - Carboxylic acid group (-COOH)

  - **Counter-Examples**:
    - **Low Fe/Hf**:
      - *1H-pyrazole-4-carboxylic acid* (smaller ring system; fewer coordination sites)

---

- **Rule 12**: *Modifiers with long aliphatic chains terminating in a hydroxyl group (-OH) increase Fe/Hf when the chain length allows sufficient flexibility and reduced steric hindrance.*

  - **Explanation**: A long aliphatic chain with a terminal hydroxyl group can coordinate with Fe ions while minimizing steric interference. The increased chain length provides flexibility for optimal interaction with the catalyst surface.

  - **Examples**:
    - **High Fe/Hf**:
      - *7-hydroxyheptanoic acid*
    - **Structural Features**:
      - Aliphatic chain of seven or more carbon atoms
      - Terminal hydroxyl group (-OH)
      - Carboxylic acid group (-COOH)

  - **Counter-Examples**:
    - **Low Fe/Hf**:
      - *Short-chain hydroxy acids with increased steric hindrance or hydrophilicity*

---

**End of Rules**---------------------------------------------------------------


    Current_Matrix:
    Matrix Generator Message:
Rule 1,Rule 2,Rule 3,Rule 4,Rule 5,Rule 6,Rule 7,Rule 8,Rule 9,Rule 10,Rule 11,Rule 12
0,0,0,0,0,-1,0,1,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,1
0,0,0,0,0,-1,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,1
0,0,0,0,0,0,0,0,0,0,0,1
0,0,0,0,0,-1,0,1,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,1
0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,-1,0,0,0,0,0,1
0,0,0,0,0,-1,0,0,0,0,1,0
0,0,0,0,0,0,0,0,0,0,0,1
0,1,0,0,0,-1,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,-1,0,0,0,0,0,0
0,0,0,0,0,-1,0,1,0,0,0,0
0,0,0,0,-1,0,0,0,0,0,0,1
0,0,0,0,0,-1,0,0,0,0,0,0
0,0,0,0,0,-1,0,0,0,0,0,0
0,1,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,-1,-1,0,0,0,0,0
0,0,0,0,0,-1,-1,0,0,0,0,0
0,0,0,0,0,-1,0,0,0,0,0,0
0,0,0,0,0,-1,0,0,0,0,0,0
0,0,0,0,0,-1,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,-1,0,0,0,0,0,1
0,0,0,0,0,-1,0,0,0,0,0,1
0,0,0,0,0,-1,0,1,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,1
0,0,0,0,-1,0,0,0,0,0,0,1
0,0,0,0,0,0,0,0,0,0,0,1
0,0,0,0,0,-1,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,1
0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,1
0,0,0,0,0,0,0,0,0,0,0,1

---------------------------------------------------------------


    Train Accuracy: 0.6285714285714286; Test Accuracy: 0.0
    Train Support: 0.05714285714285714; Test Support: 0.0
    Train Confidence: 1.0; Test Confidence: 0.5
    Train Lift: 2.020697167755991; Test Lift: NONE
    Train Leverage: 0.028843537414965984; Test Leverage: NONE
    ----------------------------------------------------------------------------------

    Current Rule Code:
def rule2matrix(smiles_list):
    # Import necessary RDKit modules
    from rdkit import Chem
    from rdkit.Chem import AllChem

    # Define SMARTS patterns for functional groups and structural features
    # Carboxylic acid group (-COOH)
    carboxylic_acid = '[CX3](=O)[OX2H1]'
    carboxylic_acid_mol = Chem.MolFromSmarts(carboxylic_acid)

    # Carboxylate anion
    carboxylate_anion = '[CX3](=O)[O-]'
    carboxylate_anion_mol = Chem.MolFromSmarts(carboxylate_anion)

    # Primary amine group (-NH2)
    primary_amine = '[NX3;H2]'
    primary_amine_mol = Chem.MolFromSmarts(primary_amine)

    # Thiol group (-SH)
    thiol = '[SX2H]'
    thiol_mol = Chem.MolFromSmarts(thiol)

    # Electron-withdrawing groups (EWGs)
    nitro_group = '[NX3+(=O)[O-]]'
    nitro_group_mol = Chem.MolFromSmarts(nitro_group)
    bromomethyl = '[CH2][Br]'
    bromomethyl_mol = Chem.MolFromSmarts(bromomethyl)
    pyridyl = 'n1ccccc1'
    pyridyl_mol = Chem.MolFromSmarts(pyridyl)

    # Electron-donating groups (EDGs)
    hydroxyl_group = '[OX2H]'
    hydroxyl_group_mol = Chem.MolFromSmarts(hydroxyl_group)
    methoxy_group = '[OX2][CH3]'
    methoxy_group_mol = Chem.MolFromSmarts(methoxy_group)
    amino_group = '[NX3;H2,H1][#6]'
    amino_group_mol = Chem.MolFromSmarts(amino_group)

    # Aromatic ring
    aromatic_ring = '[a]'
    aromatic_ring_mol = Chem.MolFromSmarts(aromatic_ring)

    # Aldehyde group (-CHO)
    aldehyde = '[CX3H1](=O)[#6]'
    aldehyde_mol = Chem.MolFromSmarts(aldehyde)

    # Polyether chain (-O-CH2-CH2-)n
    polyether_chain = '(-[OX2]-[CH2]-[CH2]){2,}'
    polyether_chain_mol = Chem.MolFromSmarts(polyether_chain)

    # Long aliphatic chain ending with hydroxyl group
    long_aliphatic_hydroxyl = '[C;R0][C;R0][C;R0][C;R0][OX2H]'
    long_aliphatic_hydroxyl_mol = Chem.MolFromSmarts(long_aliphatic_hydroxyl)

    # Define the rules
    rules = [
        {
            'number': 1,
            'description': 'Modifiers containing a primary amine group (-NH2) separated by at least four carbon atoms from a carboxylic acid group increase Fe/Hf.',
            'patterns': [],  # Patterns will be added below
            'prediction': 1
        },
        {
            'number': 2,
            'description': 'Modifiers containing thiol groups (-SH) in combination with carboxylic acid groups increase Fe/Hf.',
            'patterns': [thiol_mol, carboxylic_acid_mol],
            'prediction': 1
        },
        {
            'number': 3,
            'description': 'Modifiers containing an aromatic ring with a strong electron-withdrawing group at the para position relative to a carboxylic acid group increase Fe/Hf.',
            'patterns': [
                carboxylic_acid_mol,
                aromatic_ring_mol,
                [nitro_group_mol, bromomethyl_mol, pyridyl_mol]
            ],
            'prediction': 1
        },
        {
            'number': 4,
            'description': 'Modifiers containing multiple hydroxyl groups (-OH) on a short aliphatic chain decrease Fe/Hf.',
            'patterns': [carboxylic_acid_mol],
            'exclude_patterns': [hydroxyl_group_mol],
            'min_hydroxyls': 2,
            'prediction': -1
        },
        {
            'number': 5,
            'description': 'Modifiers with perfluorinated or highly fluorinated aliphatic chains decrease Fe/Hf.',
            'patterns': [
                carboxylic_acid_mol,
                Chem.MolFromSmarts('[C](F)(F)F')  # Trifluoromethyl group
            ],
            'prediction': -1
        },
        {
            'number': 6,
            'description': 'Modifiers containing aromatic rings with electron-donating groups at the para position relative to a carboxylic acid group decrease Fe/Hf.',
            'patterns': [
                carboxylic_acid_mol,
                aromatic_ring_mol,
                [hydroxyl_group_mol, methoxy_group_mol, amino_group_mol]
            ],
            'prediction': -1
        },
        {
            'number': 7,
            'description': 'Modifiers containing aldehyde groups (-CHO) adjacent to or conjugated with a carboxylic acid group on an aromatic ring decrease Fe/Hf.',
            'patterns': [
                carboxylic_acid_mol,
                aromatic_ring_mol,
                aldehyde_mol
            ],
            'prediction': -1
        },
        {
            'number': 8,
            'description': 'Modifiers that are amino acids with aromatic side chains increase Fe/Hf.',
            'patterns': [
                carboxylic_acid_mol,
                amino_group_mol,
                aromatic_ring_mol
            ],
            'prediction': 1
        },
        {
            'number': 9,
            'description': 'Modifiers containing polyether chains ending with a primary amine or carboxylic acid group increase Fe/Hf.',
            'patterns': [
                polyether_chain_mol,
                [primary_amine_mol, carboxylic_acid_mol]
            ],
            'prediction': 1
        },
        {
            'number': 10,
            'description': 'Simple aliphatic carboxylic acids without additional coordinating functional groups decrease Fe/Hf.',
            'patterns': [carboxylic_acid_mol],
            'exclude_patterns': [
                primary_amine_mol,
                thiol_mol,
                hydroxyl_group_mol,
                aromatic_ring_mol
            ],
            'prediction': -1
        },
        {
            'number': 11,
            'description': 'Modifiers containing fused aromatic systems with carbonyl groups and a carboxylic acid increase Fe/Hf.',
            'patterns': [
                carboxylic_acid_mol,
                Chem.MolFromSmarts('[a][a][a](=O)')  # Fused aromatic with carbonyl
            ],
            'prediction': 1
        },
        {
            'number': 12,
            'description': 'Modifiers with long aliphatic chains terminating in a hydroxyl group (-OH) increase Fe/Hf when the chain length allows sufficient flexibility and reduced steric hindrance.',
            'patterns': [
                carboxylic_acid_mol,
                long_aliphatic_hydroxyl_mol
            ],
            'prediction': 1
        }
    ]

    # Add chain length patterns for Rule 1
    rule1_patterns = []
    for n in range(4, 20):  # Chain lengths from 4 to 19 carbon atoms
        chain = ''.join(['[CH2]'] * n)
        pattern = f'[NX3;H2]{chain}[CX3](=O)[OX2H1]'
        rule1_patterns.append(Chem.MolFromSmarts(pattern))
    rules[0]['patterns'] = rule1_patterns

    # Initialize results list
    results = []

    # Process each SMILES string
    for smi in smiles_list:
        mol = Chem.MolFromSmiles(smi)
        if mol is None:
            # If the molecule cannot be parsed, append a row of zeros
            results.append([0] * len(rules))
            continue
        row = []
        for rule in rules:
            try:
                match = True
                # Check exclude patterns if any
                if 'exclude_patterns' in rule:
                    for excl_pat in rule['exclude_patterns']:
                        if mol.HasSubstructMatch(excl_pat):
                            match = False
                            break
                    if not match:
                        row.append(0)
                        continue
                # Special handling for Rule 4 (minimum hydroxyl groups)
                if rule.get('min_hydroxyls'):
                    hydroxyl_matches = mol.GetSubstructMatches(hydroxyl_group_mol)
                    if len(hydroxyl_matches) < rule['min_hydroxyls']:
                        match = False
                # Check required patterns
                if match:
                    for pat in rule['patterns']:
                        if isinstance(pat, list):  # OR logic
                            group_match = False
                            for subpat in pat:
                                if mol.HasSubstructMatch(subpat):
                                    group_match = True
                                    break
                            if not group_match:
                                match = False
                                break
                        else:  # AND logic
                            if not mol.HasSubstructMatch(pat):
                                match = False
                                break
                if match:
                    row.append(rule['prediction'])
                else:
                    row.append(0)
            except Exception:
                # In case of any error, append 0
                row.append(0)
        results.append(row)
    # Create DataFrame with results
    df = pd.DataFrame(results, columns=[f'Rule {rule['number']}' for rule in rules])
    return df

--------------------------------------------------
    Target Name: Fe/Hf
    GPT Model: o1-preview-2024-09-12
    ML Model: ETC
    Current_Rules:
    **Start of Rules**

---

- **Rule 1**: *Modifiers containing a primary amine group (-NH₂) attached to an aliphatic chain of at least four carbon atoms, separated from a carboxylic acid group, increase Fe/Hf* (Fe/Hf_high_or_low_value == True).

  - **Explanation**: A longer aliphatic chain between the amine and carboxylic acid allows for effective chelation of Fe ions. The spatial separation reduces steric hindrance and enhances coordination flexibility, leading to increased Fe loading onto the catalyst.

  - **Examples**:
    - **High Fe/Hf**:
      - *5-aminopentanoic acid*
      - *7-aminoheptanoic acid*
      - *8-aminooctanoic acid*
    - **Structural Features**:
      - Primary amine (-NH₂) group
      - Aliphatic chain of at least four carbon atoms between the amine and carboxylic acid
      - Carboxylic acid group (-COOH)

  - **Counter-Examples**:
    - **Low Fe/Hf**:
      - *(2S)-2-aminopentanedioic acid* (glutamic acid; amine too close to carboxylic acids)
      - *4-aminobenzoic acid* (amine directly attached to aromatic ring)

---

- **Rule 2**: *Modifiers containing an aromatic ring with a strong electron-withdrawing group (e.g., nitro (-NO₂), bromomethyl (-CH₂Br), pyridyl) at the para position relative to a carboxylic acid group increase Fe/Hf.*

  - **Explanation**: Electron-withdrawing groups enhance the acidity of the carboxylic acid by stabilizing the carboxylate anion. This increases the ligand's ability to coordinate with Fe ions, strengthening metal-ligand interactions and promoting higher Fe loading.

  - **Examples**:
    - **High Fe/Hf**:
      - *4-nitrobenzoic acid*
      - *4-(bromomethyl)benzoic acid*
      - *4-pyridin-4-ylbenzoic acid*
      - *4-pyridin-4-ylbutanoic acid*
    - **Structural Features**:
      - Aromatic ring
      - Electron-withdrawing group at the para position
      - Carboxylic acid group (-COOH)

  - **Counter-Examples**:
    - **Low Fe/Hf**:
      - *4-methylbenzoic acid* (electron-donating methyl group)
      - *4-aminobenzoic acid* (electron-donating amino group)
      - *4-hydroxybenzoic acid* (electron-donating hydroxyl group)

---

- **Rule 3**: *Modifiers containing thiol groups (-SH) or thioether groups (-S-) in combination with carboxylic acid groups increase Fe/Hf.*

  - **Explanation**: Sulfur-containing groups form strong coordinate bonds with Fe ions due to the high affinity of sulfur atoms. The presence of both thiol/thioether and carboxylate groups enables bidentate chelation, enhancing metal binding and increasing Fe loading.

  - **Examples**:
    - **High Fe/Hf**:
      - *3-sulfanylpropanoic acid*
      - *4-sulfanylbenzoic acid*
      - *2-[[(2S)-2-amino-4-methylsulfanylbutanoyl]amino]acetic acid*
    - **Structural Features**:
      - Thiol group (-SH) or thioether group (-S-)
      - Carboxylic acid group (-COOH)
      - Aliphatic or aromatic structure

  - **Counter-Examples**:
    - **Low Fe/Hf**:
      - *Modifiers lacking sulfur-containing groups*
      - *Octanoic acid* (no sulfur group)

---

- **Rule 4**: *Modifiers that are α-amino acids with aromatic side chains increase Fe/Hf.*

  - **Explanation**: The combination of an amino group, carboxylate group, and aromatic side chain provides multiple coordination sites and potential for π-π interactions. This enhances the ligand's ability to chelate Fe ions effectively.

  - **Examples**:
    - **High Fe/Hf**:
      - *(2S)-2-amino-3-phenylpropanoic acid* (phenylalanine)
      - *(2S)-6-acetamido-2-aminohexanoic acid* (derivative of lysine)
    - **Structural Features**:
      - α-Amino acid structure
      - Aromatic side chain or additional amide group
      - Carboxylic acid group (-COOH)

  - **Counter-Examples**:
    - **Low Fe/Hf**:
      - *(2S)-2-aminopentanedioic acid* (glutamic acid; aliphatic side chain with extra carboxylate)

---

- **Rule 5**: *Modifiers containing multiple hydroxyl groups (-OH) on a short aliphatic chain decrease Fe/Hf* (Fe/Hf_high_or_low_value == False).

  - **Explanation**: Multiple hydroxyl groups can increase hydrophilicity and steric hindrance, reducing the ability of coordinating groups to interact effectively with Fe ions. Additionally, extensive hydrogen bonding may compete with metal coordination sites.

  - **Examples**:
    - **Low Fe/Hf**:
      - *(2R,3S,4R,5R)-2,3,4,5,6-pentahydroxyhexanoic acid* (gluconic acid)
      - *2-[[1,3-dihydroxy-2-(hydroxymethyl)propan-2-yl]oxy]acetic acid*
    - **Structural Features**:
      - Short aliphatic chain
      - Multiple hydroxyl groups (-OH)
      - Carboxylic acid group (-COOH)

  - **Counter-Examples**:
    - **High Fe/Hf**:
      - *7-hydroxyheptanoic acid* (single hydroxyl group; longer chain reduces steric hindrance)

---

- **Rule 6**: *Modifiers containing perfluorinated or highly fluorinated aliphatic chains decrease Fe/Hf.*

  - **Explanation**: Fluorine atoms are highly electronegative and withdraw electron density from neighboring atoms, diminishing the coordinating ability of groups like carboxylates. The strong C-F bonds reduce the overall polarity and coordination potential of the molecule.

  - **Examples**:
    - **Low Fe/Hf**:
      - *2,2,3,3,4,4,5,5,5-nonafluoropentanoic acid*
      - *4-[(2,2,2-trifluoroacetyl)amino]butanoic acid*
    - **Structural Features**:
      - Aliphatic chain with multiple fluorine atoms (-CF₃, -CF₂-)
      - Carboxylic acid group (-COOH) or trifluoroacetyl group

  - **Counter-Examples**:
    - **High Fe/Hf**:
      - *Non-fluorinated analogs with coordinating groups*

---

- **Rule 7**: *Modifiers containing aromatic rings with electron-donating groups (e.g., hydroxyl (-OH), amino (-NH₂), methoxy (-OCH₃)) at the para position relative to a carboxylic acid group decrease Fe/Hf.*

  - **Explanation**: Electron-donating groups reduce the acidity of the carboxylic acid by destabilizing the carboxylate anion. This weakens its ability to coordinate with Fe ions, resulting in lower Fe loading onto the catalyst.

  - **Examples**:
    - **Low Fe/Hf**:
      - *4-hydroxybenzoic acid*
      - *4-aminobenzoic acid*
      - *4-methylbenzoic acid*
      - *5-(4-hydroxyphenyl)pentanoic acid*
      - *3-(4-hydroxyphenyl)propanoic acid*
    - **Structural Features**:
      - Aromatic ring
      - Electron-donating group at the para position
      - Carboxylic acid group (-COOH) or aliphatic acid chain attached to aromatic ring

  - **Counter-Examples**:
    - **High Fe/Hf**:
      - *4-nitrobenzoic acid* (electron-withdrawing group)
      - *4-pyridin-4-ylbenzoic acid* (electron-withdrawing pyridyl group)

---

- **Rule 8**: *Simple aliphatic carboxylic acids without additional coordinating functional groups decrease Fe/Hf.*

  - **Explanation**: These modifiers have limited ability to chelate Fe ions due to the absence of additional donor atoms or functional groups. The single carboxylate group provides minimal interaction, resulting in lower Fe loading.

  - **Examples**:
    - **Low Fe/Hf**:
      - *Octanoic acid*
      - *4-oxoheptanedioic acid*
    - **Structural Features**:
      - Straight-chain aliphatic acids
      - Only carboxylic acid groups (-COOH)
      - Lack of additional coordinating groups (e.g., amine, hydroxyl, thiol)

  - **Counter-Examples**:
    - **High Fe/Hf**:
      - *Modifiers with additional functional groups capable of coordinating Fe ions* (e.g., amines, hydroxyls)

---

- **Rule 9**: *Modifiers containing polyether chains ending with a primary amine or carboxylic acid group increase Fe/Hf.*

  - **Explanation**: Polyether chains impart flexibility and solubility, allowing terminal coordinating groups to interact effectively with Fe ions. Ether oxygens may also contribute to metal coordination through lone pair donation.

  - **Examples**:
    - **High Fe/Hf**:
      - *2-[2-(2-methoxyethoxy)ethoxy]acetic acid*
      - *3-[2-(2-aminoethoxy)ethoxy]propanoic acid*
    - **Structural Features**:
      - Polyether chain (-O-CH₂-CH₂-)ₙ
      - Terminal primary amine (-NH₂) or carboxylic acid group (-COOH)

  - **Counter-Examples**:
    - **Low Fe/Hf**:
      - *Modifiers lacking polyether chains or with non-coordinating terminal groups*

---

- **Rule 10**: *Modifiers containing fused aromatic systems with carbonyl groups and a carboxylic acid increase Fe/Hf.*

  - **Explanation**: Fused aromatic systems with carbonyl functionalities provide multiple coordination sites and rigid structures that facilitate strong interactions with Fe ions. The presence of both carbonyl and carboxylate groups enhances chelation.

  - **Examples**:
    - **High Fe/Hf**:
      - *1,3-dioxo-2-benzofuran-5-carboxylic acid*
    - **Structural Features**:
      - Fused aromatic rings (e.g., benzofuran)
      - Carbonyl groups (=O)
      - Carboxylic acid group (-COOH)

  - **Counter-Examples**:
    - **Low Fe/Hf**:
      - *1H-pyrazole-4-carboxylic acid* (smaller ring system; fewer coordination sites)

---

- **Rule 11**: *Modifiers containing aldehyde groups (-CHO) adjacent to or conjugated with a carboxylic acid group on an aromatic ring decrease Fe/Hf.*

  - **Explanation**: Aldehyde groups can form internal hydrogen bonds or engage in side reactions that interfere with metal coordination. Their presence may also cause steric hindrance or electronic effects that reduce the ligand's affinity for Fe ions.

  - **Examples**:
    - **Low Fe/Hf**:
      - *4-formylbenzoic acid*
      - *5-formyl-2-hydroxybenzoic acid*
    - **Structural Features**:
      - Aromatic ring
      - Aldehyde group (-CHO) near the carboxylic acid (-COOH)
      - Possible additional hydroxyl groups (-OH)

  - **Counter-Examples**:
    - **High Fe/Hf**:
      - *4-nitrobenzoic acid* (substituted with electron-withdrawing group instead of aldehyde)

---

- **Rule 12**: *Modifiers that are heterocyclic carboxylic acids without additional coordinating functional groups decrease Fe/Hf.*

  - **Explanation**: Heterocycles without additional donor atoms provide limited coordination sites, resulting in weaker interactions with Fe ions and lower Fe loading.

  - **Examples**:
    - **Low Fe/Hf**:
      - *1H-pyrazole-4-carboxylic acid*
      - *pyridine-3-carboxylic acid*
    - **Structural Features**:
      - Heterocyclic ring (e.g., pyrazole, pyridine)
      - Carboxylic acid group (-COOH)
      - Lack of additional coordinating groups

  - **Counter-Examples**:
    - **High Fe/Hf**:
      - *4-pyridin-4-ylbenzoic acid* (contains both aromatic rings and additional coordinating sites)

---

- **Rule 13**: *Modifiers containing long aliphatic chains terminating in a hydroxyl group (-OH) increase Fe/Hf when the chain length allows sufficient flexibility and reduced steric hindrance.*

  - **Explanation**: A long aliphatic chain with a terminal hydroxyl group can coordinate with Fe ions while minimizing steric interference. The increased chain length provides flexibility for optimal interaction with the catalyst surface.

  - **Examples**:
    - **High Fe/Hf**:
      - *7-hydroxyheptanoic acid*
    - **Structural Features**:
      - Aliphatic chain of seven or more carbon atoms
      - Terminal hydroxyl group (-OH)
      - Carboxylic acid group (-COOH)

  - **Counter-Examples**:
    - **Low Fe/Hf**:
      - *Short-chain hydroxy acids with increased steric hindrance or hydrophilicity*

---

- **Rule 14**: *Modifiers with multiple electron-donating groups increase Fe/Hf if they can coordinate in a chelating fashion to Fe ions.*

  - **Explanation**: Multiple coordinating sites arranged favorably can enhance the chelation of Fe ions, overcoming the typical electron-donating effects that reduce acidity.

  - **Examples**:
    - **High Fe/Hf**:
      - *4-(3,4-dimethoxyphenyl)-4-oxobutanoic acid*
      - *(2S)-6-acetamido-2-aminohexanoic acid*
    - **Structural Features**:
      - Multiple coordinating groups (e.g., methoxy, amino, amide)
      - Potential for chelation due to spatial arrangement

  - **Counter-Examples**:
    - **Low Fe/Hf**:
      - *Modifiers with electron-donating groups that cannot chelate effectively*

---

- **Rule 15**: *Modifiers that are hydroxyaromatic acids decrease Fe/Hf unless additional coordinating groups are present for effective chelation.*

  - **Explanation**: Hydroxyl groups on aromatic acids act as electron-donating groups, reducing carboxylate coordination with Fe ions. However, if additional coordinating groups enable chelation, the overall effect may increase Fe loading.

  - **Examples**:
    - **Low Fe/Hf**:
      - *4-hydroxybenzoic acid*
      - *2-[(4-hydroxybenzoyl)amino]acetic acid*
    - **High Fe/Hf**:
      - *1,3-dioxo-2-benzofuran-5-carboxylic acid* (additional carbonyl groups facilitate coordination)
    - **Structural Features**:
      - Aromatic ring with hydroxyl group (-OH)
      - Carboxylic acid group (-COOH)
      - Presence or absence of additional coordinating groups

---

**End of Rules**

---

These rules collectively describe the relationship between structural features of molecular modifiers and their influence on the Fe/Hf ratio in the catalyst. By considering the presence of specific functional groups and their arrangement within the molecule, one can predict whether a modifier will increase or decrease Fe loading, thereby affecting the yield of the target reaction.---------------------------------------------------------------


    Current_Matrix:
    Matrix Generator Message:
Rule 1,Rule 2,Rule 3,Rule 4,Rule 5,Rule 6,Rule 7
0,0,0,0,0,0,0
0,0,0,0,0,0,0
0,0,0,0,0,0,0
0,0,0,0,0,0,0
0,0,0,0,0,0,0
0,0,0,0,0,0,0
0,0,0,0,0,0,0
0,0,0,0,0,0,0
0,0,0,0,0,0,0
0,0,0,0,0,0,0
0,0,0,0,0,0,0
0,0,1,0,0,0,0
0,0,0,0,0,0,0
0,0,0,0,0,0,0
0,0,0,0,0,0,0
0,0,0,0,0,-1,0
0,0,0,0,0,0,0
0,0,0,0,0,0,0
0,0,1,0,0,0,0
0,0,0,0,0,0,0
0,0,0,0,0,0,0
0,0,0,0,0,0,0
0,0,0,0,0,0,0
0,0,0,0,0,0,0
0,0,1,0,0,0,0
0,0,0,0,0,0,0
0,0,0,0,0,0,0
0,0,0,0,0,0,0
0,0,0,0,0,0,0
0,0,0,0,0,-1,0
0,0,0,0,0,0,0
0,0,0,0,0,0,0
0,0,0,0,0,0,0
0,0,0,0,0,0,0
0,0,0,0,0,0,0
0,0,0,0,0,0,0

---------------------------------------------------------------


    Train Accuracy: 0.5714285714285714; Test Accuracy: 1.0
    Train Support: 0.08571428571428572; Test Support: 0.0
    Train Confidence: 1.0; Test Confidence: 0.5
    Train Lift: 1.9444444444444446; Test Lift: NONE
    Train Leverage: 0.041632653061224496; Test Leverage: NONE
    ----------------------------------------------------------------------------------

    Current Rule Code:
def rule2matrix(smiles_list):
    # Define SMARTS patterns for various functional groups, refined as per the suggestions
    
    # Carboxylic acid group (-COOH) and carboxylate anion (-COO-)
    carboxylic_acid_smarts = '[CX3](=O)[OX1H0-,OX2H1]'
    carboxylic_acid_pattern = Chem.MolFromSmarts(carboxylic_acid_smarts)
    
    # Primary aliphatic amine group (-NH2), updated as per Suggestion 1
    primary_aliphatic_amine_smarts = '[NX3;H2][C;X4]'
    primary_aliphatic_amine_pattern = Chem.MolFromSmarts(primary_aliphatic_amine_smarts)
    
    # Thiol group (-SH)
    thiol_group_smarts = '[SX2H]'
    thiol_group_pattern = Chem.MolFromSmarts(thiol_group_smarts)
    # Thioether group (-S-)
    thioether_group_smarts = '[#6][SX2][#6]'
    thioether_group_pattern = Chem.MolFromSmarts(thioether_group_smarts)
    
    # Electron-withdrawing groups (EWGs) patterns for Rule 2, expanded as per Suggestion 2
    ewg_patterns = [
        Chem.MolFromSmarts('[NX3](=O)=O'),  # Nitro group
        Chem.MolFromSmarts('[CX4][Br]'),    # Bromomethyl group
        Chem.MolFromSmarts('n1ccccc1'),     # Pyridyl group
    ]
    
    # Electron-donating groups (EDGs) patterns for Rule 7
    edg_patterns = [
        Chem.MolFromSmarts('[OX2H]'),       # Hydroxyl group
        Chem.MolFromSmarts('[OX2][CH3]'),   # Methoxy group
        Chem.MolFromSmarts('[NX3;H2,H1][#6]'),  # Amino group
    ]
    
    # Patterns for multiple hydroxyl groups (Rule 5)
    hydroxyl_group_smarts = '[OX2H]'
    hydroxyl_group_pattern = Chem.MolFromSmarts(hydroxyl_group_smarts)
    
    # Perfluorinated chains (Rule 6)
    perfluorinated_chain_smarts = 'C(F)(F)(F)'
    perfluorinated_chain_pattern = Chem.MolFromSmarts(perfluorinated_chain_smarts)
    
    # Alpha-amino acid with aromatic side chain (Rule 4)
    alpha_amino_acid_aromatic_smarts = '[NX3;H2][CHX4][CH2][c]'
    alpha_amino_acid_aromatic_pattern = Chem.MolFromSmarts(alpha_amino_acid_aromatic_smarts)
    
    # Define the rules with their associated patterns and predictions
    rules = [
        {
            'number': 1,
            'description': 'Rule 1: Modifiers containing a primary amine group (-NH2) attached to an aliphatic chain of at least four carbon atoms, separated from a carboxylic acid group. Increases Fe/Hf.',
            'prediction': 1,
            'function': rule1_function
        },
        {
            'number': 2,
            'description': 'Rule 2: Modifiers containing an aromatic ring with a strong EWG at the para position relative to a carboxylic acid group. Increases Fe/Hf.',
            'prediction': 1,
            'function': rule2_function
        },
        {
            'number': 3,
            'description': 'Rule 3: Modifiers containing thiol groups (-SH) or thioether groups (-S-) in combination with carboxylic acid groups. Increases Fe/Hf.',
            'prediction': 1,
            'patterns': [[thiol_group_pattern, thioether_group_pattern], [carboxylic_acid_pattern]],
        },
        {
            'number': 4,
            'description': 'Rule 4: Modifiers that are α-amino acids with aromatic side chains. Increases Fe/Hf.',
            'prediction': 1,
            'function': rule4_function
        },
        {
            'number': 5,
            'description': 'Rule 5: Modifiers containing multiple hydroxyl groups (-OH) on a short aliphatic chain. Decreases Fe/Hf.',
            'prediction': -1,
            'function': rule5_function
        },
        {
            'number': 6,
            'description': 'Rule 6: Modifiers containing perfluorinated or highly fluorinated aliphatic chains. Decreases Fe/Hf.',
            'prediction': -1,
            'patterns': [[perfluorinated_chain_pattern]],
        },
        {
            'number': 7,
            'description': 'Rule 7: Modifiers containing aromatic rings with electron-donating groups at the para position relative to a carboxylic acid group. Decreases Fe/Hf.',
            'prediction': -1,
            'function': rule7_function
        },
        # Additional rules can be added similarly
    ]
    
    # Initialize results list
    results = []
    
    # Process each SMILES string
    for smi in smiles_list:
        mol = Chem.MolFromSmiles(smi)
        if mol is None:
            # If the molecule cannot be parsed, append a row of zeros
            results.append([0]*len(rules))
            continue
        row = []
        for rule in rules:
            try:
                if 'function' in rule:
                    # Use custom function for this rule
                    value = rule['function'](mol)
                    row.append(value * rule['prediction'])  # Multiply by prediction to get correct sign
                else:
                    match = True
                    # Check required patterns
                    for pattern_group in rule['patterns']:
                        group_match = False
                        for pat in pattern_group:
                            if mol.HasSubstructMatch(pat):
                                group_match = True
                                break
                        if not group_match:
                            match = False
                            break
                    if match:
                        row.append(rule['prediction'])
                    else:
                        row.append(0)
            except Exception as e:
                # In case of any error, append 0
                row.append(0)
        results.append(row)
    # Create DataFrame with results
    df = pd.DataFrame(results, columns=[f'Rule {rule["number"]}' for rule in rules])
    return df

# Custom function for Rule 1

def rule1_function(mol):
    try:
        # Find primary amine groups attached to sp3 carbons
        pattern_primary_amine = Chem.MolFromSmarts('[NX3;H2][C;X4]')
        amine_matches = mol.GetSubstructMatches(pattern_primary_amine)
        # Find carboxylic acid groups
        pattern_carboxylic_acid = Chem.MolFromSmarts('[CX3](=O)[O;H1,-]')
        acid_matches = mol.GetSubstructMatches(pattern_carboxylic_acid)
        if not amine_matches or not acid_matches:
            return 0
        for amine in amine_matches:
            for acid in acid_matches:
                n_idx = amine[0]
                c_idx = acid[0]
                # Find all paths between amine N and carboxylic acid C
                paths = Chem.rdmolops.GetAllShortestPaths(mol, n_idx, c_idx)
                for path in paths:
                    # Exclude start and end atoms
                    internal_atoms = path[1:-1]
                    # Count number of carbons in internal_atoms
                    num_carbons = sum(1 for idx in internal_atoms if mol.GetAtomWithIdx(idx).GetAtomicNum() == 6)
                    # Check that all internal atoms are carbons
                    if num_carbons >= 4:
                        return 1
        return 0
    except:
        return 0

# Custom function for Rule 2

def rule2_function(mol):
    try:
        # Find aromatic rings with carboxylic acid
        pattern_aromatic_acid = Chem.MolFromSmarts('c1ccc([CX3](=O)[OX1H0-,OX2H1])cc1')
        matches = mol.GetSubstructMatches(pattern_aromatic_acid)
        if not matches:
            return 0
        # For each match, check for EWG at para position
        for match in matches:
            ring_atoms = match[:6]
            substituent_atom = match[6]  # Carboxylic acid atom
            # Identify para carbon (opposite to substituent)
            para_c_idx = ring_atoms[3]  # Position opposite to atom at position 0
            para_c = mol.GetAtomWithIdx(para_c_idx)
            # Check if para carbon has EWG attached
            for neighbor in para_c.GetNeighbors():
                if neighbor.GetIdx() in ring_atoms:
                    continue
                for ewg_pattern in ewg_patterns:
                    if neighbor.HasSubstructMatch(ewg_pattern):
                        return 1
        return 0
    except:
        return 0

# Custom function for Rule 4

def rule4_function(mol):
    try:
        # Check for alpha amino acid with aromatic side chain
        if mol.HasSubstructMatch(alpha_amino_acid_aromatic_pattern):
            return 1
        else:
            return 0
    except:
        return 0

# Custom function for Rule 5

def rule5_function(mol):
    try:
        # Find hydroxyl groups
        hydroxyl_matches = mol.GetSubstructMatches(hydroxyl_group_pattern)
        # Count hydroxyl groups on aliphatic carbons
        count = 0
        for match in hydroxyl_matches:
            o_idx = match[0]
            o_atom = mol.GetAtomWithIdx(o_idx)
            neighbors = o_atom.GetNeighbors()
            for neighbor in neighbors:
                if neighbor.GetAtomicNum() == 6 and neighbor.GetIsAromatic() == False:
                    count += 1
                    break
        if count >= 2:
            return 1  # Rule predicts decrease, but function returns 1, multiply by prediction (-1)
        else:
            return 0
    except:
        return 0

# Custom function for Rule 7

def rule7_function(mol):
    try:
        # Find aromatic rings with carboxylic acid
        pattern_aromatic_acid = Chem.MolFromSmarts('c1ccc([CX3](=O)[OX1H0-,OX2H1])cc1')
        matches = mol.GetSubstructMatches(pattern_aromatic_acid)
        if not matches:
            return 0
        # For each match, check for EDG at para position
        for match in matches:
            ring_atoms = match[:6]
            substituent_atom = match[6]  # Carboxylic acid atom
            # Identify para carbon (opposite to substituent)
            para_c_idx = ring_atoms[3]  # Position opposite to atom at position 0
            para_c = mol.GetAtomWithIdx(para_c_idx)
            # Check if para carbon has EDG attached
            for neighbor in para_c.GetNeighbors():
                if neighbor.GetIdx() in ring_atoms:
                    continue
                for edg_pattern in edg_patterns:
                    if neighbor.HasSubstructMatch(edg_pattern):
                        return 1
        return 0
    except:
        return 0

--------------------------------------------------
    Target Name: Fe/Hf
    GPT Model: o1-preview-2024-09-12
    ML Model: ETC
    Current_Rules:
    **Start of Rules**

---

- **Rule 1**: *Modifiers that are aliphatic carboxylic acids with a terminal primary amino group (-NH₂) increase Fe/Hf* (Fe/Hf_high_or_low_value == True).

  - **Explanation**: The primary amino group at the end of an aliphatic chain can coordinate with Fe ions through its lone pair of electrons. The flexibility of the aliphatic chain allows the amino and carboxylate groups to effectively chelate the Fe ion, enhancing metal binding and increasing the Fe/Hf ratio.

  - **Examples**:
    - **High Fe/Hf**:
      - *5-aminopentanoic acid*
      - *7-aminoheptanoic acid*
      - *8-aminooctanoic acid*
  - **Counter-Examples**:
    - **Low Fe/Hf**:
      - *Octanoic acid* (lacks an amino group)
      - *(2S)-2-aminopentanedioic acid* (amino group is α to carboxylate and additional carboxyl groups may hinder coordination)

---

- **Rule 2**: *Modifiers containing an aromatic carboxylic acid with an electron-withdrawing group (e.g., nitro (-NO₂), bromomethyl (-CH₂Br), pyridyl) at the para position increase Fe/Hf.*

  - **Explanation**: Electron-withdrawing groups enhance the acidity of the carboxylic acid, facilitating deprotonation and forming a stronger carboxylate ligand. The electron-deficient aromatic ring can also interact more effectively with Fe ions, improving coordination and increasing Fe incorporation.

  - **Examples**:
    - **High Fe/Hf**:
      - *4-nitrobenzoic acid*
      - *4-(bromomethyl)benzoic acid*
      - *4-pyridin-4-ylbenzoic acid*
  - **Counter-Examples**:
    - **Low Fe/Hf**:
      - *4-methylbenzoic acid* (methyl group is electron-donating)
      - *4-aminobenzoic acid* (amino group is electron-donating)

---

- **Rule 3**: *Modifiers containing sulfur-containing functional groups such as thiols (-SH) or thioethers (-S-) increase Fe/Hf.*

  - **Explanation**: Sulfur atoms have lone pairs of electrons and larger atomic orbitals that can form strong coordinate bonds with Fe ions. The presence of sulfur enhances metal binding affinity, leading to higher Fe incorporation into the catalyst.

  - **Examples**:
    - **High Fe/Hf**:
      - *4-sulfanylbenzoic acid*
      - *3-sulfanylpropanoic acid*
      - *2-[[(2S)-2-amino-4-methylsulfanylbutanoyl]amino]acetic acid*
  - **Counter-Examples**:
    - **Low Fe/Hf**:
      - *Octanoic acid* (lacks sulfur-containing groups)
      - *Modifiers without sulfur atoms*

---

- **Rule 4**: *Modifiers that are amino acids with aromatic side chains (e.g., phenylalanine) increase Fe/Hf.*

  - **Explanation**: The combination of an amino group (-NH₂), a carboxylate group (-COO⁻), and an aromatic side chain provides multiple coordination sites. The aromatic ring can participate in π-stacking interactions with the Fe ion, while the amino and carboxylate groups can chelate the metal, enhancing Fe binding.

  - **Examples**:
    - **High Fe/Hf**:
      - *(2S)-2-amino-3-phenylpropanoic acid* (phenylalanine)
  - **Counter-Examples**:
    - **Low Fe/Hf**:
      - *(2S)-2-aminopentanedioic acid* (glutamic acid; lacks aromatic side chain)
      - *Aliphatic amino acids without aromatic side chains*

---

- **Rule 5**: *Modifiers containing multiple hydroxyl groups (-OH) on a short aliphatic or cyclic chain decrease Fe/Hf* (Fe/Hf_high_or_low_value == False).

  - **Explanation**: Multiple hydroxyl groups can engage in extensive hydrogen bonding and increase steric hindrance, which may interfere with Fe coordination. High hydrophilicity can reduce the modifier's affinity for Fe ions, leading to lower Fe incorporation.

  - **Examples**:
    - **Low Fe/Hf**:
      - *(2R,3S,4R,5R)-2,3,4,5,6-pentahydroxyhexanoic acid* (gluconic acid)
      - *2-[[1,3-dihydroxy-2-(hydroxymethyl)propan-2-yl]oxy]acetic acid*
  - **Counter-Examples**:
    - **High Fe/Hf**:
      - *7-hydroxyheptanoic acid* (single hydroxyl group on a longer chain minimizes interference)

---

- **Rule 6**: *Modifiers containing electron-donating groups (e.g., amino (-NH₂), hydroxyl (-OH), methyl (-CH₃)) directly attached to an aromatic ring decrease Fe/Hf.*

  - **Explanation**: Electron-donating groups increase the electron density of the aromatic ring, reducing the acidity of the carboxylic acid and weakening its ability to coordinate with Fe ions. This leads to weaker metal-ligand interactions and lower Fe loading.

  - **Examples**:
    - **Low Fe/Hf**:
      - *4-aminobenzoic acid*
      - *4-hydroxybenzoic acid*
      - *4-methylbenzoic acid*
  - **Counter-Examples**:
    - **High Fe/Hf**:
      - *4-nitrobenzoic acid* (electron-withdrawing group enhances coordination)
      - *4-pyridin-4-ylbenzoic acid* (pyridyl group withdraws electron density)

---

- **Rule 7**: *Modifiers with perfluorinated aliphatic chains decrease Fe/Hf.*

  - **Explanation**: Fluorine's high electronegativity reduces the electron density available for coordination. Perfluorinated chains are also highly hydrophobic, which may hinder effective interactions with Fe ions, resulting in lower Fe incorporation.

  - **Examples**:
    - **Low Fe/Hf**:
      - *2,2,3,3,4,4,5,5,5-nonafluoropentanoic acid*
      - *4-[(2,2,2-trifluoroacetyl)amino]butanoic acid*
  - **Counter-Examples**:
    - **High Fe/Hf**:
      - *Non-fluorinated analogs with coordinating groups*

---

- **Rule 8**: *Simple aliphatic carboxylic acids without additional coordinating functional groups decrease Fe/Hf.*

  - **Explanation**: Without additional donor atoms or functional groups (e.g., amino, hydroxyl, thiol), these modifiers have limited ability to form strong coordination bonds with Fe ions, leading to minimal Fe incorporation.

  - **Examples**:
    - **Low Fe/Hf**:
      - *Octanoic acid*
      - *4-oxoheptanedioic acid*
  - **Counter-Examples**:
    - **High Fe/Hf**:
      - *Modifiers with additional coordinating groups like amines or thiols*

---

- **Rule 9**: *Modifiers containing an aldehyde group (-CHO) on an aromatic ring decrease Fe/Hf.*

  - **Explanation**: Aldehyde groups can engage in side reactions or form internal hydrogen bonds, which may interfere with metal coordination. The presence of the aldehyde can create steric hindrance or electronic effects that reduce the ligand's ability to coordinate with Fe ions.

  - **Examples**:
    - **Low Fe/Hf**:
      - *4-formylbenzoic acid*
      - *5-formyl-2-hydroxybenzoic acid*
  - **Counter-Examples**:
    - **High Fe/Hf**:
      - *Aromatic carboxylic acids without aldehyde groups or with electron-withdrawing groups*

---

- **Rule 10**: *Modifiers that are heterocyclic carboxylic acids without additional coordinating groups decrease Fe/Hf.*

  - **Explanation**: Heterocyclic rings may not position their heteroatoms optimally for Fe coordination. Without extra donor atoms or functional groups, these modifiers form weaker interactions with Fe ions, resulting in lower Fe loading.

  - **Examples**:
    - **Low Fe/Hf**:
      - *1H-pyrazole-4-carboxylic acid*
      - *pyridine-3-carboxylic acid* (nicotinic acid)
  - **Counter-Examples**:
    - **High Fe/Hf**:
      - *4-pyridin-4-ylbenzoic acid* (additional aromatic ring and positioning of nitrogen enhance Fe binding)

---

- **Rule 11**: *Modifiers containing polyether chains ending with a coordinating functional group (e.g., amino (-NH₂), carboxyl (-COOH)) increase Fe/Hf.*

  - **Explanation**: Polyether chains provide flexibility and solubility, allowing terminal coordinating groups to effectively interact with Fe ions. Ether oxygen atoms can also contribute to coordination through lone pair donation, enhancing metal-ligand interactions.

  - **Examples**:
    - **High Fe/Hf**:
      - *2-[2-(2-methoxyethoxy)ethoxy]acetic acid*
      - *3-[2-(2-aminoethoxy)ethoxy]propanoic acid*
  - **Counter-Examples**:
    - **Low Fe/Hf**:
      - *Modifiers lacking polyether chains or terminal coordinating groups*
      - *Polyols with multiple hydroxyl groups causing steric hindrance*

---

- **Rule 12**: *Modifiers containing keto groups (C=O) adjacent to carboxylic acid groups on aromatic rings increase Fe/Hf.*

  - **Explanation**: Keto groups adjacent to carboxylic acids can participate in enolization, offering additional coordination sites. The planar structure and conjugation facilitate strong interactions with Fe ions, enhancing metal binding.

  - **Examples**:
    - **High Fe/Hf**:
      - *1,3-dioxo-2-benzofuran-5-carboxylic acid*
  - **Counter-Examples**:
    - **Low Fe/Hf**:
      - *Aromatic keto acids where rigidity limits coordination*

---

- **Rule 13**: *Modifiers with methoxy groups (-OCH₃) arranged to facilitate chelation increase Fe/Hf.*

  - **Explanation**: Methoxy groups can act as electron donors, and when appropriately positioned, they can coordinate with Fe ions. The combined effect of multiple methoxy groups can enhance the overall binding affinity to Fe.

  - **Examples**:
    - **High Fe/Hf**:
      - *4-(3,4-dimethoxyphenyl)-4-oxobutanoic acid*
  - **Counter-Examples**:
    - **Low Fe/Hf**:
      - *Modifiers with methoxy groups not positioned for effective coordination*
      - *Electron-donating groups causing steric hindrance*

---

- **Rule 14**: *Modifiers containing long-chain aliphatic acids with a terminal hydroxyl group (-OH) increase Fe/Hf.*

  - **Explanation**: The terminal hydroxyl group can act as an additional coordination site, and the long aliphatic chain provides flexibility, allowing the hydroxyl and carboxylate groups to effectively chelate the Fe ion.

  - **Examples**:
    - **High Fe/Hf**:
      - *7-hydroxyheptanoic acid*
  - **Counter-Examples**:
    - **Low Fe/Hf**:
      - *Short-chain polyhydroxy acids with steric hindrance*
      - *Aliphatic acids without terminal hydroxyl groups*

---

- **Rule 15**: *Modifiers containing conjugated systems with heteroatoms capable of coordination increase Fe/Hf.*

  - **Explanation**: Conjugated systems with heteroatoms (e.g., nitrogen in pyridine rings) can delocalize electron density and provide multiple coordination sites. This facilitates stronger and more stable complexes with Fe ions, increasing Fe incorporation into the catalyst.

  - **Examples**:
    - **High Fe/Hf**:
      - *4-pyridin-4-ylbutanoic acid* (pyridyl group contributes nitrogen for coordination)
  - **Counter-Examples**:
    - **Low Fe/Hf**:
      - *Heterocycles without additional coordinating groups or with less optimal positioning of heteroatoms*

---

**End of Rules**

---

These rules capture the relationship between the structural features of molecular modifiers and their influence on the Fe/Hf ratio in the catalyst. By analyzing functional groups, electronic effects, steric factors, and coordination chemistry principles, these guidelines help predict whether a modifier will increase or decrease Fe loading. Understanding these trends allows for the rational design of modifiers to optimize the catalyst's performance and enhance the yield of the target radical-mediated reaction.---------------------------------------------------------------


    Current_Matrix:
    Matrix Generator Message:
Rule 1,Rule 2,Rule 3,Rule 4,Rule 5,Rule 6,Rule 7,Rule 8,Rule 9,Rule 10,Rule 11,Rule 12,Rule 13,Rule 14,Rule 15
1,0,0,1,0,0,0,0,0,0,0,0,0,0,0
1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,1,0,0,0,0,0,0,0,0,0,0,0,0,0
1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,1,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,1,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,1,0,0,0,0,0,0,0,0,0,0,0,0,0
1,0,0,1,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0
0,1,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,1,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,-1,0,0,-1,0,0,0,0,0,0
0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0
0,1,0,0,0,0,0,0,0,0,0,0,0,0,0
0,1,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0
0,0,1,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1,0,0,0,0,0,0,0,0,0,0,0,0,0,0

---------------------------------------------------------------


    Train Accuracy: 0.7142857142857143; Test Accuracy: 0.0
    Train Support: 0.11428571428571428; Test Support: 0.0
    Train Confidence: 0.9523809523809524; Test Confidence: 0.3333333333333333
    Train Lift: 1.8899782135076253; Test Lift: NONE
    Train Leverage: 0.051428571428571435; Test Leverage: NONE
    ----------------------------------------------------------------------------------

    Current Rule Code:
def rule2matrix(smiles_list):
    # Import required RDKit modules
    from rdkit import Chem
    from rdkit.Chem import AllChem
    from rdkit.Chem import rdmolops
    
    # Define SMARTS patterns for functional groups
    # Carboxylic acid group (-COOH)
    carboxylic_acid = '[CX3](=O)[OX2H1]'
    carboxylate_anion = '[CX3](=O)[O-]'
    carboxylic_acid_group = [carboxylic_acid, carboxylate_anion]
    
    # Primary aliphatic amine (-NH2)
    primary_aliphatic_amine = '[NX3H2+0;!$(N[#7,#8,#15,#16])]'  # Excludes amines attached to non-carbon atoms
    
    # Aromatic carboxylic acid
    aromatic_carboxylic_acid = '[c][CX3](=O)[OX1H0-,OX2H1]'
    
    # Electron-withdrawing groups (EWGs) at para position
    ewg_para_substituents = [
        '[c][NX3+](=O)[O-]',  # Nitro group
        '[c][CX4][Br,F,Cl,I]',  # Halomethyl group
        '[c]n',  # Pyridyl substitution
        '[c][C](=O)[CX3](=O)[OX1H0-,OX2H1]',  # Keto group
    ]
    
    # Sulfur-containing groups
    thiol = '[SX2H]'  # Thiol group
    thioether = '[#16X2][#6]'  # Thioether group
    
    # Amino acids with aromatic side chains
    aromatic_side_chain_amino_acid = '[NX3H2][CX4H]([CX3](=O)[OX1H0-,OX2H1])[CH2][c]'
    
    # Multiple hydroxyl groups on short aliphatic or cyclic chain
    polyol = '[#6][OX2H][#6][OX2H][#6]'
    
    # Electron-donating groups (EDGs) directly attached to aromatic ring
    edg_on_aromatic = ['[c][NH2]', '[c][OX2H]', '[c][CH3]']
    
    # Perfluorinated aliphatic chains
    perfluoro_chain = '[CX4](F)(F)F'
    
    # Simple aliphatic carboxylic acids without additional coordinating functional groups
    simple_aliphatic_acid = '[CX3](=O)[OX1H0-,OX2H1]'  # Will exclude if other groups are present
    
    # Aldehyde group on aromatic ring
    aldehyde_on_aromatic = '[c][CX3H1](=O)'
    
    # Heterocyclic carboxylic acids without additional coordinating groups
    heterocyclic_acid = '[n,o,s][c][CX3](=O)[OX1H0-,OX2H1]'
    
    # Polyether chains ending with coordinating functional group
    polyether_chain = '[#6][OX2][#6][OX2][#6][C,N,O,S]'  # Simplified pattern
    
    # Keto groups adjacent to carboxylic acid on aromatic rings
    keto_adjacent_carboxy_aromatic = '[c][CX3](=O)[c][CX3](=O)[OX1H0-,OX2H1]'
    
    # Methoxy groups arranged to facilitate chelation
    chelating_methoxy = '[c][OX2][CH3]'
    
    # Long-chain aliphatic acids with terminal hydroxyl group
    long_chain_terminal_oh = '[CX3](=O)[OX1H0-,OX2H1][CX4][CX4][CX4][CX4][CX4][OX2H]'
    
    # Conjugated systems with heteroatoms capable of coordination
    conjugated_with_heteroatoms = '[#6]=[#6]-[#6]=[#6][N,O,S]'
    
    # List of rules
    rules = [
        {
            'number': 1,
            'description': 'Modifiers that are aliphatic carboxylic acids with a terminal primary amino group (-NH2).',
            'patterns': {
                'carboxylic_acid_group': carboxylic_acid_group,
                'primary_aliphatic_amine': primary_aliphatic_amine
            },
            'extra_check': 'aliphatic_chain_between',
            'prediction': 1
        },
        {
            'number': 2,
            'description': 'Modifiers containing an aromatic carboxylic acid with an electron-withdrawing group at the para position.',
            'patterns': {
                'aromatic_carboxylic_acid': aromatic_carboxylic_acid,
                'ewg_para_substituents': ewg_para_substituents
            },
            'prediction': 1
        },
        {
            'number': 3,
            'description': 'Modifiers containing sulfur-containing functional groups such as thiols (-SH) or thioethers (-S-).',
            'patterns': {
                'carboxylic_acid_group': carboxylic_acid_group,
                'sulfur_groups': [thiol, thioether]
            },
            'prediction': 1
        },
        {
            'number': 4,
            'description': 'Modifiers that are amino acids with aromatic side chains.',
            'patterns': {
                'aromatic_side_chain_amino_acid': aromatic_side_chain_amino_acid
            },
            'prediction': 1
        },
        {
            'number': 5,
            'description': 'Modifiers containing multiple hydroxyl groups (-OH) on a short aliphatic or cyclic chain.',
            'patterns': {
                'carboxylic_acid_group': carboxylic_acid_group,
                'polyol': polyol
            },
            'prediction': -1
        },
        {
            'number': 6,
            'description': 'Modifiers containing electron-donating groups directly attached to an aromatic ring.',
            'patterns': {
                'aromatic_carboxylic_acid': aromatic_carboxylic_acid,
                'edg_on_aromatic': edg_on_aromatic
            },
            'prediction': -1
        },
        {
            'number': 7,
            'description': 'Modifiers with perfluorinated aliphatic chains.',
            'patterns': {
                'carboxylic_acid_group': carboxylic_acid_group,
                'perfluoro_chain': perfluoro_chain
            },
            'prediction': -1
        },
        {
            'number': 8,
            'description': 'Simple aliphatic carboxylic acids without additional coordinating functional groups.',
            'patterns': {
                'simple_aliphatic_acid': simple_aliphatic_acid
            },
            'exclude_patterns': {
                'coordinating_groups': ['[N]', '[O]', '[S]', '[P]']  # Exclude if these are present beyond carboxylic acid
            },
            'prediction': -1
        },
        {
            'number': 9,
            'description': 'Modifiers containing an aldehyde group (-CHO) on an aromatic ring.',
            'patterns': {
                'aldehyde_on_aromatic': aldehyde_on_aromatic
            },
            'prediction': -1
        },
        {
            'number': 10,
            'description': 'Modifiers that are heterocyclic carboxylic acids without additional coordinating groups.',
            'patterns': {
                'heterocyclic_acid': heterocyclic_acid
            },
            'exclude_patterns': {
                'coordinating_groups': ['[N]', '[O]', '[S]']
            },
            'prediction': -1
        },
        {
            'number': 11,
            'description': 'Modifiers containing polyether chains ending with a coordinating functional group.',
            'patterns': {
                'polyether_chain': polyether_chain,
                'coordinating_group': ['[N]', '[O]', '[S]', '[P]']
            },
            'prediction': 1
        },
        {
            'number': 12,
            'description': 'Modifiers containing keto groups adjacent to carboxylic acid groups on aromatic rings.',
            'patterns': {
                'keto_adjacent_carboxy_aromatic': keto_adjacent_carboxy_aromatic
            },
            'prediction': 1
        },
        {
            'number': 13,
            'description': 'Modifiers with methoxy groups arranged to facilitate chelation.',
            'patterns': {
                'aromatic_carboxylic_acid': aromatic_carboxylic_acid,
                'chelating_methoxy': chelating_methoxy
            },
            'prediction': 1
        },
        {
            'number': 14,
            'description': 'Modifiers containing long-chain aliphatic acids with a terminal hydroxyl group (-OH).',
            'patterns': {
                'long_chain_terminal_oh': long_chain_terminal_oh
            },
            'prediction': 1
        },
        {
            'number': 15,
            'description': 'Modifiers containing conjugated systems with heteroatoms capable of coordination.',
            'patterns': {
                'conjugated_with_heteroatoms': conjugated_with_heteroatoms
            },
            'prediction': 1
        }
    ]
    
    # Compile SMARTS patterns
    for rule in rules:
        compiled_patterns = {}
        for key, pattern in rule.get('patterns', {}).items():
            if isinstance(pattern, list):
                compiled_patterns[key] = [Chem.MolFromSmarts(p) for p in pattern]
            else:
                compiled_patterns[key] = Chem.MolFromSmarts(pattern)
        rule['compiled_patterns'] = compiled_patterns
        # Compile exclude patterns if any
        if 'exclude_patterns' in rule:
            compiled_excludes = {}
            for key, pattern in rule['exclude_patterns'].items():
                if isinstance(pattern, list):
                    compiled_excludes[key] = [Chem.MolFromSmarts(p) for p in pattern]
                else:
                    compiled_excludes[key] = Chem.MolFromSmarts(pattern)
            rule['compiled_exclude_patterns'] = compiled_excludes
    
    # Initialize results list
    results = []
    
    # Process each SMILES string
    for smi in smiles_list:
        mol = Chem.MolFromSmiles(smi)
        if mol is None:
            # If the molecule cannot be parsed, append a row of zeros
            results.append([0]*len(rules))
            continue
        row = []
        for rule in rules:
            try:
                match = True
                compiled_patterns = rule['compiled_patterns']
                # Check exclude patterns if any
                if 'exclude_patterns' in rule:
                    for key, pats in rule['compiled_exclude_patterns'].items():
                        if isinstance(pats, list):
                            for pat in pats:
                                if mol.HasSubstructMatch(pat):
                                    match = False
                                    break
                        else:
                            if mol.HasSubstructMatch(pats):
                                match = False
                                break
                        if not match:
                            break
                    if not match:
                        row.append(0)
                        continue
                # Specific logic for certain rules
                if rule['number'] == 1:
                    # Rule 1: Aliphatic carboxylic acid with terminal primary amino group (-NH2)
                    # Find primary aliphatic amine nitrogen atoms
                    amine_matches = mol.GetSubstructMatches(compiled_patterns['primary_aliphatic_amine'])
                    # Find carboxylic acid carbon atoms
                    carboxy_matches = []
                    for pat in compiled_patterns['carboxylic_acid_group']:
                        carboxy_matches.extend(mol.GetSubstructMatches(pat))
                    if not amine_matches or not carboxy_matches:
                        match = False
                    else:
                        # Check for aliphatic chain between amine nitrogen and carboxyl carbon
                        path_found = False
                        for amine_match in amine_matches:
                            amine_idx = amine_match[0]
                            for carboxy_match in carboxy_matches:
                                carboxy_idx = carboxy_match[0]  # Carboxyl carbon atom
                                # Find shortest path between amine nitrogen and carboxyl carbon
                                path = Chem.rdmolops.GetShortestPath(mol, amine_idx, carboxy_idx)
                                # Check that all atoms in path (excluding start and end) are aliphatic carbons
                                aliphatic_chain = True
                                for idx in path[1:-1]:
                                    atom = mol.GetAtomWithIdx(idx)
                                    if atom.GetAtomicNum() != 6 or atom.GetIsAromatic():
                                        aliphatic_chain = False
                                        break
                                if aliphatic_chain:
                                    path_found = True
                                    break
                            if path_found:
                                break
                        if not path_found:
                            match = False
                else:
                    # Check required patterns
                    for key, pat in compiled_patterns.items():
                        if isinstance(pat, list):
                            group_match = False
                            for subpat in pat:
                                if mol.HasSubstructMatch(subpat):
                                    group_match = True
                                    break
                            if not group_match:
                                match = False
                                break
                        else:
                            if not mol.HasSubstructMatch(pat):
                                match = False
                                break
                if match:
                    row.append(rule['prediction'])
                else:
                    row.append(0)
            except Exception as e:
                # In case of any error, append 0
                row.append(0)
        results.append(row)
    # Create DataFrame with results
    df = pd.DataFrame(results, columns=[f'Rule {rule['number']}' for rule in rules])
    return df

--------------------------------------------------
    Target Name: Fe/Hf
    GPT Model: o1-preview-2024-09-12
    ML Model: ETC
    Current_Rules:
    **Start of Rules**

---

- **Rule 1**: *Modifiers that are aliphatic carboxylic acids with a terminal primary amino group (-NH₂) on a linear chain of five or more carbons increase Fe/Hf* (Fe/Hf_high_or_low_value == True).

  - **Explanation**: The terminal amino group provides an additional coordination site for Fe ions. The flexibility of a longer aliphatic chain (five carbons or more) allows simultaneous coordination of both the amino and carboxylate groups to the Fe ion, enhancing metal binding and increasing the Fe/Hf ratio.

  - **Examples**:
    - **High Fe/Hf**:
      - *5-aminopentanoic acid*
      - *7-aminoheptanoic acid*
      - *8-aminooctanoic acid*
  - **Counter-Examples**:
    - **Low Fe/Hf**:
      - *Octanoic acid* (lacks an amino group)
      - *3-aminopropanoic acid* (chain too short)
      - *4-aminobenzoic acid* (amino group is on an aromatic ring)

---

- **Rule 2**: *Modifiers that are aromatic carboxylic acids with para-substituted electron-withdrawing groups, such as nitro (-NO₂), bromomethyl (-CH₂Br), or pyridyl rings, increase Fe/Hf*.

  - **Explanation**: Electron-withdrawing groups increase the acidity of the carboxylic acid, enhancing deprotonation and stronger coordination with Fe ions. Additionally, these groups can facilitate π-backbonding and improve metal-ligand interactions.

  - **Examples**:
    - **High Fe/Hf**:
      - *4-nitrobenzoic acid*
      - *4-(bromomethyl)benzoic acid*
      - *4-pyridin-4-ylbenzoic acid*
  - **Counter-Examples**:
    - **Low Fe/Hf**:
      - *4-methylbenzoic acid* (methyl group is electron-donating)
      - *4-aminobenzoic acid* (amino group is electron-donating)

---

- **Rule 3**: *Modifiers containing sulfur-functional groups such as thiols (-SH) or thioethers (-S-) increase Fe/Hf*.

  - **Explanation**: Sulfur atoms have lone pairs and larger orbitals, allowing them to form strong coordinate bonds with Fe ions. The presence of sulfur enhances metal-binding affinity, leading to higher Fe incorporation.

  - **Examples**:
    - **High Fe/Hf**:
      - *4-sulfanylbenzoic acid*
      - *3-sulfanylpropanoic acid*
      - *2-[[(2S)-2-amino-4-methylsulfanylbutanoyl]amino]acetic acid*
  - **Counter-Examples**:
    - **Low Fe/Hf**:
      - *Octanoic acid* (no sulfur-containing groups)
      - *Benzoic acid* (no sulfur substituents)

---

- **Rule 4**: *Modifiers that are aliphatic or aromatic carboxylic acids with multiple hydroxyl groups (-OH) decrease Fe/Hf* (Fe/Hf_high_or_low_value == False).

  - **Explanation**: Multiple hydroxyl groups increase hydrophilicity and can engage in extensive hydrogen bonding, which may interfere with Fe coordination. They can also introduce steric hindrance, hindering effective metal-ligand interactions.

  - **Examples**:
    - **Low Fe/Hf**:
      - *(2R,3S,4R,5R)-2,3,4,5,6-pentahydroxyhexanoic acid* (gluconic acid)
      - *2-[[1,3-dihydroxy-2-(hydroxymethyl)propan-2-yl]oxy]acetic acid*
      - *5-formyl-2-hydroxybenzoic acid*
  - **Counter-Examples**:
    - **High Fe/Hf**:
      - *7-hydroxyheptanoic acid* (single hydroxyl group on a long chain minimizes interference)

---

- **Rule 5**: *Modifiers that are aromatic carboxylic acids with para-substituted electron-donating groups (e.g., amino (-NH₂), hydroxyl (-OH), methyl (-CH₃)) decrease Fe/Hf*.

  - **Explanation**: Electron-donating groups increase the electron density of the aromatic ring, reducing the acidity of the carboxylic acid and weakening its ability to coordinate with Fe ions. This results in weaker metal-ligand interactions and lower Fe incorporation.

  - **Examples**:
    - **Low Fe/Hf**:
      - *4-aminobenzoic acid*
      - *4-hydroxybenzoic acid*
      - *4-methylbenzoic acid*
  - **Counter-Examples**:
    - **High Fe/Hf**:
      - *4-nitrobenzoic acid* (electron-withdrawing group)
      - *4-(bromomethyl)benzoic acid* (electron-withdrawing group)

---

- **Rule 6**: *Modifiers containing flexible polyether chains (e.g., ethylene glycol units) terminated with coordinating functional groups (e.g., carboxyl (-COOH), amino (-NH₂)) increase Fe/Hf*.

  - **Explanation**: Polyether chains provide flexibility and solubility, allowing terminal coordinating groups to effectively interact with Fe ions. Ether oxygen atoms can also participate in coordination through lone pair donation, enhancing metal-ligand interactions.

  - **Examples**:
    - **High Fe/Hf**:
      - *2-[2-(2-methoxyethoxy)ethoxy]acetic acid*
      - *3-[2-(2-aminoethoxy)ethoxy]propanoic acid*
  - **Counter-Examples**:
    - **Low Fe/Hf**:
      - *Modifiers lacking terminal coordinating groups or with short, rigid chains*

---

- **Rule 7**: *Modifiers that are simple aliphatic carboxylic acids without additional coordinating functional groups decrease Fe/Hf*.

  - **Explanation**: Without additional donor atoms or functional groups (like amino or hydroxyl groups), these modifiers have limited ability to form strong coordination bonds with Fe ions, leading to minimal Fe incorporation.

  - **Examples**:
    - **Low Fe/Hf**:
      - *Octanoic acid*
      - *4-oxoheptanedioic acid*
  - **Counter-Examples**:
    - **High Fe/Hf**:
      - *Aliphatic acids with terminal amino or hydroxyl groups*
      - *Modifiers with additional coordinating functionalities*

---

- **Rule 8**: *Modifiers containing fluorinated aliphatic chains decrease Fe/Hf*.

  - **Explanation**: Fluorine's high electronegativity reduces the electron density available for coordination with Fe ions. Perfluorinated chains are also highly hydrophobic, which may hinder interactions with Fe ions, resulting in lower Fe incorporation.

  - **Examples**:
    - **Low Fe/Hf**:
      - *2,2,3,3,4,4,5,5,5-nonafluoropentanoic acid*
      - *4-[(2,2,2-trifluoroacetyl)amino]butanoic acid*
  - **Counter-Examples**:
    - **High Fe/Hf**:
      - *Non-fluorinated analogs with coordinating groups*

---

- **Rule 9**: *Modifiers that can form chelating structures with multiple coordinating groups in proximity (e.g., adjacent amino and carboxylate groups) increase Fe/Hf*.

  - **Explanation**: Chelation involves the formation of multiple bonds between a ligand and a single metal ion, enhancing complex stability and Fe incorporation. Adjacent functional groups can coordinate simultaneously to the Fe ion.

  - **Examples**:
    - **High Fe/Hf**:
      - *(2S)-2-aminobutanedioic acid* (aspartic acid)
  - **Counter-Examples**:
    - **Low Fe/Hf**:
      - *(2S)-2-aminopentanedioic acid* (glutamic acid; side chain may not favor effective chelation due to longer distance)

---

- **Rule 10**: *Modifiers containing coordinating heterocycles (e.g., pyridine rings) attached to carboxylic acids increase Fe/Hf*.

  - **Explanation**: Heterocyclic nitrogen atoms can coordinate with Fe ions, forming strong metal-ligand bonds. The aromatic system and positioning of the heteroatom facilitate effective coordination.

  - **Examples**:
    - **High Fe/Hf**:
      - *4-pyridin-4-ylbenzoic acid*
      - *4-pyridin-4-ylbutanoic acid*
  - **Counter-Examples**:
    - **Low Fe/Hf**:
      - *Pyridine-3-carboxylic acid* (nicotinic acid; nitrogen not optimally positioned for coordination)
      - *Heterocycles without coordinating groups or optimal orientation*

---

**End of Rules**

---

These rules illustrate the relationship between molecular modifiers' structural features and their impact on the Fe/Hf ratio in the catalyst. By combining multiple substructures and considering physicochemical properties such as electron-donating or -withdrawing effects, steric factors, and coordination capabilities, these rules help predict whether a modifier will increase or decrease Fe loading. This understanding enables the rational design of modifiers to optimize catalyst performance and control the yield of the target radical-mediated remote δ-C(sp³)–H bond functionalization reaction.---------------------------------------------------------------


    Current_Matrix:
    Matrix Generator Message:
Rule 1,Rule 2,Rule 3,Rule 4,Rule 5,Rule 6,Rule 7,Rule 8,Rule 9,Rule 10
0,0,0,-1,0,0,0,0,1,0
0,0,0,-1,0,0,0,0,1,0
0,0,0,-1,0,0,0,0,0,0
0,0,0,-1,0,0,0,0,1,0
0,0,0,-1,0,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,0
0,0,0,-1,0,0,0,0,1,0
0,0,0,-1,0,0,0,-1,0,0
0,0,0,-1,0,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,0
0,0,0,-1,0,0,0,0,1,0
0,0,0,-1,0,0,0,0,0,0

---------------------------------------------------------------


    Train Accuracy: 0.5428571428571428; Test Accuracy: 0.0
    Train Support: 0.02857142857142857; Test Support: 0.0
    Train Confidence: 1.0; Test Confidence: 0.5
    Train Lift: 2.0588235294117645; Test Lift: NONE
    Train Leverage: 0.014693877551020406; Test Leverage: NONE
    ----------------------------------------------------------------------------------

    Current Rule Code:
def rule2matrix(smiles_list):
    # Define SMARTS patterns for functional groups and substructures
    # Rule 1: Aliphatic carboxylic acids with a terminal primary amino group (-NH2) on a linear chain of five or more carbons
    rule1_pattern = '[NX3;H2][CH2]{3,}[CX3](=O)[OX2H1]'
    
    # Rule 2: Aromatic carboxylic acids with para-substituted electron-withdrawing groups (EWGs)
    # Define electron-withdrawing groups (nitro, bromomethyl, pyridyl)
    nitro_group = '[NX3+](=O)[O-]'
    bromomethyl_group = '[CH2Br]'
    pyridyl_group = 'n1ccccc1'
    
    # Aromatic carboxylic acid
    aromatic_carboxylic_acid = '[c][CX3](=O)[OX2H1]'
    
    # Rule 3: Modifiers containing sulfur-functional groups such as thiols (-SH) or thioethers (-S-)
    thiol_group = '[SX2H]'
    thioether_group = '[#6][SX2][#6]'
    
    # Rule 4: Aliphatic or aromatic carboxylic acids with multiple hydroxyl groups (-OH)
    hydroxyl_group = '[OX2H]'
    carboxylic_acid = '[CX3](=O)[OX2H1]'
    
    # Rule 5: Aromatic carboxylic acids with para-substituted electron-donating groups (EDGs) like amino (-NH2), hydroxyl (-OH), methyl (-CH3)
    amino_group = '[NX3;H2][#6]'  # Primary amine attached to carbon
    methyl_group = '[CH3]'  # Methyl group
    
    # Rule 6: Modifiers containing flexible polyether chains terminated with coordinating functional groups (e.g., carboxyl (-COOH), amino (-NH2))
    polyether_chain = '([#6][OX2][#6]){2,}'  # Two or more ether linkages in a chain
    
    # Rule 7: Simple aliphatic carboxylic acids without additional coordinating functional groups
    simple_aliphatic_acid = '[CX3](=O)[OX2H1]'  # Carboxylic acid
    exclude_groups_rule7 = ['[NX3]', '[OX2H]', '[SX2]']  # Exclude amines, hydroxyls, thiols
    
    # Rule 8: Modifiers containing fluorinated aliphatic chains
    fluorinated_chain = '[#6][#6][#6][#6][#6][F]'  # Aliphatic chain with fluorine
    
    # Rule 9: Modifiers that can form chelating structures with multiple coordinating groups in proximity (adjacent amino and carboxylate groups)
    chelating_group = '[NX3;H2][CX4][CX3](=O)[OX2H1]'  # Amino acid pattern
    
    # Rule 10: Modifiers containing coordinating heterocycles (e.g., pyridine rings) attached to carboxylic acids
    pyridine_attached_carboxylic_acid = '[n][c][CX3](=O)[OX2H1]'  # Pyridine ring attached to carboxylic acid
    
    # Compile SMARTS patterns
    pattern_dict = {
        'Rule 1': {'patterns': [rule1_pattern], 'prediction': 1},
        'Rule 2': {'patterns': [aromatic_carboxylic_acid, nitro_group, bromomethyl_group, pyridyl_group], 'prediction': 1},
        'Rule 3': {'patterns': [thiol_group, thioether_group], 'prediction': 1},
        'Rule 4': {'patterns': [carboxylic_acid, hydroxyl_group], 'count_threshold': {'[OX2H]': 2}, 'prediction': -1},
        'Rule 5': {'patterns': [aromatic_carboxylic_acid, amino_group, hydroxyl_group, methyl_group], 'prediction': -1},
        'Rule 6': {'patterns': [polyether_chain, carboxylic_acid, amino_group], 'prediction': 1},
        'Rule 7': {'patterns': [simple_aliphatic_acid], 'exclude_patterns': exclude_groups_rule7, 'prediction': -1},
        'Rule 8': {'patterns': [fluorinated_chain], 'prediction': -1},
        'Rule 9': {'patterns': [chelating_group], 'prediction': 1},
        'Rule 10': {'patterns': [pyridine_attached_carboxylic_acid], 'prediction': 1}
    }
    
    # Compile SMARTS patterns
    for rule in pattern_dict.values():
        compiled_patterns = [Chem.MolFromSmarts(pat) for pat in rule.get('patterns', [])]
        rule['compiled_patterns'] = compiled_patterns
        
        # Compile exclude patterns if any
        if 'exclude_patterns' in rule:
            compiled_exclude = [Chem.MolFromSmarts(pat) for pat in rule['exclude_patterns']]
            rule['compiled_exclude_patterns'] = compiled_exclude
    
    # Initialize results list
    results = []
    
    # Process each SMILES string
    for smi in smiles_list:
        mol = Chem.MolFromSmiles(smi)
        if mol is None:
            # If the molecule cannot be parsed, append a row of zeros
            results.append([0]*len(pattern_dict))
            continue
        row = []
        for rule_key, rule in pattern_dict.items():
            try:
                match = True
                # Check exclude patterns if any
                if 'compiled_exclude_patterns' in rule:
                    for pat in rule['compiled_exclude_patterns']:
                        if mol.HasSubstructMatch(pat):
                            match = False
                            break
                    if not match:
                        row.append(0)
                        continue
                # Check required patterns
                for pat in rule['compiled_patterns']:
                    matches = mol.GetSubstructMatches(pat)
                    if not matches:
                        match = False
                        break
                    # Check count threshold if specified
                    if 'count_threshold' in rule:
                        smarts = Chem.MolToSmarts(pat)
                        if smarts in rule['count_threshold']:
                            threshold = rule['count_threshold'][smarts]
                            if len(matches) < threshold:
                                match = False
                                break
                if match:
                    row.append(rule['prediction'])
                else:
                    row.append(0)
            except Exception as e:
                # In case of any error, append 0
                row.append(0)
        results.append(row)
    # Create DataFrame with results
    df = pd.DataFrame(results, columns=pattern_dict.keys())
    return df

--------------------------------------------------
    Target Name: Fe/Hf
    GPT Model: o1-preview-2024-09-12
    ML Model: ETC
    Current_Rules:
    **Start of Rules**

---

- **Rule 1**: *Modifiers that are omega-amino aliphatic carboxylic acids (terminal amino group on the opposite end of the carboxyl group) increase Fe/Hf* (Fe/Hf_high_or_low_value == True).

  - **Explanation**: The presence of a terminal amino group at the end opposite to the carboxyl group allows for bidentate coordination with Fe ions. This dual binding enhances complex stability and increases Fe incorporation into the catalyst.

  - **Examples**:
    - **High Fe/Hf**:
      - *5-aminopentanoic acid*
      - *7-aminoheptanoic acid*
      - *8-aminooctanoic acid*
  - **Counter-Examples**:
    - **Low Fe/Hf**:
      - *Octanoic acid* (no amino group present)
      - *(2S)-2-aminopentanedioic acid* (amino group is alpha to the carboxyl, not terminal)

---

- **Rule 2**: *Modifiers that are aromatic carboxylic acids with para-substituted electron-withdrawing groups capable of coordinating (e.g., nitro (-NO₂), bromomethyl (-CH₂Br), pyridyl rings) increase Fe/Hf*.

  - **Explanation**: Electron-withdrawing groups increase the acidity of the carboxylic acid, enhancing its ability to deprotonate and coordinate with Fe ions. Additionally, substituents like pyridyl rings can directly coordinate with Fe, further stabilizing the complex.

  - **Examples**:
    - **High Fe/Hf**:
      - *4-nitrobenzoic acid*
      - *4-(bromomethyl)benzoic acid*
      - *4-pyridin-4-ylbenzoic acid*
  - **Counter-Examples**:
    - **Low Fe/Hf**:
      - *4-methylbenzoic acid* (methyl group is electron-donating)
      - *4-formylbenzoic acid* (aldehyde group may not effectively coordinate)

---

- **Rule 3**: *Modifiers containing sulfur functional groups such as thiols (-SH) or thioethers (-S-) increase Fe/Hf*.

  - **Explanation**: Sulfur atoms have lone pairs and are polarizable, allowing them to form strong coordinate bonds with Fe ions. The presence of sulfur enhances metal-binding affinity, leading to higher Fe incorporation into the catalyst.

  - **Examples**:
    - **High Fe/Hf**:
      - *4-sulfanylbenzoic acid* (thiol group on aromatic ring)
      - *3-sulfanylpropanoic acid* (aliphatic thiol)
      - *2-[[(2S)-2-amino-4-methylsulfanylbutanoyl]amino]acetic acid* (thioether group)
  - **Counter-Examples**:
    - **Low Fe/Hf**:
      - *Benzoic acid* (lacks sulfur-containing groups)
      - *Octanoic acid* (no sulfur substituents)

---

- **Rule 4**: *Modifiers that are aliphatic or aromatic carboxylic acids with multiple hydroxyl groups (-OH) decrease Fe/Hf* (Fe/Hf_high_or_low_value == False).

  - **Explanation**: Multiple hydroxyl groups increase the hydrophilicity and can lead to steric hindrance around the coordination sites. This can interfere with effective coordination of Fe ions, resulting in lower Fe incorporation.

  - **Examples**:
    - **Low Fe/Hf**:
      - *(2R,3S,4R,5R)-2,3,4,5,6-pentahydroxyhexanoic acid* (gluconic acid)
      - *2-[[1,3-dihydroxy-2-(hydroxymethyl)propan-2-yl]oxy]acetic acid*
      - *5-formyl-2-hydroxybenzoic acid*
  - **Counter-Examples**:
    - **High Fe/Hf**:
      - *7-hydroxyheptanoic acid* (single hydroxyl group, less steric hindrance)

---

- **Rule 5**: *Modifiers that are aromatic carboxylic acids with para-substituted electron-donating groups (e.g., amino (-NH₂), hydroxyl (-OH), methoxy (-OCH₃), methyl (-CH₃)) decrease Fe/Hf*.

  - **Explanation**: Electron-donating groups decrease the acidity of the carboxylic acid, reducing its ability to deprotonate and coordinate with Fe ions. This diminishes metal-ligand interactions and lowers Fe incorporation.

  - **Examples**:
    - **Low Fe/Hf**:
      - *4-aminobenzoic acid*
      - *4-hydroxybenzoic acid*
      - *4-methylbenzoic acid*
      - *5-(4-hydroxyphenyl)pentanoic acid*
  - **Counter-Examples**:
    - **High Fe/Hf**:
      - *4-nitrobenzoic acid* (electron-withdrawing group)
      - *4-(bromomethyl)benzoic acid* (electron-withdrawing group)

---

- **Rule 6**: *Modifiers containing flexible polyether chains terminated with coordinating functional groups (e.g., carboxyl (-COOH), amino (-NH₂)) increase Fe/Hf*.

  - **Explanation**: Polyether chains provide flexibility and solubility, allowing terminal coordinating groups to effectively interact with Fe ions. Ether oxygen atoms can also participate in coordination through lone pair donation, enhancing metal-ligand interactions.

  - **Examples**:
    - **High Fe/Hf**:
      - *2-[2-(2-methoxyethoxy)ethoxy]acetic acid*
      - *3-[2-(2-aminoethoxy)ethoxy]propanoic acid*
  - **Counter-Examples**:
    - **Low Fe/Hf**:
      - *Modifiers lacking terminal coordinating groups or with short, rigid chains*
      - *Polyether chains without coordinating end groups*

---

- **Rule 7**: *Modifiers that are simple aliphatic carboxylic acids without additional coordinating functional groups decrease Fe/Hf*.

  - **Explanation**: Without additional donor atoms or functional groups (like amino or hydroxyl groups), these modifiers have limited ability to form strong coordination bonds with Fe ions, leading to minimal Fe incorporation.

  - **Examples**:
    - **Low Fe/Hf**:
      - *Octanoic acid*
      - *4-oxoheptanedioic acid*
  - **Counter-Examples**:
    - **High Fe/Hf**:
      - *Modifiers with terminal amino groups (e.g., omega-amino acids)*
      - *Modifiers with additional coordinating functionalities*

---

- **Rule 8**: *Modifiers containing fluorinated aliphatic chains or fluorinated functional groups decrease Fe/Hf*.

  - **Explanation**: Fluorine's high electronegativity reduces the electron density available for coordination with Fe ions. Fluorinated chains are also highly hydrophobic, which may hinder interactions with Fe ions, resulting in lower Fe incorporation.

  - **Examples**:
    - **Low Fe/Hf**:
      - *2,2,3,3,4,4,5,5,5-nonafluoropentanoic acid*
      - *4-[(2,2,2-trifluoroacetyl)amino]butanoic acid*
  - **Counter-Examples**:
    - **High Fe/Hf**:
      - *Non-fluorinated analogs with coordinating groups*
      - *Modifiers with electron-donating groups capable of coordinating*

---

- **Rule 9**: *Modifiers that can form stable chelate rings through adjacent amino and carboxylate groups increase Fe/Hf*.

  - **Explanation**: Chelation involves the formation of multiple bonds between a ligand and a single metal ion, enhancing complex stability and Fe incorporation. Adjacent functional groups can coordinate simultaneously to the Fe ion, forming five- or six-membered rings.

  - **Examples**:
    - **High Fe/Hf**:
      - *(2S)-2-aminobutanedioic acid* (aspartic acid)
      - *(2S)-2-amino-3-phenylpropanoic acid* (phenylalanine)
  - **Counter-Examples**:
    - **Low Fe/Hf**:
      - *(2S)-2-aminopentanedioic acid* (glutamic acid; side chain may not favor effective chelation due to longer distance)
      - *Modifiers where amino and carboxylate groups are too distant for effective chelation*

---

- **Rule 10**: *Modifiers containing coordinating heterocycles (e.g., pyridine rings, benzofuran derivatives) directly attached to carboxylic acids increase Fe/Hf*.

  - **Explanation**: Heterocyclic nitrogen or oxygen atoms can coordinate with Fe ions, forming strong metal-ligand bonds. The aromatic system and positioning of the heteroatom facilitate effective coordination.

  - **Examples**:
    - **High Fe/Hf**:
      - *4-pyridin-4-ylbenzoic acid*
      - *1,3-dioxo-2-benzofuran-5-carboxylic acid*
      - *4-pyridin-4-ylbutanoic acid*
  - **Counter-Examples**:
    - **Low Fe/Hf**:
      - *Pyridine-3-carboxylic acid* (nicotinic acid; nitrogen not optimally positioned for coordination)
      - *1H-pyrazole-4-carboxylic acid* (may not coordinate effectively due to electronic factors)

---

**End of Rules**

---

These rules illustrate the relationship between molecular modifiers' structural features and their impact on the Fe/Hf ratio in the catalyst. By combining multiple substructures and considering physicochemical properties such as electron-donating or -withdrawing effects, steric factors, chelation ability, and coordination capabilities, these rules help predict whether a modifier will increase or decrease Fe loading. This understanding enables the rational design of modifiers to optimize catalyst performance and control the yield of the target radical-mediated remote δ-C(sp³)–H bond functionalization reaction.---------------------------------------------------------------


    Current_Matrix:
    Matrix Generator Message:
Rule 1,Rule 2,Rule 3,Rule 4,Rule 5,Rule 6,Rule 7,Rule 8,Rule 9,Rule 10
0,0,0,0,0,1,0,0,0,0
0,0,0,0,0,1,0,0,0,0
0,0,0,0,0,1,0,-1,0,0
0,0,0,0,0,1,0,0,0,0
1,0,0,0,0,1,0,0,0,0
0,0,0,0,0,1,0,0,0,0
0,0,0,0,0,1,0,0,0,0
0,0,0,0,0,1,0,0,0,0
0,0,0,0,0,1,0,0,0,0
0,0,0,0,0,1,0,0,0,0
0,0,0,0,0,1,0,0,0,0
0,0,1,0,0,1,0,0,0,0
0,0,0,0,0,1,0,0,0,0
0,0,0,0,0,1,0,0,0,0
0,0,0,0,0,1,0,0,0,0
0,0,0,0,0,1,0,-1,0,0
0,0,0,0,0,1,0,0,0,0
0,0,0,0,0,1,0,0,0,0
0,0,1,0,0,1,0,0,0,0
0,0,0,0,0,1,0,0,0,0
0,0,0,0,0,1,0,0,0,0
0,0,0,0,0,1,0,0,0,0
0,0,0,0,0,1,0,0,0,0
0,0,0,0,0,1,0,0,0,0
0,0,0,0,0,1,0,0,0,0
0,0,0,0,0,1,0,0,0,0
0,0,0,0,0,1,0,0,0,0
0,0,0,0,0,1,0,0,0,0
0,0,0,0,0,1,0,0,0,0
0,0,0,0,0,1,0,0,0,0
0,0,0,0,0,1,0,0,0,0
0,0,0,0,0,1,0,0,0,0
0,0,0,0,0,1,0,0,0,0
0,0,0,0,0,1,0,0,0,0
0,0,0,0,0,1,0,0,0,0
0,0,0,0,0,1,0,0,0,0

---------------------------------------------------------------


    Train Accuracy: 0.5428571428571428; Test Accuracy: 1.0
    Train Support: 0.05714285714285714; Test Support: 0.0
    Train Confidence: 1.0; Test Confidence: 0.5
    Train Lift: 1.9444444444444446; Test Lift: NONE
    Train Leverage: 0.02775510204081633; Test Leverage: NONE
    ----------------------------------------------------------------------------------

    Current Rule Code:
def rule2matrix(smiles_list):
    # Define SMARTS patterns for functional groups and structural motifs

    # Rule 1: Omega-amino aliphatic carboxylic acids
    # Unbranched aliphatic chain with terminal amino and carboxyl groups at opposite ends
    omega_amino_acid = '[NX3H2][CH2][CH2][CH2][CH2][CX3](=O)[OX2H1]'

    # Rule 2: Para-substituted aromatic carboxylic acids with EWG capable of coordinating
    # Electron-withdrawing groups capable of coordinating
    para_electron_withdrawing_substituents = {
        'nitro': '[N+](=O)[O-]',
        'bromomethyl': '[CH2Br]',
        'pyridyl': 'c2ncccc2'
    }
    para_substituted_aromatic_ewg = []
    for name, ewg in para_electron_withdrawing_substituents.items():
        pattern = 'c1cc('+ewg+')ccc1C(=O)O'
        para_substituted_aromatic_ewg.append(pattern)

    # Rule 3: Sulfur functional groups (thiols or thioethers)
    thiol = '[SX2H]'
    thioether = '[#16X2][#6]'  # Exclude sulfoxides and sulfones

    # Rule 4: Multiple hydroxyl groups (excluding the carboxylic acid's OH)
    hydroxyl_group_not_carboxy = '[OX2H;!$([OX2H]-C(=O)[#6])]'  # Exclude hydroxyls directly attached to carboxylic acid

    # Rule 5: Para-substituted aromatic carboxylic acids with EDGs
    para_electron_donating_substituents = {
        'amino': 'N',
        'hydroxyl': 'O',
        'methoxy': 'OC',
        'methyl': 'C'
    }
    para_substituted_aromatic_edg = []
    for name, edg in para_electron_donating_substituents.items():
        pattern = 'c1cc('+edg+')ccc1C(=O)O'
        para_substituted_aromatic_edg.append(pattern)

    # Rule 6: Polyether chains terminated with coordinating functional groups
    polyether_chain = '([#6]-[#8]){2,}-[#6]'
    polyether_chain_CO2H = polyether_chain + '-C(=O)O'
    polyether_chain_NH2 = polyether_chain + '-[NX3H2]'

    # Rule 7: Simple aliphatic carboxylic acids without additional coordinating functional groups
    carboxylic_acid = '[CX3](=O)[OX2H1]'
    exclude_patterns_rule7 = ['[NX3;!$([N][#6])]', '[SX2H]', '[#16X2][#6]', '[OX2H]', '[c]', '[OX2][CX4][OX2]', '[F,Cl,Br,I]']

    # Rule 8: Fluorinated aliphatic chains or fluorinated functional groups
    fluorinated_chain = '[#6][#6][#6][#6][#6][F,Cl,Br,I]'

    # Rule 9: Stable chelate rings through adjacent amino and carboxylate groups
    chelating_amino_carboxyl = '[NX3][CX4][CX3](=O)[OX1,OX2-]'

    # Rule 10: Coordinating heterocycles directly attached to carboxylic acids
    heterocycle_carboxylic_acid = ['n1ccccc1C(=O)O', 'o1c(cccc1)C(=O)O']  # Pyridine and benzofuran derivatives

    # Define the rules as per the above patterns
    rules = [
        {
            'number': 1,
            'description': 'Modifiers that are omega-amino aliphatic carboxylic acids increase Fe/Hf',
            'patterns': [omega_amino_acid],
            'exclude_patterns': ['[c]'],  # Exclude aromatic rings
            'prediction': 1
        },
        {
            'number': 2,
            'description': 'Modifiers that are aromatic carboxylic acids with para-substituted electron-withdrawing groups increase Fe/Hf',
            'patterns': para_substituted_aromatic_ewg,
            'prediction': 1
        },
        {
            'number': 3,
            'description': 'Modifiers containing sulfur functional groups increase Fe/Hf',
            'patterns': [thiol, thioether],
            'exclude_patterns': ['[S](=O)', '[S](=O)(=O)'],  # Exclude sulfoxides and sulfones
            'prediction': 1
        },
        {
            'number': 4,
            'description': 'Modifiers with multiple hydroxyl groups decrease Fe/Hf',
            'patterns': [hydroxyl_group_not_carboxy],
            'count_threshold': {hydroxyl_group_not_carboxy: 2},
            'prediction': -1
        },
        {
            'number': 5,
            'description': 'Modifiers that are aromatic carboxylic acids with para-substituted electron-donating groups decrease Fe/Hf',
            'patterns': para_substituted_aromatic_edg,
            'prediction': -1
        },
        {
            'number': 6,
            'description': 'Modifiers containing flexible polyether chains terminated with coordinating functional groups increase Fe/Hf',
            'patterns': [polyether_chain_CO2H, polyether_chain_NH2],
            'prediction': 1
        },
        {
            'number': 7,
            'description': 'Modifiers that are simple aliphatic carboxylic acids without additional coordinating functional groups decrease Fe/Hf',
            'patterns': [carboxylic_acid],
            'exclude_patterns': exclude_patterns_rule7,
            'prediction': -1
        },
        {
            'number': 8,
            'description': 'Modifiers containing fluorinated aliphatic chains or fluorinated functional groups decrease Fe/Hf',
            'patterns': [fluorinated_chain],
            'prediction': -1
        },
        {
            'number': 9,
            'description': 'Modifiers that can form stable chelate rings through adjacent amino and carboxylate groups increase Fe/Hf',
            'patterns': [chelating_amino_carboxyl],
            'prediction': 1
        },
        {
            'number': 10,
            'description': 'Modifiers containing coordinating heterocycles directly attached to carboxylic acids increase Fe/Hf',
            'patterns': heterocycle_carboxylic_acid,
            'prediction': 1
        }
    ]

    # Compile SMARTS patterns
    for rule in rules:
        compiled_patterns = []
        for smarts in rule.get('patterns', []):
            try:
                mol = Chem.MolFromSmarts(smarts)
                if mol:
                    compiled_patterns.append(mol)
            except Exception as e:
                pass  # Handle SMARTS parsing error
        rule['compiled_patterns'] = compiled_patterns

        if 'exclude_patterns' in rule:
            compiled_excludes = []
            for smarts in rule['exclude_patterns']:
                try:
                    mol = Chem.MolFromSmarts(smarts)
                    if mol:
                        compiled_excludes.append(mol)
                except Exception as e:
                    pass  # Handle SMARTS parsing error
            rule['compiled_exclude_patterns'] = compiled_excludes

    # Initialize results list
    results = []

    # Process each SMILES string
    for smi in smiles_list:
        mol = Chem.MolFromSmiles(smi)
        if mol is None:
            # If parsing fails, append a row of zeros
            results.append([0]*len(rules))
            continue
        row = []
        for rule in rules:
            try:
                match = True

                # Check exclude patterns
                if 'exclude_patterns' in rule:
                    for pat in rule.get('compiled_exclude_patterns', []):
                        if mol.HasSubstructMatch(pat):
                            match = False
                            break
                    if not match:
                        row.append(0)
                        continue

                # Check required patterns
                for pat in rule['compiled_patterns']:
                    if 'count_threshold' in rule:
                        matches = mol.GetSubstructMatches(pat)
                        threshold = rule['count_threshold'].get(pat.GetSmarts(), 1)
                        if len(matches) < threshold:
                            match = False
                            break
                    else:
                        if not mol.HasSubstructMatch(pat):
                            match = False
                            break
                if match:
                    row.append(rule['prediction'])
                else:
                    row.append(0)
            except Exception as e:
                # In case of any error, append 0
                row.append(0)
        results.append(row)

    # Create DataFrame with results
    column_names = [f'Rule {rule["number"]}' for rule in rules]
    df = pd.DataFrame(results, columns=column_names)
    return df
--------------------------------------------------
    Target Name: Fe/Hf
    GPT Model: o1-preview-2024-09-12
    ML Model: ETC
    Current_Rules:
    **Start of Rules**

---

**Rule 1**: *Modifiers that are omega-amino aliphatic carboxylic acids (terminal amino group on the opposite end of the carboxyl group) increase Fe/Hf* (**Fe/Hf_high_or_low_value == True**).

- **Explanation**: The presence of a terminal amino group at the end opposite to the carboxyl group allows for bidentate coordination with Fe ions. This dual binding enhances complex stability and increases Fe incorporation into the catalyst.

- **Examples**:
  - **High Fe/Hf**:
    - *5-aminopentanoic acid*
    - *7-aminoheptanoic acid*
    - *8-aminooctanoic acid*
- **Counter-Examples**:
  - **Low Fe/Hf**:
    - *Octanoic acid* (no amino group present)
    - *(2S)-2-aminopentanedioic acid* (amino group is alpha to the carboxyl, not terminal)

---

**Rule 2**: *Modifiers that are aromatic carboxylic acids with **para-substituted electron-withdrawing groups capable of coordinating** (e.g., nitro (-NO₂), bromomethyl (-CH₂Br), pyridyl rings) increase Fe/Hf*.

- **Explanation**: Electron-withdrawing groups increase the acidity of the carboxylic acid, enhancing its ability to deprotonate and coordinate with Fe ions. Additionally, substituents like pyridyl rings can directly coordinate with Fe, further stabilizing the complex.

- **Examples**:
  - **High Fe/Hf**:
    - *4-nitrobenzoic acid*
    - *4-(bromomethyl)benzoic acid*
    - *4-pyridin-4-ylbenzoic acid*
- **Counter-Examples**:
  - **Low Fe/Hf**:
    - *4-methylbenzoic acid* (methyl group is electron-donating)
    - *4-formylbenzoic acid* (aldehyde group may not effectively coordinate)

---

**Rule 3**: *Modifiers containing sulfur functional groups such as thiols (-SH) or thioethers (-S-) increase Fe/Hf*.

- **Explanation**: Sulfur atoms have lone pairs and are polarizable, allowing them to form strong coordinate bonds with Fe ions. The presence of sulfur enhances metal-binding affinity, leading to higher Fe incorporation into the catalyst.

- **Examples**:
  - **High Fe/Hf**:
    - *4-sulfanylbenzoic acid* (thiol group on aromatic ring)
    - *3-sulfanylpropanoic acid* (aliphatic thiol)
    - *2-[[(2S)-2-amino-4-methylsulfanylbutanoyl]amino]acetic acid* (thioether group)
- **Counter-Examples**:
  - **Low Fe/Hf**:
    - *Benzoic acid* (lacks sulfur-containing groups)
    - *Octanoic acid* (no sulfur substituents)

---

**Rule 4**: *Modifiers that can form stable chelate rings through adjacent amino and carboxyl groups increase Fe/Hf*.

- **Explanation**: Chelation involves the formation of multiple bonds between a ligand and a single metal ion, enhancing complex stability and Fe incorporation. Adjacent functional groups can coordinate simultaneously to the Fe ion, forming five- or six-membered rings.

- **Examples**:
  - **High Fe/Hf**:
    - *(2S)-2-aminobutanedioic acid* (aspartic acid)
    - *(2S)-2-amino-3-phenylpropanoic acid* (phenylalanine)
- **Counter-Examples**:
  - **Low Fe/Hf**:
    - *(2S)-2-aminopentanedioic acid* (glutamic acid; longer side chain may reduce chelation efficiency)
    - *Modifiers where amino and carboxyl groups are too distant for effective chelation*

---

**Rule 5**: *Modifiers containing flexible polyether chains terminated with coordinating functional groups (e.g., carboxyl (-COOH), amino (-NH₂)) increase Fe/Hf*.

- **Explanation**: Polyether chains provide flexibility and solubility, allowing terminal coordinating groups to effectively interact with Fe ions. Ether oxygen atoms can also participate in coordination through lone pair donation, enhancing metal-ligand interactions.

- **Examples**:
  - **High Fe/Hf**:
    - *2-[2-(2-methoxyethoxy)ethoxy]acetic acid*
    - *3-[2-(2-aminoethoxy)ethoxy]propanoic acid*
- **Counter-Examples**:
  - **Low Fe/Hf**:
    - *Modifiers lacking terminal coordinating groups or with short, rigid chains*
    - *Polyether chains without coordinating end groups*

---

**Rule 6**: *Modifiers that are aromatic carboxylic acids with **para-substituted electron-donating groups** (e.g., amino (-NH₂), hydroxyl (-OH), methoxy (-OCH₃), methyl (-CH₃)) decrease Fe/Hf* (**Fe/Hf_high_or_low_value == False**).

- **Explanation**: Electron-donating groups decrease the acidity of the carboxylic acid, reducing its ability to deprotonate and coordinate with Fe ions. This diminishes metal-ligand interactions and lowers Fe incorporation.

- **Examples**:
  - **Low Fe/Hf**:
    - *4-aminobenzoic acid*
    - *4-hydroxybenzoic acid*
    - *4-methylbenzoic acid*
    - *5-(4-hydroxyphenyl)pentanoic acid*
- **Counter-Examples**:
  - **High Fe/Hf**:
    - *4-nitrobenzoic acid* (electron-withdrawing group)
    - *4-(bromomethyl)benzoic acid* (electron-withdrawing group)

---

**Rule 7**: *Modifiers containing multiple hydroxyl groups (-OH) without additional strong coordinating groups decrease Fe/Hf*.

- **Explanation**: Multiple hydroxyl groups increase the hydrophilicity and can lead to steric hindrance around the coordination sites. This can interfere with effective coordination of Fe ions, resulting in lower Fe incorporation.

- **Examples**:
  - **Low Fe/Hf**:
    - *(2R,3S,4R,5R)-2,3,4,5,6-pentahydroxyhexanoic acid* (gluconic acid)
    - *2-[[1,3-dihydroxy-2-(hydroxymethyl)propan-2-yl]oxy]acetic acid*
    - *5-formyl-2-hydroxybenzoic acid*
- **Counter-Examples**:
  - **High Fe/Hf**:
    - *7-hydroxyheptanoic acid* (single hydroxyl group, less steric hindrance)

---

**Rule 8**: *Modifiers containing fluorinated aliphatic chains or fluorinated functional groups decrease Fe/Hf*.

- **Explanation**: Fluorine's high electronegativity reduces the electron density available for coordination with Fe ions. Fluorinated chains are also highly hydrophobic, which may hinder interactions with Fe ions, resulting in lower Fe incorporation.

- **Examples**:
  - **Low Fe/Hf**:
    - *2,2,3,3,4,4,5,5,5-nonafluoropentanoic acid*
    - *4-[(2,2,2-trifluoroacetyl)amino]butanoic acid*
- **Counter-Examples**:
  - **High Fe/Hf**:
    - *Non-fluorinated analogs with coordinating groups*
    - *Modifiers with electron-donating groups capable of coordinating*

---

**Rule 9**: *Modifiers containing coordinating heterocycles (e.g., pyridine rings) directly attached to carboxylic acids increase Fe/Hf*.

- **Explanation**: Heterocyclic nitrogen atoms can coordinate with Fe ions, forming strong metal-ligand bonds. The aromatic system and positioning of the heteroatom facilitate effective coordination.

- **Examples**:
  - **High Fe/Hf**:
    - *4-pyridin-4-ylbenzoic acid*
    - *4-pyridin-4-ylbutanoic acid*
- **Counter-Examples**:
  - **Low Fe/Hf**:
    - *Pyridine-3-carboxylic acid* (nicotinic acid; nitrogen not optimally positioned for coordination)
    - *1H-pyrazole-4-carboxylic acid* (may not coordinate effectively due to electronic factors)

---

**Rule 10**: *Simple aliphatic carboxylic acids without additional coordinating functional groups decrease Fe/Hf*.

- **Explanation**: Without additional donor atoms or functional groups (like amino or hydroxyl groups), these modifiers have limited ability to form strong coordination bonds with Fe ions, leading to minimal Fe incorporation.

- **Examples**:
  - **Low Fe/Hf**:
    - *Octanoic acid*
    - *4-oxoheptanedioic acid*
- **Counter-Examples**:
  - **High Fe/Hf**:
    - *Modifiers with terminal amino groups (e.g., omega-amino acids)*
    - *Modifiers with additional coordinating functionalities*

---

**Rule 11**: *Modifiers that are aliphatic carboxylic acids with omega-hydroxyl groups (terminal hydroxyl groups) can increase Fe/Hf*.

- **Explanation**: Terminal hydroxyl groups can participate in coordination with Fe ions, potentially forming hydrogen bonds or coordinating directly, which enhances Fe incorporation.

- **Examples**:
  - **High Fe/Hf**:
    - *7-hydroxyheptanoic acid*
- **Counter-Examples**:
  - **Low Fe/Hf**:
    - *Modifiers with internal hydroxyl groups or multiple hydroxyls leading to steric hindrance*

---

**Rule 12**: *Modifiers with aromatic rings linked to carboxylic acids via ketone groups increase Fe/Hf*.

- **Explanation**: Ketone groups adjacent to aromatic rings can coordinate with Fe ions, and the extended conjugation may enhance the stability of the metal-ligand complex.

- **Examples**:
  - **High Fe/Hf**:
    - *1,3-dioxo-2-benzofuran-5-carboxylic acid*
    - *4-(3,4-dimethoxyphenyl)-4-oxobutanoic acid*
- **Counter-Examples**:
  - **Low Fe/Hf**:
    - *Compounds lacking ketone groups adjacent to aromatic systems*

---

**End of Rules**

---

These rules illustrate the relationship between molecular modifiers' structural features and their impact on the Fe/Hf ratio in the catalyst. By combining multiple substructures and considering physicochemical properties such as electron-donating or -withdrawing effects, steric factors, chelation ability, and coordination capabilities, these rules help predict whether a modifier will increase or decrease Fe loading. This understanding enables the rational design of modifiers to optimize catalyst performance and control the yield of the target radical-mediated remote δ-C(sp³)–H bond functionalization reaction.---------------------------------------------------------------


    Current_Matrix:
    Matrix Generator Message:
Rule 1,Rule 2,Rule 3,Rule 4,Rule 5,Rule 6,Rule 7,Rule 8,Rule 9,Rule 10,Rule 11,Rule 12
0,0,0,1,0,0,0,0,0,0,0,0
0,0,0,1,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,1,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,-1,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,-1,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,-1,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,1,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,-1,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,-1,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,1,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,-1,0,0,0,0,0
0,0,0,0,0,0,0,-1,0,0,0,0
0,0,0,0,0,0,-1,0,0,0,0,0
0,0,0,0,0,0,-1,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,1,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0

---------------------------------------------------------------


    Train Accuracy: 0.7428571428571429; Test Accuracy: 0.0
    Train Support: 0.05714285714285714; Test Support: 0.0
    Train Confidence: 0.7083333333333334; Test Confidence: 0.5
    Train Lift: 1.4583333333333333; Test Lift: NONE
    Train Leverage: 0.022244897959183666; Test Leverage: NONE
    ----------------------------------------------------------------------------------

    Current Rule Code:
def rule2matrix(smiles_list):
    # Define SMARTS patterns for functional groups using corrected patterns from suggestions
    
    # Rule 1: Omega-amino aliphatic carboxylic acids (omega-amino acids)
    # The amino group is terminal and connected via at least two CH2 units to the carboxylic acid
    omega_amino_acid = '[NX3;H2][CH2]{2,}[CX3](=O)[OX1H0-,OX2H1]'
    
    # Rule 2: Aromatic carboxylic acids with para-substituted electron-withdrawing groups capable of coordinating
    # Examples: nitro (-NO2), bromomethyl (-CH2Br), pyridyl rings
    para_substituted_coord_ewg_nitro = 'c1cc(ccc1C(=O)[OX1H0-,OX2H1])[N+](=O)[O-]'
    para_substituted_coord_ewg_bromomethyl = 'c1cc(ccc1C(=O)[OX1H0-,OX2H1])CBr'
    para_substituted_coord_ewg_pyridyl = 'c1cc(ccc1C(=O)[OX1H0-,OX2H1])c2ccncc2'
    para_substituted_coord_ewg = [para_substituted_coord_ewg_nitro, para_substituted_coord_ewg_bromomethyl, para_substituted_coord_ewg_pyridyl]
    
    # Rule 3: Thiol (-SH) and thioether (-S-) groups
    thiol = '[SX2H]'
    thioether = '[SX2;$([H0]([#6])[#6])]([#6])[#6]'
    
    # Rule 4: Chelating amino acids with adjacent amino and carboxyl groups (alpha-amino acids)
    chelating_amino_acid = '[NX3;H2][CX4H][CX3](=O)[OX1H0-,OX2H1]'
    
    # Rule 5: Flexible polyether chains terminated with coordinating functional groups
    polyether_chain = '[#6]-([O][#6]){2,}-[O][#6]'
    terminal_patterns = ['[CX3](=O)[OX1H0-,OX2H1]', '[NX3;H2]']
    
    # Rule 6: Aromatic carboxylic acids with para-substituted electron-donating groups
    para_substituted_edg = 'c1cc([NX3;H2,OX2H,OC,C])ccc1C(=O)[OX1H0-,OX2H1]'
    
    # Rule 7: Modifiers containing multiple hydroxyl groups (-OH) without additional strong coordinating groups
    hydroxyl_group = '[OX2H]'
    exclude_patterns_rule7 = ['[NX3]', '[SX2]', '[n]']
    
    # Rule 8: Fluorinated aliphatic chains or fluorinated functional groups
    fluorinated_chain = '[CX4]([F])([F])[F]'
    
    # Rule 9: Modifiers containing coordinating heterocycles directly attached to carboxylic acids
    coordinating_heterocycles = 'c1ncccc1C(=O)[OX1H0-,OX2H1]'
    
    # Rule 10: Simple aliphatic carboxylic acids without additional coordinating functional groups
    carboxylic_acid = '[CX3](=O)[OX1H0-,OX2H1]'
    exclude_patterns_rule10 = ['[NX3]', '[OX2H]', '[SX2]', '[n]', '[#7]', '[#8]', '[#16]']
    
    # Rule 11: Aliphatic carboxylic acids with omega-hydroxyl groups
    omega_hydroxyl_acid = '[OX2H][CH2]{2,}[CX3](=O)[OX1H0-,OX2H1]'
    
    # Rule 12: Modifiers with aromatic rings linked to carboxylic acids via ketone groups
    aromatic_ketone_acid = 'c1ccccc1C(=O)C(=O)[OX1H0-,OX2H1]'
    
    # Now define the rules with their associated patterns and predictions
    rules = [
        {
            'number': 1,
            'description': 'Modifiers that are omega-amino aliphatic carboxylic acids increase Fe/Hf.',
            'patterns': [omega_amino_acid],
            'prediction': 1
        },
        {
            'number': 2,
            'description': 'Aromatic carboxylic acids with para-substituted electron-withdrawing groups capable of coordinating increase Fe/Hf.',
            'patterns': para_substituted_coord_ewg,
            'prediction': 1
        },
        {
            'number': 3,
            'description': 'Modifiers containing sulfur functional groups such as thiols (-SH) or thioethers (-S-) increase Fe/Hf.',
            'patterns': [thiol, thioether],
            'prediction': 1
        },
        {
            'number': 4,
            'description': 'Modifiers that can form stable chelate rings through adjacent amino and carboxyl groups increase Fe/Hf.',
            'patterns': [chelating_amino_acid],
            'prediction': 1
        },
        {
            'number': 5,
            'description': 'Modifiers containing flexible polyether chains terminated with coordinating functional groups increase Fe/Hf.',
            'patterns': [polyether_chain],
            'terminal_patterns': terminal_patterns,
            'prediction': 1
        },
        {
            'number': 6,
            'description': 'Aromatic carboxylic acids with para-substituted electron-donating groups decrease Fe/Hf.',
            'patterns': [para_substituted_edg],
            'prediction': -1
        },
        {
            'number': 7,
            'description': 'Modifiers containing multiple hydroxyl groups (-OH) without additional strong coordinating groups decrease Fe/Hf.',
            'patterns': [hydroxyl_group],
            'exclude_patterns': exclude_patterns_rule7,
            'count_threshold': {'[OX2H]': 2},
            'prediction': -1
        },
        {
            'number': 8,
            'description': 'Modifiers containing fluorinated aliphatic chains or fluorinated functional groups decrease Fe/Hf.',
            'patterns': [fluorinated_chain],
            'prediction': -1
        },
        {
            'number': 9,
            'description': 'Modifiers containing coordinating heterocycles directly attached to carboxylic acids increase Fe/Hf.',
            'patterns': [coordinating_heterocycles],
            'prediction': 1
        },
        {
            'number': 10,
            'description': 'Simple aliphatic carboxylic acids without additional coordinating functional groups decrease Fe/Hf.',
            'patterns': [carboxylic_acid],
            'exclude_patterns': exclude_patterns_rule10,
            'prediction': -1
        },
        {
            'number': 11,
            'description': 'Aliphatic carboxylic acids with omega-hydroxyl groups increase Fe/Hf.',
            'patterns': [omega_hydroxyl_acid],
            'prediction': 1
        },
        {
            'number': 12,
            'description': 'Modifiers with aromatic rings linked to carboxylic acids via ketone groups increase Fe/Hf.',
            'patterns': [aromatic_ketone_acid],
            'prediction': 1
        }
    ]
    
    # Compile patterns
    for rule in rules:
        compiled_patterns = []
        for pattern in rule.get('patterns', []):
            compiled_patterns.append(Chem.MolFromSmarts(pattern))
        rule['compiled_patterns'] = compiled_patterns
        # Compile terminal patterns if any
        if 'terminal_patterns' in rule:
            compiled_terminal_patterns = []
            for pattern in rule['terminal_patterns']:
                compiled_terminal_patterns.append(Chem.MolFromSmarts(pattern))
            rule['compiled_terminal_patterns'] = compiled_terminal_patterns
        # Compile exclude patterns if any
        if 'exclude_patterns' in rule:
            compiled_exclude_patterns = []
            for pattern in rule['exclude_patterns']:
                compiled_exclude_patterns.append(Chem.MolFromSmarts(pattern))
            rule['compiled_exclude_patterns'] = compiled_exclude_patterns
        # Compile count_threshold patterns if any
        if 'count_threshold' in rule:
            compiled_count_threshold = {}
            for smarts, threshold in rule['count_threshold'].items():
                compiled_count_threshold[Chem.MolFromSmarts(smarts)] = threshold
            rule['compiled_count_threshold'] = compiled_count_threshold
    
    # Initialize results list
    results = []
    
    # Process each SMILES string
    for smi in smiles_list:
        mol = Chem.MolFromSmiles(smi)
        if mol is None:
            # If the molecule cannot be parsed, append a row of zeros
            results.append([0]*len(rules))
            continue
        row = []
        for rule in rules:
            try:
                match = True
                # Check exclude patterns if any
                if 'compiled_exclude_patterns' in rule:
                    for pat in rule['compiled_exclude_patterns']:
                        if mol.HasSubstructMatch(pat):
                            match = False
                            break
                    if not match:
                        row.append(0)
                        continue
                # Check required patterns
                for pat in rule['compiled_patterns']:
                    if not mol.HasSubstructMatch(pat):
                        match = False
                        break
                # For rules requiring terminal patterns (e.g., Rule 5)
                if match and 'compiled_terminal_patterns' in rule:
                    terminal_match = any(mol.HasSubstructMatch(pat) for pat in rule['compiled_terminal_patterns'])
                    if not terminal_match:
                        match = False
                # For rules with count threshold
                if match and 'compiled_count_threshold' in rule:
                    for pat, threshold in rule['compiled_count_threshold'].items():
                        matches = mol.GetSubstructMatches(pat)
                        if len(matches) < threshold:
                            match = False
                            break
                if match:
                    row.append(rule['prediction'])
                else:
                    row.append(0)
            except Exception:
                # In case of any error, append 0
                row.append(0)
        results.append(row)
    # Create DataFrame with results
    df = pd.DataFrame(results, columns=[f'Rule {rule['number']}' for rule in rules])
    return df
--------------------------------------------------
    Target Name: Fe/Hf
    GPT Model: o1-preview-2024-09-12
    ML Model: ETC
    Current_Rules:
    **Start of Rules**

---

**Rule 1**: *Modifiers that are omega-amino aliphatic carboxylic acids* (linear aliphatic chains with a terminal amino group opposite the carboxyl group) **increase Fe/Hf** (**Fe/Hf_high_or_low_value == True**).

- **Explanation**: The presence of a terminal amino group allows the molecule to act as a bidentate ligand, coordinating with Fe ions through both the amino and carboxyl groups. This chelation enhances the stability of the Fe complex and promotes greater Fe incorporation into the catalyst.

- **Examples**:
  - **High Fe/Hf**:
    - *5-aminopentanoic acid*
    - *7-aminoheptanoic acid*
    - *8-aminooctanoic acid*
    - *(2S)-6-acetamido-2-aminohexanoic acid*
  - **Structural Features**:
    - Linear aliphatic chain (5-8 carbons)
    - Carboxyl group at one end
    - Primary amino group at the opposite end or along the chain
- **Counter-Examples**:
  - **Low Fe/Hf**:
    - *Octanoic acid* (lacks amino group)
    - *(2S)-2-aminopentanedioic acid* (amino group is alpha to the carboxyl, less effective for chelation due to ring strain in forming chelates)

---

**Rule 2**: *Modifiers that are aromatic carboxylic acids with para-substituted electron-withdrawing groups capable of coordination* (e.g., nitro (-NO₂), bromomethyl (-CH₂Br), pyridyl rings) **increase Fe/Hf**.

- **Explanation**: Electron-withdrawing groups increase the acidity of the carboxylic acid and enhance its ability to coordinate with Fe ions. Substituents like pyridyl rings provide additional coordination sites through nitrogen atoms, further strengthening Fe binding.

- **Examples**:
  - **High Fe/Hf**:
    - *4-nitrobenzoic acid*
    - *4-(bromomethyl)benzoic acid*
    - *4-pyridin-4-ylbenzoic acid*
  - **Structural Features**:
    - Benzoic acid core
    - Electron-withdrawing group at the para position
    - Potential additional coordination site (e.g., nitrogen in pyridine)
- **Counter-Examples**:
  - **Low Fe/Hf**:
    - *4-methylbenzoic acid* (methyl group is electron-donating)
    - *4-aminobenzoic acid* (amino group is electron-donating)

---

**Rule 3**: *Modifiers containing sulfur functional groups such as thiols (-SH) or thioethers (-S-)* **increase Fe/Hf**.

- **Explanation**: Sulfur atoms are soft Lewis bases with a high affinity for transition metals like Fe. The presence of sulfur-containing groups enhances coordination through strong metal-sulfur interactions, leading to increased Fe incorporation.

- **Examples**:
  - **High Fe/Hf**:
    - *4-sulfanylbenzoic acid* (thiol group on aromatic ring)
    - *3-sulfanylpropanoic acid* (aliphatic thiol)
    - *2-[[(2S)-2-amino-4-methylsulfanylbutanoyl]amino]acetic acid* (thioether-containing amino acid derivative)
  - **Structural Features**:
    - Sulfur-containing functional group (thiol or thioether)
    - Proximity to carboxyl group for effective coordination
- **Counter-Examples**:
  - **Low Fe/Hf**:
    - *Octanoic acid* (no sulfur groups)
    - *Benzoic acid* (lacks sulfur-containing substituents)

---

**Rule 4**: *Modifiers that are aliphatic carboxylic acids containing polyether chains terminated with coordinating groups* (e.g., carboxyl (-COOH), amino (-NH₂)) **increase Fe/Hf**.

- **Explanation**: Polyether chains offer flexibility and multiple ether oxygen atoms, which can coordinate with Fe ions. When terminated with strong coordinating groups, these modifiers enhance metal-ligand interactions through multidentate coordination.

- **Examples**:
  - **High Fe/Hf**:
    - *2-[2-(2-methoxyethoxy)ethoxy]acetic acid* (triethylene glycol ether with terminal carboxyl group)
    - *3-[2-(2-aminoethoxy)ethoxy]propanoic acid* (polyether chain terminating with an amino group)
  - **Structural Features**:
    - Polyether chain (ethylene glycol units)
    - Terminal coordinating group (carboxyl or amino)
- **Counter-Examples**:
  - **Low Fe/Hf**:
    - *Compounds lacking terminal coordinating groups*
    - *Modifiers with rigid aliphatic chains without ether linkages*

---

**Rule 5**: *Modifiers that are aromatic carboxylic acids with para-substituted electron-donating groups* (e.g., amino (-NH₂), hydroxyl (-OH), methoxy (-OCH₃), methyl (-CH₃)) **decrease Fe/Hf** (**Fe/Hf_high_or_low_value == False**).

- **Explanation**: Electron-donating groups decrease the acidity of the carboxylic acid, hindering deprotonation and coordination with Fe ions. Additionally, these groups may engage in intramolecular hydrogen bonding, reducing the availability of coordinating sites for Fe.

- **Examples**:
  - **Low Fe/Hf**:
    - *4-aminobenzoic acid*
    - *4-hydroxybenzoic acid* (as part of *2-[(4-hydroxybenzoyl)amino]acetic acid*)
    - *4-methylbenzoic acid*
    - *5-(4-hydroxyphenyl)pentanoic acid*
    - *3-(4-hydroxyphenyl)propanoic acid*
  - **Structural Features**:
    - Benzoic acid core
    - Electron-donating group at the para position
- **Counter-Examples**:
  - **High Fe/Hf**:
    - *4-nitrobenzoic acid* (electron-withdrawing group)
    - *4-(bromomethyl)benzoic acid* (electron-withdrawing group)

---

**Rule 6**: *Modifiers containing multiple hydroxyl groups (-OH) without additional strong coordinating groups* **decrease Fe/Hf**.

- **Explanation**: Multiple hydroxyl groups can increase hydrophilicity and introduce steric hindrance, impeding effective coordination with Fe ions. Without other strong coordinating groups, these modifiers have a reduced ability to chelate Fe.

- **Examples**:
  - **Low Fe/Hf**:
    - *(2R,3S,4R,5R)-2,3,4,5,6-pentahydroxyhexanoic acid* (gluconic acid)
    - *2-[[1,3-dihydroxy-2-(hydroxymethyl)propan-2-yl]oxy]acetic acid* (multiple hydroxyl groups)
    - *5-formyl-2-hydroxybenzoic acid*
  - **Structural Features**:
    - Multiple hydroxyl groups
    - Lack of additional coordinating functionalities
- **Counter-Examples**:
  - **High Fe/Hf**:
    - *7-hydroxyheptanoic acid* (single terminal hydroxyl group, allowing effective coordination)
    - *Modifiers with hydroxyl groups adjacent to other strong coordinating groups*

---

**Rule 7**: *Modifiers containing fluorinated aliphatic chains or fluorinated functional groups* **decrease Fe/Hf**.

- **Explanation**: Fluorine's high electronegativity withdraws electron density from adjacent atoms, reducing their ability to coordinate with Fe ions. Fluorinated chains are also hydrophobic, which may hinder interactions with Fe ions in polar solvents.

- **Examples**:
  - **Low Fe/Hf**:
    - *2,2,3,3,4,4,5,5,5-nonafluoropentanoic acid* (perfluorinated chain)
    - *4-[(2,2,2-trifluoroacetyl)amino]butanoic acid* (trifluoromethyl group adjacent to amide)
  - **Structural Features**:
    - Presence of multiple fluorine atoms
    - Fluorinated functional groups
- **Counter-Examples**:
  - **High Fe/Hf**:
    - *Non-fluorinated analogs with coordinating groups*
    - *Modifiers without fluorinated substituents*

---

**Rule 8**: *Modifiers containing coordinating heterocycles (e.g., pyridine rings) directly attached to carboxylic acids* **increase Fe/Hf**.

- **Explanation**: Nitrogen atoms in heterocycles like pyridine can coordinate with Fe ions, forming strong metal-ligand bonds. When attached directly to the carboxyl group, these heterocycles provide multidentate coordination sites.

- **Examples**:
  - **High Fe/Hf**:
    - *4-pyridin-4-ylbenzoic acid* (pyridyl group at para position)
    - *4-pyridin-4-ylbutanoic acid* (pyridyl group attached to butanoic acid)
    - *(2S)-2-amino-3-phenylpropanoic acid* (phenylalanine; aromatic ring may assist in coordination indirectly)
  - **Structural Features**:
    - Heterocyclic nitrogen atoms
    - Proximity to carboxyl group
- **Counter-Examples**:
  - **Low Fe/Hf**:
    - *Pyridine-3-carboxylic acid* (nicotinic acid; position of nitrogen may not favor coordination)
    - *1H-pyrazole-4-carboxylic acid* (electronic factors may hinder effective coordination)

---

**Rule 9**: *Simple aliphatic carboxylic acids without additional coordinating functional groups* **decrease Fe/Hf**.

- **Explanation**: Without functional groups that can provide additional coordination sites (e.g., amino, hydroxyl, sulfur-containing groups), these modifiers have limited ability to form strong complexes with Fe ions, resulting in lower Fe incorporation.

- **Examples**:
  - **Low Fe/Hf**:
    - *Octanoic acid* (straight-chain fatty acid)
    - *4-oxoheptanedioic acid* (ketone group may not coordinate effectively)
  - **Structural Features**:
    - Aliphatic chain without coordinating substituents
- **Counter-Examples**:
  - **High Fe/Hf**:
    - *5-aminopentanoic acid* (terminal amino group)
    - *7-hydroxyheptanoic acid* (terminal hydroxyl group capable of coordination)

---

**Rule 10**: *Modifiers that are aliphatic carboxylic acids with omega-hydroxy groups (terminal hydroxyl groups) and suitable chain length* **increase Fe/Hf**.

- **Explanation**: Terminal hydroxyl groups can coordinate with Fe ions, and an optimal chain length allows the molecule to adopt conformations favorable for chelation. This enhances Fe binding and incorporation into the catalyst.

- **Examples**:
  - **High Fe/Hf**:
    - *7-hydroxyheptanoic acid* (seven-carbon chain with terminal hydroxyl and carboxyl groups)
  - **Structural Features**:
    - Linear aliphatic chain (6-8 carbons)
    - Carboxyl group at one end, hydroxyl group at the opposite end
- **Counter-Examples**:
  - **Low Fe/Hf**:
    - *Modifiers with internal hydroxyl groups or short chains leading to ineffective chelation*
    - *Compounds with multiple hydroxyl groups causing steric hindrance*

---

**Rule 11**: *Modifiers containing conjugated carbonyl groups adjacent to aromatic rings* **increase Fe/Hf**.

- **Explanation**: Conjugated carbonyl groups can delocalize electron density and facilitate coordination with Fe ions. The extended conjugation and carbonyl oxygen provide strong binding sites for Fe, enhancing metal-ligand interactions.

- **Examples**:
  - **High Fe/Hf**:
    - *1,3-dioxo-2-benzofuran-5-carboxylic acid* (conjugated lactone system with carboxyl group)
    - *4-(3,4-dimethoxyphenyl)-4-oxobutanoic acid* (keto group adjacent to aromatic ring)
  - **Structural Features**:
    - Aromatic ring conjugated with carbonyl or keto group
    - Carboxyl group available for coordination
- **Counter-Examples**:
  - **Low Fe/Hf**:
    - *Aromatic acids lacking conjugated carbonyl groups*
    - *Compounds where the carbonyl group is not favorably positioned for coordination*

---

**Rule 12**: *Modifiers that are amino acids with side chains containing thioether groups* **increase Fe/Hf**.

- **Explanation**: Amino acids like methionine have thioether groups in their side chains, which can coordinate with Fe ions through sulfur atoms. The amino and carboxyl groups of the amino acid backbone may also participate in coordination, enhancing Fe incorporation.

- **Examples**:
  - **High Fe/Hf**:
    - *2-[[(2S)-2-amino-4-methylsulfanylbutanoyl]amino]acetic acid* (methionine derivative)
  - **Structural Features**:
    - Thioether-containing side chain (–S–CH₃)
    - Amino acid backbone with coordinating amino and carboxyl groups
- **Counter-Examples**:
  - **Low Fe/Hf**:
    - *Amino acids without sulfur-containing side chains*
    - *Modifiers where coordinating groups are sterically hindered*

---

**Rule 13**: *Modifiers with sterically hindered functional groups near coordinating sites* **decrease Fe/Hf**.

- **Explanation**: Bulky substituents adjacent to potential coordination sites can impede the approach of Fe ions, reducing effective binding and incorporation into the catalyst.

- **Examples**:
  - **Low Fe/Hf**:
    - *2-oxo-1H-pyridine-4-carboxylic acid* (steric hindrance around nitrogen and carbonyl groups)
    - *2-[(4-hydroxybenzoyl)amino]acetic acid* (bulky aromatic group adjacent to amide linkage)
  - **Structural Features**:
    - Bulky groups near coordinating atoms
    - Steric hindrance preventing effective chelation
- **Counter-Examples**:
  - **High Fe/Hf**:
    - *Modifiers with minimal steric hindrance around coordinating groups*

---

**Rule 14**: *Modifiers that are aromatic carboxylic acids with meta-substituted coordinating groups* **decrease Fe/Hf**.

- **Explanation**: Substituents in the meta position are less effective at delocalizing electron density toward the coordinating carboxyl group compared to para-substituted groups. This positioning reduces the overall ability of the modifier to coordinate with Fe ions.

- **Examples**:
  - **Low Fe/Hf**:
    - *Pyridine-3-carboxylic acid* (nicotinic acid)
    - *5-formyl-2-hydroxybenzoic acid* (substituents in positions that do not favor coordination enhancement)
  - **Structural Features**:
    - Substituents at meta positions relative to the carboxyl group
    - Less effective in enhancing coordination
- **Counter-Examples**:
  - **High Fe/Hf**:
    - *4-pyridin-4-ylbenzoic acid* (para-substituted pyridyl group)
    - *Modifiers with para-substituted coordinating groups

---

**Rule 15**: *Modifiers containing rigid cyclic structures without coordinating heteroatoms* **decrease Fe/Hf**.

- **Explanation**: Rigid ring systems lacking coordinating heteroatoms or functional groups cannot effectively interact with Fe ions. The absence of flexible coordinating sites leads to lower Fe incorporation.

- **Examples**:
  - **Low Fe/Hf**:
    - *1H-pyrazole-4-carboxylic acid* (rigid heterocycle with limited coordination ability)
    - *Modifiers with saturated rings and no coordinating substituents*
  - **Structural Features**:
    - Cyclic structures without nitrogen, oxygen, or sulfur capable of coordination
- **Counter-Examples**:
  - **High Fe/Hf**:
    - *Modifiers containing heterocycles with coordinating nitrogen atoms directly linked to the carboxyl group*

---

**End of Rules**

---

These rules have been formulated by analyzing the provided dataset and considering the underlying physicochemical properties that govern coordination chemistry with Fe ions. By focusing on combinations of functional groups and structural features, the rules aim to predict whether a molecular modifier will increase or decrease the Fe/Hf ratio in the catalyst.

- **Direct Combination of Substructures**: Each rule combines multiple substructures, such as functional groups and molecular frameworks, to provide a nuanced understanding of how modifiers interact with Fe ions.
- **Physicochemical Considerations**: The rules are grounded in principles of coordination chemistry, including the effects of electron-donating and electron-withdrawing groups, chelation, steric hindrance, and the nature of coordinating atoms (e.g., nitrogen, oxygen, sulfur).
- **Coverage and Balance**: A total of 15 rules have been provided to balance simplicity and complexity, ensuring broad coverage of the dataset while maintaining specificity.
- **Clear Predictions**: Each rule makes unambiguous predictions about the Fe/Hf ratio for any modifier fitting the described criteria, aiding in the rational design and selection of modifiers for optimizing catalyst performance.

By applying these rules, researchers can predict the impact of potential modifiers on the Fe/Hf ratio and, consequently, on the yield and efficiency of the radical-mediated remote δ-C(sp³)–H bond functionalization reaction.---------------------------------------------------------------


    Current_Matrix:
    Matrix Generator Message:
Rule 1,Rule 2,Rule 3,Rule 4,Rule 5,Rule 6,Rule 7,Rule 8,Rule 9,Rule 10
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0

---------------------------------------------------------------


    Train Accuracy: 0.5142857142857142; Test Accuracy: 0.0
    Train Support: 0.0; Test Support: 0.0
    Train Confidence: 0.5; Test Confidence: 0.5
    Train Lift: 1.0; Test Lift: NONE
    Train Leverage: 0.0; Test Leverage: NONE
    ----------------------------------------------------------------------------------

    Current Rule Code:
def rule2matrix(smiles_list):
    # Define the rules with their associated patterns and predictions
    rules = [
        {
            'number': 1,
            'description': 'Modifiers that are omega-amino aliphatic carboxylic acids',
            'patterns': [
                [r'[NX3H2][CH2]{3,6}[CX3](=O)[OX1H1]']  # Chain lengths of 4 to 7
            ],
            'prediction': 1
        },
        {
            'number': 2,
            'description': 'Modifiers that are aromatic carboxylic acids with para-substituted EWGs capable of coordination',
            'patterns': [
                [r'[c][CX3](=O)[OX1H1]'],  # Aromatic carboxylic acid
                [r'[c][NX3](=O)[OX1]', r'[c][CH2][Br]', r'[c][n]1cccc1']  # Nitro, bromomethyl, pyridyl
            ],
            'prediction': 1
        },
        {
            'number': 3,
            'description': 'Modifiers containing sulfur functional groups such as thiols (-SH) or thioethers (-S-)',
            'patterns': [
                [r'[CX3](=O)[OX1H1]'],  # Carboxylic acid
                [r'[SX2H]', r'[SX2][#6]']  # Thiol or thioether group
            ],
            'prediction': 1
        },
        {
            'number': 4,
            'description': 'Modifiers that are aliphatic carboxylic acids containing polyether chains terminated with coordinating groups',
            'patterns': [
                [r'[CX3](=O)[OX1H1]'],  # Carboxylic acid
                [r'([#6][OX2]){2,}[#6]']  # Polyether chain (at least two ether linkages)
            ],
            'prediction': 1
        },
        {
            'number': 5,
            'description': 'Modifiers that are aromatic carboxylic acids with para-substituted electron-donating groups',
            'patterns': [
                [r'[c][CX3](=O)[OX1H1]'],  # Aromatic carboxylic acid
                [r'[c][NX3H2]', r'[c][OX2H]', r'[c][OX2][CH3]', r'[c][CH3]']  # EDGs on aromatic ring
            ],
            'prediction': -1
        },
        {
            'number': 6,
            'description': 'Modifiers containing multiple hydroxyl groups (-OH) without additional strong coordinating groups',
            'patterns': [
                [r'[OX2H]']  # Hydroxyl group
            ],
            'count_threshold': {'[OX2H]': 2},
            'prediction': -1
        },
        {
            'number': 7,
            'description': 'Modifiers containing fluorinated aliphatic chains or fluorinated functional groups',
            'patterns': [
                [r'[F]']  # Fluorine atoms
            ],
            'count_threshold': {'[F]': 2},
            'prediction': -1
        },
        {
            'number': 8,
            'description': 'Modifiers containing coordinating heterocycles (e.g., pyridine rings) directly attached to carboxylic acids',
            'patterns': [
                [r'[c][n][c]'],  # Pyridine-like pattern
                [r'[CX3](=O)[OX1H1]']  # Carboxylic acid
            ],
            'prediction': 1
        },
        {
            'number': 9,
            'description': 'Simple aliphatic carboxylic acids without additional coordinating functional groups',
            'patterns': [
                [r'[CX3](=O)[OX1H1]']  # Carboxylic acid
            ],
            'exclude_patterns': [
                [r'[NX3]', r'[OX2H]', r'[SX2]', r'[F,Cl,Br,I]']  # Exclude amines, hydroxyls, sulfurs, halogens
            ],
            'prediction': -1
        },
        {
            'number': 10,
            'description': 'Modifiers that are aliphatic carboxylic acids with omega-hydroxy groups',
            'patterns': [
                [r'[OX2H][CH2]{3,6}[CX3](=O)[OX1H1]']  # Terminal hydroxyl opposite to carboxylic acid
            ],
            'prediction': 1
        },
        # Additional rules can be added following the same structure
    ]
    
    # Compile SMARTS patterns
    for rule in rules:
        compiled_patterns = []
        for group in rule.get('patterns', []):
            compiled_group = [Chem.MolFromSmarts(p) for p in group]
            compiled_patterns.append(compiled_group)
        rule['compiled_patterns'] = compiled_patterns
        # Compile exclude patterns if any
        if 'exclude_patterns' in rule:
            compiled_excludes = []
            for group in rule['exclude_patterns']:
                compiled_group = [Chem.MolFromSmarts(p) for p in group]
                compiled_excludes.append(compiled_group)
            rule['compiled_exclude_patterns'] = compiled_excludes
    
    # Initialize results list
    results = []
    
    # Process each SMILES string
    for smi in smiles_list:
        mol = Chem.MolFromSmiles(smi)
        if mol is None:
            # If the molecule cannot be parsed, append a row of zeros
            results.append([0]*len(rules))
            continue
        row = []
        for rule in rules:
            try:
                match = True
                # Check exclude patterns if any
                if 'exclude_patterns' in rule:
                    for group in rule['compiled_exclude_patterns']:
                        for pat in group:
                            if mol.HasSubstructMatch(pat):
                                match = False
                                break
                        if not match:
                            break
                    if not match:
                        row.append(0)
                        continue
                # Check required patterns
                for idx, compiled_group in enumerate(rule['compiled_patterns']):
                    group_match = False
                    for pat in compiled_group:
                        matches = mol.GetSubstructMatches(pat)
                        if matches:
                            # If a count threshold is specified for this pattern
                            if 'count_threshold' in rule and pat.GetSmarts() in rule['count_threshold']:
                                threshold = rule['count_threshold'][pat.GetSmarts()]
                                if len(matches) >= threshold:
                                    group_match = True
                                    break
                            else:
                                group_match = True
                                break
                    if not group_match:
                        match = False
                        break
                if match:
                    row.append(rule['prediction'])
                else:
                    row.append(0)
            except Exception as e:
                # In case of any error, append 0
                row.append(0)
        results.append(row)
    # Create DataFrame with results
    df = pd.DataFrame(results, columns=[f'Rule {rule["number"]}' for rule in rules])
    return df

--------------------------------------------------
    Target Name: Fe/Hf
    GPT Model: o1-preview-2024-09-12
    ML Model: ETC
    Current_Rules:
    **Start of Rules**

---

**Rule 1**: *Modifiers that are linear aliphatic carboxylic acids with a terminal primary amino group at the omega (ω) position* **increase Fe/Hf** (**Fe/Hf_high_or_low_value == True**).

- **Explanation**: The combination of a carboxyl group at one end and a primary amino group at the other allows the molecule to act as a bidentate ligand, chelating Fe ions effectively. This enhances the incorporation of Fe into the catalyst.

- **Examples**:
  - **High Fe/Hf**:
    - **5-aminopentanoic acid**
    - **7-aminoheptanoic acid**
    - **8-aminooctanoic acid**
  - **Structural Features**:
    - Linear aliphatic chain (5–8 carbons)
    - Carboxyl group at the α-position
    - Primary amino group at the ω-position
- **Counter-Examples**:
  - **Low Fe/Hf**:
    - **Octanoic acid** (lacks amino group)
    - **(2S)-2-aminopentanedioic acid** (amino group is at the α-position)

---

**Rule 2**: *Modifiers that are aromatic carboxylic acids with a para-substituted electron-withdrawing group capable of coordination* (e.g., nitro (-NO₂), bromomethyl (-CH₂Br), pyridyl rings) **increase Fe/Hf**.

- **Explanation**: Electron-withdrawing groups increase the acidity of the carboxylic acid, facilitating deprotonation and coordination with Fe ions. Additional coordinating sites (e.g., nitrogen in pyridine) enhance Fe binding.

- **Examples**:
  - **High Fe/Hf**:
    - **4-nitrobenzoic acid**
    - **4-(bromomethyl)benzoic acid**
    - **4-pyridin-4-ylbenzoic acid**
  - **Structural Features**:
    - Benzoic acid core
    - Electron-withdrawing group at the para position
    - Additional coordination site (if applicable)
- **Counter-Examples**:
  - **Low Fe/Hf**:
    - **4-methylbenzoic acid** (methyl group is electron-donating)
    - **4-aminobenzoic acid** (amino group is electron-donating)

---

**Rule 3**: *Modifiers containing sulfur functional groups such as thiols (-SH) or thioethers (-S-)* **increase Fe/Hf**.

- **Explanation**: Sulfur atoms are good soft-base ligands for transition metals like Fe. The presence of sulfur enhances coordination through strong metal-sulfur interactions, leading to increased Fe incorporation.

- **Examples**:
  - **High Fe/Hf**:
    - **4-sulfanylbenzoic acid**
    - **3-sulfanylpropanoic acid**
    - **2-[[(2S)-2-amino-4-methylsulfanylbutanoyl]amino]acetic acid**
  - **Structural Features**:
    - Sulfur-containing functional group near the carboxyl group
- **Counter-Examples**:
  - **Low Fe/Hf**:
    - **Octanoic acid** (no sulfur groups)
    - **Benzoic acid** (lacks sulfur-containing substituents)

---

**Rule 4**: *Modifiers that are polyether carboxylic acids with terminal coordinating groups* (e.g., carboxyl (-COOH), amino (-NH₂)) **increase Fe/Hf**.

- **Explanation**: Polyether chains provide flexibility and multiple ether oxygen atoms, which can coordinate with Fe ions. Terminal coordinating groups enhance this effect, leading to stronger metal-ligand interactions.

- **Examples**:
  - **High Fe/Hf**:
    - **2-[2-(2-methoxyethoxy)ethoxy]acetic acid**
    - **3-[2-(2-aminoethoxy)ethoxy]propanoic acid**
  - **Structural Features**:
    - Polyether chain (ethylene glycol units)
    - Terminal carboxyl or amino group
- **Counter-Examples**:
  - **Low Fe/Hf**:
    - **Modifiers lacking terminal coordinating groups**
    - **Modifiers without polyether chains**

---

**Rule 5**: *Modifiers that are aromatic carboxylic acids with para-substituted electron-donating groups* (e.g., amino (-NH₂), hydroxyl (-OH), methyl (-CH₃)) **decrease Fe/Hf** (**Fe/Hf_high_or_low_value == False**).

- **Explanation**: Electron-donating groups decrease the acidity of the carboxylic acid, hindering deprotonation and coordination with Fe ions. This reduces the modifier's ability to chelate Fe.

- **Examples**:
  - **Low Fe/Hf**:
    - **4-aminobenzoic acid**
    - **4-methylbenzoic acid**
    - **4-hydroxybenzoic acid** (part of **2-[(4-hydroxybenzoyl)amino]acetic acid**)
  - **Structural Features**:
    - Benzoic acid core
    - Electron-donating group at the para position
- **Counter-Examples**:
  - **High Fe/Hf**:
    - **4-nitrobenzoic acid** (electron-withdrawing group)

---

**Rule 6**: *Modifiers that are aliphatic carboxylic acids without additional coordinating functional groups* **decrease Fe/Hf**.

- **Explanation**: Without functional groups providing additional coordination sites, these modifiers have limited ability to form strong complexes with Fe ions, resulting in lower Fe incorporation.

- **Examples**:
  - **Low Fe/Hf**:
    - **Octanoic acid**
    - **4-oxoheptanedioic acid**
  - **Structural Features**:
    - Linear aliphatic chain
    - Only carboxyl group for coordination
- **Counter-Examples**:
  - **High Fe/Hf**:
    - **5-aminopentanoic acid** (additional amino group)
    - **7-hydroxyheptanoic acid** (additional hydroxyl group)

---

**Rule 7**: *Modifiers containing multiple hydroxyl groups (-OH) without strong coordinating groups* **decrease Fe/Hf**.

- **Explanation**: Multiple hydroxyl groups can increase hydrophilicity and steric hindrance, impeding effective coordination with Fe ions. Without strong coordinating groups like amino or sulfur, these modifiers are less effective.

- **Examples**:
  - **Low Fe/Hf**:
    - **(2R,3S,4R,5R)-2,3,4,5,6-pentahydroxyhexanoic acid** (gluconic acid)
    - **2-[[1,3-dihydroxy-2-(hydroxymethyl)propan-2-yl]oxy]acetic acid**
  - **Structural Features**:
    - Multiple hydroxyl groups
    - Lack of other coordinating functionalities
- **Counter-Examples**:
  - **High Fe/Hf**:
    - **Modifiers with hydroxyl groups and additional coordinating groups**

---

**Rule 8**: *Modifiers containing coordinating heterocyclic nitrogen atoms adjacent to the carboxyl group* **increase Fe/Hf**.

- **Explanation**: Nitrogen atoms in heterocycles (e.g., pyridine) can coordinate with Fe ions. When adjacent to the carboxyl group, they enhance chelation, increasing Fe incorporation.

- **Examples**:
  - **High Fe/Hf**:
    - **4-pyridin-4-ylbenzoic acid**
    - **4-pyridin-4-ylbutanoic acid**
  - **Structural Features**:
    - Heterocyclic nitrogen atom
    - Proximity to carboxyl group
- **Counter-Examples**:
  - **Low Fe/Hf**:
    - **Pyridine-3-carboxylic acid** (less favorable positioning of nitrogen)

---

**Rule 9**: *Modifiers with perfluorinated aliphatic chains* **decrease Fe/Hf**.

- **Explanation**: Fluorine's high electronegativity withdraws electron density, reducing coordination ability. Perfluorinated chains are also hydrophobic, hindering interactions with Fe ions in polar environments.

- **Examples**:
  - **Low Fe/Hf**:
    - **2,2,3,3,4,4,5,5,5-nonafluoropentanoic acid**
  - **Structural Features**:
    - Perfluorinated chain
- **Counter-Examples**:
  - **High Fe/Hf**:
    - **Non-fluorinated analogs with coordinating groups**

---

**Rule 10**: *Modifiers containing conjugated carbonyl groups adjacent to aromatic rings* **increase Fe/Hf**.

- **Explanation**: Conjugated systems can delocalize electron density, facilitating coordination with Fe ions. The carbonyl oxygen serves as a strong ligand.

- **Examples**:
  - **High Fe/Hf**:
    - **1,3-dioxo-2-benzofuran-5-carboxylic acid**
    - **4-(3,4-dimethoxyphenyl)-4-oxobutanoic acid**
  - **Structural Features**:
    - Conjugated carbonyl group
    - Aromatic ring
- **Counter-Examples**:
  - **Low Fe/Hf**:
    - **Aromatic acids without conjugated carbonyl groups**

---

**Rule 11**: *Modifiers with sterically hindered functional groups near coordinating sites* **decrease Fe/Hf**.

- **Explanation**: Bulky groups near coordination sites hinder Fe ion access, reducing effective binding.

- **Examples**:
  - **Low Fe/Hf**:
    - **2-oxo-1H-pyridine-4-carboxylic acid**
    - **2-[(4-hydroxybenzoyl)amino]acetic acid**
  - **Structural Features**:
    - Bulky substituents adjacent to ligating atoms
- **Counter-Examples**:
  - **High Fe/Hf**:
    - **Modifiers with minimal steric hindrance**

---

**Rule 12**: *Modifiers that are amino acids with side chains capable of coordinating through sulfur or nitrogen* **increase Fe/Hf**.

- **Explanation**: Amino acids like methionine or lysine can coordinate with Fe through side-chain functionalities, enhancing Fe incorporation.

- **Examples**:
  - **High Fe/Hf**:
    - **(2S)-2-amino-3-phenylpropanoic acid** (phenylalanine, aromatic side chain)
    - **(2S)-6-acetamido-2-aminohexanoic acid** (modified lysine derivative)
  - **Structural Features**:
    - Amino acid backbone
    - Coordinating side chain
- **Counter-Examples**:
  - **Low Fe/Hf**:
    - **Amino acids with non-coordinating side chains**

---

**Rule 13**: *Modifiers containing multiple carboxyl groups that can cause complexation issues* **decrease Fe/Hf**.

- **Explanation**: Multiple carboxyl groups may lead to complex structures that hinder effective Fe coordination due to intramolecular interactions or polymerization.

- **Examples**:
  - **Low Fe/Hf**:
    - **(2S)-2-aminopentanedioic acid** (glutamic acid)
    - **(2S)-2-aminobutanedioic acid** (aspartic acid)
  - **Structural Features**:
    - Multiple carboxyl groups
- **Counter-Examples**:
  - **High Fe/Hf**:
    - **Modifiers with single carboxyl groups**

---

**Rule 14**: *Modifiers with terminal aldehyde groups adjacent to hydroxyl groups* **decrease Fe/Hf**.

- **Explanation**: Aldehyde and hydroxyl groups may undergo side reactions or form intramolecular bonds, reducing availability for Fe coordination.

- **Examples**:
  - **Low Fe/Hf**:
    - **5-formyl-2-hydroxybenzoic acid**
    - **4-formylbenzoic acid**
  - **Structural Features**:
    - Aldehyde group
    - Adjacent hydroxyl (if applicable)
- **Counter-Examples**:
  - **High Fe/Hf**:
    - **Modifiers without reactive aldehyde groups**

---

**Rule 15**: *Modifiers containing rigid heterocyclic structures without coordinating atoms* **decrease Fe/Hf**.

- **Explanation**: Rigid structures lacking coordinating heteroatoms offer limited interaction with Fe ions.

- **Examples**:
  - **Low Fe/Hf**:
    - **1H-pyrazole-4-carboxylic acid**
  - **Structural Features**:
    - Heterocycles without coordinating atoms
- **Counter-Examples**:
  - **High Fe/Hf**:
    - **Heterocycles with coordinating nitrogen atoms**

---

**End of Rules**

---

These rules have been developed by analyzing the provided dataset and considering the underlying physicochemical properties affecting Fe coordination. Each rule combines functional groups and structural motifs to predict whether a modifier will increase or decrease the Fe/Hf ratio.

- **Direct Combination of Substructures**: The rules focus on combinations of functional groups (e.g., carboxyl groups with amino, sulfur, or ether groups) and structural features (e.g., chain length, aromatic rings, heterocycles).

- **Physicochemical Considerations**: The explanations are based on principles such as electron donation/withdrawal, chelation ability, steric hindrance, and the nature of coordinating atoms.

- **Coverage and Balance**: With 15 rules, there's a balance between broad coverage (rules applying to multiple modifiers) and specificity (rules targeting particular structural features).

- **Clear Predictions**: Each rule unambiguously predicts the Fe/Hf outcome for modifiers fitting the criteria.

By applying these rules, researchers can predict the impact of new modifiers on Fe incorporation, aiding in the design of catalysts with optimized performance for the radical-mediated remote δ-C(sp³)–H bond functionalization reaction.---------------------------------------------------------------


    Current_Matrix:
    Matrix Generator Message:
Rule 1,Rule 2,Rule 3,Rule 4,Rule 5,Rule 6,Rule 7,Rule 8,Rule 9,Rule 10,Rule 11,Rule 12,Rule 13,Rule 14,Rule 15
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,-1,0,0,0,0,0,-1,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1
0,0,0,0,0,0,-1,0,0,0,0,0,-1,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1
0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,-1,0,0,0,-1,0,0,0,0
0,0,0,0,0,0,-1,0,0,0,0,0,0,0,-1
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,-1,-1,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,-1,0,0,0,0,0,0,0,-1
0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1
0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1
0,0,0,0,0,0,-1,0,0,0,0,0,0,0,-1
0,0,0,0,0,-1,-1,0,0,0,0,0,-1,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,-1,-1,0,0,0,0,0,0,0,0
0,0,0,0,0,0,-1,0,0,0,0,0,0,0,-1
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0

---------------------------------------------------------------


    Train Accuracy: 0.7142857142857143; Test Accuracy: 0.0
    Train Support: 0.15714285714285714; Test Support: 0.0
    Train Confidence: 0.775; Test Confidence: 0.5
    Train Lift: 1.5955882352941175; Test Lift: NONE
    Train Leverage: 0.06; Test Leverage: NONE
    ----------------------------------------------------------------------------------

    Current Rule Code:
def rule2matrix(smiles_list):
    # Define SMARTS patterns for functional groups
    carboxylic_acid = '[CX3](=O)[OX2H1]'
    primary_amino_group = '[NH2]'
    primary_aliphatic_amine = '[NX3H2][CX4]'
    primary_aromatic_amine = '[NX3H2][c]'
    thiol = '[SX2H]'
    thioether = '[SX2]([#6])[#6]'
    ether_linkage = '[#6][OX2][#6]'
    pyridine_ring = 'n1ccccc1'
    halogen_on_aromatic = '[c][F,Cl,Br,I]'
    nitro_group_on_aromatic = '[c][NX3+](=O)[O-]'
    methyl_on_aromatic = '[c][CH3]'
    hydroxyl_group = '[OX2H]'
    hydroxyl_on_aromatic = '[c][OX2H]'
    aldehyde_group = '[CX3H1](=O)'
    amino_acid_backbone = '[NX3H2][CX4][CX3](=O)[OX2H1]'
    perfluoroalkyl = '[CX4](F)(F)F'
    conjugated_carbonyl = '[c][C]=[O]'
    multiple_carboxylic_acids = '[CX3](=O)[OX2H1]'
    # Define the rules with their associated patterns and predictions
    rules = [
        {
            'number': 1,
            'description': 'Linear aliphatic carboxylic acids with terminal primary amino group at the omega (ω) position (increase Fe/Hf)',
            'patterns': [
                '[CX3](=O)[OX2H1][CH2]{3,6}[NH2]'
            ],
            'prediction': 1
        },
        {
            'number': 2,
            'description': 'Aromatic carboxylic acids with para-substituted electron-withdrawing groups capable of coordination (increase Fe/Hf)',
            'patterns': [
                '[c][C](=O)[OX2H1]',  # Aromatic carboxylic acid
                '[$(c1ccc(cc1)[N+](=O)[O-])]',  # Para-substituted nitro group
                '[$(c1ccc(cc1)CBr)]',  # Para-substituted bromomethyl group
                '[$(c1ccc(cc1)-c2ccncc2)]'  # Para-substituted pyridyl ring
            ],
            'prediction': 1
        },
        {
            'number': 3,
            'description': 'Modifiers containing sulfur functional groups such as thiols (-SH) or thioethers (-S-) (increase Fe/Hf)',
            'patterns': [
                carboxylic_acid,
                '[SX2H]',  # Thiol group
                '[SX2]([#6])[#6]'  # Thioether group
            ],
            'prediction': 1
        },
        {
            'number': 4,
            'description': 'Polyether carboxylic acids with terminal coordinating groups (increase Fe/Hf)',
            'patterns': [
                '[#6][OX2][#6]',  # Ether linkage
                carboxylic_acid,
                '[NX3H2]',  # Amino group
                '[NX3H1]'  # Secondary amine
            ],
            'prediction': 1
        },
        {
            'number': 5,
            'description': 'Aromatic carboxylic acids with para-substituted electron-donating groups (decrease Fe/Hf)',
            'patterns': [
                '[c][C](=O)[OX2H1]',  # Aromatic carboxylic acid
                '[$(c1ccc(cc1)[NH2])]',  # Para-substituted amino group
                '[$(c1ccc(cc1)[OX2H])]',  # Para-substituted hydroxyl group
                '[$(c1ccc(cc1)C)]'  # Para-substituted methyl group
            ],
            'prediction': -1
        },
        {
            'number': 6,
            'description': 'Aliphatic carboxylic acids without additional coordinating functional groups (decrease Fe/Hf)',
            'patterns': [
                carboxylic_acid
            ],
            'exclude_patterns': [
                '[NX3]',  # Exclude amines
                '[SX2]',  # Exclude sulfur groups
                '[#6][OX2][#6]',  # Exclude ethers
                '[F,Cl,Br,I]',  # Exclude halogens
                '[a]'  # Exclude aromatic atoms
            ],
            'prediction': -1
        },
        {
            'number': 7,
            'description': 'Modifiers containing multiple hydroxyl groups (-OH) without strong coordinating groups (decrease Fe/Hf)',
            'patterns': [
                carboxylic_acid,
                hydroxyl_group
            ],
            'count_threshold': {'[OX2H]': 2},  # At least 2 hydroxyl groups
            'exclude_patterns': [],
            'prediction': -1
        },
        {
            'number': 8,
            'description': 'Modifiers containing coordinating heterocyclic nitrogen atoms adjacent to the carboxyl group (increase Fe/Hf)',
            'patterns': [
                'n[c][C](=O)[OX2H1]'  # Nitrogen in heterocyclic ring adjacent to carboxylic acid
            ],
            'prediction': 1
        },
        {
            'number': 9,
            'description': 'Modifiers with perfluorinated aliphatic chains (decrease Fe/Hf)',
            'patterns': [
                '[CX4](F)(F)F',  # Trifluoromethyl group
                '[CF2]'
            ],
            'prediction': -1
        },
        {
            'number': 10,
            'description': 'Modifiers containing conjugated carbonyl groups adjacent to aromatic rings (increase Fe/Hf)',
            'patterns': [
                '[c][C](=O)[c]'  # Conjugated carbonyl adjacent to aromatic ring
            ],
            'prediction': 1
        },
        {
            'number': 11,
            'description': 'Modifiers with sterically hindered functional groups near coordinating sites (decrease Fe/Hf)',
            'patterns': [
                carboxylic_acid,
                '[$([CX4](C)(C)C)]'  # Tertiary carbon (C with three methyl groups)
            ],
            'prediction': -1
        },
        {
            'number': 12,
            'description': 'Amino acids with side chains capable of coordinating through sulfur or nitrogen (increase Fe/Hf)',
            'patterns': [
                amino_acid_backbone,
                '[NX3]',  # Side chain nitrogen
                '[SX2]'  # Side chain sulfur
            ],
            'prediction': 1
        },
        {
            'number': 13,
            'description': 'Modifiers containing multiple carboxyl groups that can cause complexation issues (decrease Fe/Hf)',
            'patterns': [
                carboxylic_acid
            ],
            'count_threshold': {'[CX3](=O)[OX2H1]': 2},  # At least 2 carboxylic acid groups
            'prediction': -1
        },
        {
            'number': 14,
            'description': 'Modifiers with terminal aldehyde groups adjacent to hydroxyl groups (decrease Fe/Hf)',
            'patterns': [
                '[OX2H][CX4][CX3H1](=O)'  # Hydroxyl group adjacent to aldehyde
            ],
            'prediction': -1
        },
        {
            'number': 15,
            'description': 'Modifiers containing rigid heterocyclic structures without coordinating atoms (decrease Fe/Hf)',
            'patterns': [
                '[r5,r6;$([#6]),$([#7])]'  # Heterocyclic rings of 5 or 6 atoms without O or S
            ],
            'exclude_patterns': [
                '[n]',  # Exclude nitrogen-containing heterocycles
                '[o]',  # Exclude oxygen-containing heterocycles
                '[s]'   # Exclude sulfur-containing heterocycles
            ],
            'prediction': -1
        }
    ]
    # Compile SMARTS patterns
    for rule in rules:
        compiled_patterns = []
        for pat in rule.get('patterns', []):
            compiled_patterns.append(Chem.MolFromSmarts(pat))
        rule['compiled_patterns'] = compiled_patterns
        # Compile exclude patterns if any
        if 'exclude_patterns' in rule:
            compiled_excludes = []
            for pat in rule['exclude_patterns']:
                compiled_excludes.append(Chem.MolFromSmarts(pat))
            rule['compiled_exclude_patterns'] = compiled_excludes
        else:
            rule['compiled_exclude_patterns'] = []
    # Initialize results list
    results = []
    # Process each SMILES string
    for smi in smiles_list:
        mol = Chem.MolFromSmiles(smi)
        if mol is None:
            # If the molecule cannot be parsed, append a row of zeros
            results.append([0]*len(rules))
            continue
        row = []
        for rule in rules:
            try:
                match = True
                # Check exclude patterns if any
                for epat in rule.get('compiled_exclude_patterns', []):
                    if mol.HasSubstructMatch(epat):
                        match = False
                        break
                if not match:
                    row.append(0)
                    continue
                # Check required patterns
                for pat in rule['compiled_patterns']:
                    if not mol.HasSubstructMatch(pat):
                        match = False
                        break
                if not match:
                    row.append(0)
                    continue
                # Check count thresholds if any
                if 'count_threshold' in rule:
                    for pat_str, threshold in rule['count_threshold'].items():
                        pat = Chem.MolFromSmarts(pat_str)
                        matches = mol.GetSubstructMatches(pat)
                        if len(matches) < threshold:
                            match = False
                            break
                if match:
                    row.append(rule['prediction'])
                else:
                    row.append(0)
            except Exception as e:
                # In case of any error, append 0 and optionally log the error
                row.append(0)
        results.append(row)
    # Create DataFrame with results
    df = pd.DataFrame(results, columns=[f'Rule {rule['number']}' for rule in rules])
    return df

--------------------------------------------------
    Target Name: Fe/Hf
    GPT Model: o1-preview-2024-09-12
    ML Model: ETC
    Current_Rules:
    **Start of Rules**

---

**Rule 1**: *Modifiers that are linear aliphatic carboxylic acids with a terminal primary amino group at the omega (ω) position* **increase Fe/Hf**.

- **Explanation**: The presence of a carboxyl group at one end and a primary amino group at the other allows the molecule to act as a bidentate ligand, effectively chelating Fe ions and enhancing their incorporation into the catalyst.

- **Examples**:
  - **High Fe/Hf**:
    - **5-aminopentanoic acid**
    - **7-aminoheptanoic acid**
    - **8-aminooctanoic acid**
  - **Structural Features**:
    - Linear aliphatic chain (5–8 carbons)
    - Carboxyl group at the α-position
    - Primary amino group at the ω-position

- **Counter-Examples**:
  - **Low Fe/Hf**:
    - **Octanoic acid** (lacks amino group)
    - **(2S)-2-aminopentanedioic acid** (amino group is at the α-position; multiple carboxyl groups may interfere with coordination)

---

**Rule 2**: *Modifiers that are aromatic carboxylic acids with a para-substituted electron-withdrawing group* (e.g., nitro (-NO₂), bromomethyl (-CH₂Br)) **increase Fe/Hf**.

- **Explanation**: Electron-withdrawing groups increase the acidity of the carboxylic acid, facilitating deprotonation and coordination with Fe ions. This enhances the ligand's ability to bind Fe.

- **Examples**:
  - **High Fe/Hf**:
    - **4-nitrobenzoic acid**
    - **4-(bromomethyl)benzoic acid**
  - **Structural Features**:
    - Benzoic acid core
    - Electron-withdrawing group at the para position

- **Counter-Examples**:
  - **Low Fe/Hf**:
    - **4-methylbenzoic acid** (methyl group is electron-donating)
    - **4-aminobenzoic acid** (amino group is electron-donating)

---

**Rule 3**: *Modifiers containing sulfur functional groups such as thiols (-SH) or thioethers (-S-)* **increase Fe/Hf**.

- **Explanation**: Sulfur atoms act as soft Lewis bases and coordinate strongly with transition metals like Fe, enhancing metal-ligand interactions and Fe incorporation.

- **Examples**:
  - **High Fe/Hf**:
    - **4-sulfanylbenzoic acid**
    - **3-sulfanylpropanoic acid**
    - **2-[[(2S)-2-amino-4-methylsulfanylbutanoyl]amino]acetic acid**
  - **Structural Features**:
    - Sulfur-containing group near the carboxyl group
    - Potential for bidentate coordination

- **Counter-Examples**:
  - **Low Fe/Hf**:
    - **Octanoic acid** (lacks sulfur functionality)

---

**Rule 4**: *Modifiers containing heteroaromatic rings with coordinating nitrogen atoms adjacent to the carboxyl group* **increase Fe/Hf**.

- **Explanation**: Nitrogen atoms in heterocyclic rings (e.g., pyridine) can coordinate with Fe ions. When adjacent to the carboxyl group, they facilitate chelation, increasing Fe incorporation.

- **Examples**:
  - **High Fe/Hf**:
    - **4-pyridin-4-ylbenzoic acid**
    - **4-pyridin-4-ylbutanoic acid**
  - **Structural Features**:
    - Heteroaromatic ring with nitrogen
    - Proximity to carboxyl group

- **Counter-Examples**:
  - **Low Fe/Hf**:
    - **Pyridine-3-carboxylic acid** (nitrogen position less favorable for coordination)

---

**Rule 5**: *Modifiers with multiple hydroxyl groups and lacking strong coordinating functionalities* **decrease Fe/Hf**.

- **Explanation**: Multiple hydroxyl groups increase hydrophilicity and can create steric hindrance, reducing effective coordination with Fe ions.

- **Examples**:
  - **Low Fe/Hf**:
    - **(2R,3S,4R,5R)-2,3,4,5,6-pentahydroxyhexanoic acid**
  - **Structural Features**:
    - Abundance of hydroxyl groups
    - Lack of additional strong coordinating groups

---

**Rule 6**: *Modifiers containing aldehyde (formyl) groups adjacent to aromatic rings* **decrease Fe/Hf**.

- **Explanation**: Aldehyde groups can participate in side reactions and may reduce the availability of coordination sites, decreasing Fe incorporation.

- **Examples**:
  - **Low Fe/Hf**:
    - **4-formylbenzoic acid**
    - **5-formyl-2-hydroxybenzoic acid**
  - **Structural Features**:
    - Aldehyde group near the carboxyl group
    - Potential for intramolecular interactions

---

**Rule 7**: *Modifiers that are aliphatic carboxylic acids without additional coordinating functional groups* **decrease Fe/Hf**.

- **Explanation**: Lack of additional coordination sites beyond the carboxyl group results in weaker interactions with Fe ions.

- **Examples**:
  - **Low Fe/Hf**:
    - **Octanoic acid**
    - **4-oxoheptanedioic acid**
  - **Structural Features**:
    - Linear aliphatic chain
    - Only carboxyl groups present

---

**Rule 8**: *Modifiers that are aromatic carboxylic acids with para-substituted electron-donating groups* (e.g., amino (-NH₂), methyl (-CH₃), hydroxyl (-OH)) **decrease Fe/Hf**.

- **Explanation**: Electron-donating groups reduce the acidity of the carboxylic acid, hindering deprotonation and coordination with Fe ions, thus decreasing Fe incorporation.

- **Examples**:
  - **Low Fe/Hf**:
    - **4-aminobenzoic acid**
    - **4-methylbenzoic acid**
    - **2-[(4-hydroxybenzoyl)amino]acetic acid** (contains hydroxyl group)
  - **Structural Features**:
    - Benzoic acid core
    - Electron-donating group at the para position

- **Counter-Examples**:
  - **High Fe/Hf**:
    - **4-nitrobenzoic acid** (electron-withdrawing group)

---

**Rule 9**: *Modifiers with perfluorinated aliphatic chains* **decrease Fe/Hf**.

- **Explanation**: The strong electron-withdrawing nature of fluorine atoms reduces the electron density on coordinating sites, diminishing Fe binding ability. Additionally, fluorinated chains are hydrophobic, hindering interactions in polar environments.

- **Examples**:
  - **Low Fe/Hf**:
    - **2,2,3,3,4,4,5,5,5-nonafluoropentanoic acid**
  - **Structural Features**:
    - Perfluorinated alkyl chain
    - Carboxyl group may be less accessible

---

**Rule 10**: *Modifiers that are amino acids with side chains capable of coordinating through nitrogen or sulfur atoms* **increase Fe/Hf**.

- **Explanation**: Amino acids with coordinating side chains provide multiple coordination sites, promoting Fe incorporation.

- **Examples**:
  - **High Fe/Hf**:
    - **(2S)-2-amino-3-phenylpropanoic acid** (phenylalanine)
    - **(2S)-6-acetamido-2-aminohexanoic acid** (modified lysine derivative)
  - **Structural Features**:
    - Amino acid backbone
    - Side chain with potential coordinating atoms (aromatic rings, amide groups)

- **Counter-Examples**:
  - **Low Fe/Hf**:
    - **(2S)-2-aminopentanedioic acid** (glutamic acid; extra carboxyl groups may hinder coordination)

---

**Rule 11**: *Modifiers with polyether chains and terminal coordinating groups* **increase Fe/Hf**.

- **Explanation**: Polyether chains offer multiple coordination sites through ether oxygen atoms. Terminal functional groups enhance coordination, leading to stronger interactions with Fe ions.

- **Examples**:
  - **High Fe/Hf**:
    - **2-[2-(2-methoxyethoxy)ethoxy]acetic acid**
    - **3-[2-(2-aminoethoxy)ethoxy]propanoic acid**
  - **Structural Features**:
    - Polyether chain (ethylene glycol units)
    - Terminal coordinating group (amino or carboxyl)

- **Counter-Examples**:
  - **Low Fe/Hf**:
    - **Modifiers lacking polyether chains**
    - **Modifiers without terminal coordinating groups**

---

**Rule 12**: *Modifiers containing both hydroxyl and amino groups in aliphatic chains* **increase Fe/Hf**.

- **Explanation**: The combination of hydroxyl and amino groups provides multiple strong coordination sites, enhancing Fe binding.

- **Examples**:
  - **High Fe/Hf**:
    - **7-hydroxyheptanoic acid**
    - **(2S)-2-aminobutanedioic acid**
  - **Structural Features**:
    - Aliphatic chain with hydroxyl and amino groups
    - Potential for multidentate coordination

---

**Rule 13**: *Modifiers with conjugated carbonyl groups (ketones or lactones) adjacent to aromatic rings* **increase Fe/Hf**.

- **Explanation**: Conjugated carbonyl groups can delocalize electron density and act as strong coordination sites, facilitating Fe binding.

- **Examples**:
  - **High Fe/Hf**:
    - **1,3-dioxo-2-benzofuran-5-carboxylic acid**
    - **4-(3,4-dimethoxyphenyl)-4-oxobutanoic acid**
  - **Structural Features**:
    - Conjugated ketone or lactone adjacent to an aromatic system
    - Enhanced chelation ability

---

**Rule 14**: *Modifiers with sterically hindered functional groups near coordinating sites* **decrease Fe/Hf**.

- **Explanation**: Bulky groups adjacent to coordination sites can obstruct Fe ion access, reducing effective binding.

- **Examples**:
  - **Low Fe/Hf**:
    - **2-oxo-1H-pyridine-4-carboxylic acid**
    - **1H-pyrazole-4-carboxylic acid**
  - **Structural Features**:
    - Rigid heterocyclic rings without accessible coordinating atoms
    - Potential steric hindrance

---

**Rule 15**: *Modifiers containing both sulfur and amino groups in their structure* **increase Fe/Hf**.

- **Explanation**: The combination of sulfur and amino groups provides multiple strong coordination sites, enhancing Fe binding.

- **Examples**:
  - **High Fe/Hf**:
    - **2-[[(2S)-2-amino-4-methylsulfanylbutanoyl]amino]acetic acid**
  - **Structural Features**:
    - Presence of thioether (-S-) and amino groups
    - Potential for multidentate coordination

---

**End of Rules**

---

These rules have been carefully crafted by analyzing the dataset and applying fundamental principles of coordination chemistry and physical-organic chemistry. Each rule combines multiple substructures—functional groups and structural motifs—to predict whether a modifier will increase or decrease the Fe/Hf ratio.

- **Direct Combination of Substructures**: The rules focus on specific combinations of functional groups (e.g., carboxyl with amino or sulfur groups) and structural features (e.g., chain length, aromatic systems, heterocycles) that directly influence Fe binding.

- **Physicochemical Considerations**: Explanations are grounded in principles such as electron donation and withdrawal, chelation ability, steric effects, and coordination chemistry. This ensures the rules are scientifically sound and based on chemical intuition.

- **Clear Predictions**: Each rule explicitly states whether the presence of certain structural features will lead to a high or low Fe/Hf value, allowing for unambiguous application to new modifiers.

- **Coverage and Balance**: The set includes 15 rules that strike a balance between broad applicability (simple rules with higher coverage) and specificity (complex rules targeting particular structural features). This approach ensures that most modifiers in the dataset are accounted for, while also allowing for nuanced predictions.

By applying these rules, researchers can effectively predict the impact of new molecular modifiers on the Fe/Hf ratio. This aids in the rational design and optimization of catalysts for the radical-mediated remote δ-C(sp³)–H bond functionalization reaction, ultimately improving reaction outcomes and efficiency.

------------------------------------------------------------------


    Current_Matrix:
    Matrix Generator Message:
Rule 1,Rule 2,Rule 3,Rule 4,Rule 5,Rule 6,Rule 7,Rule 8,Rule 9,Rule 10
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,-1,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,-1,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,-1,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,-1,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,-1,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,-1,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,-1,-1,0,0,0,0
0,0,0,0,0,-1,0,-1,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,-1,0,0
0,0,0,0,0,0,0,0,0,1
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,-1,0,0,0,0,0
0,0,0,0,0,0,0,0,-1,0
0,0,0,0,-1,0,0,0,0,0
0,0,0,0,-1,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0

---------------------------------------------------------------


    Train Accuracy: 0.7142857142857143; Test Accuracy: 0.0
    Train Support: 0.07142857142857142; Test Support: 0.0
    Train Confidence: 0.9583333333333334; Test Confidence: 0.5
    Train Lift: 1.9444444444444444; Test Lift: NONE
    Train Leverage: 0.03306122448979591; Test Leverage: NONE
    ----------------------------------------------------------------------------------

    Current Rule Code:

def rule2matrix(smiles_list):
    # Define the rules with their associated patterns and predictions
    rules = [
        {
            'number': 1,
            'description': 'Modifiers that are linear aliphatic carboxylic acids with a terminal primary amino group at the omega (ω) position.',
            'patterns': ['[NH2][CH2]{4,7}[C](=O)[O;H]'],
            'prediction': 1
        },
        {
            'number': 2,
            'description': 'Modifiers that are aromatic carboxylic acids with a para-substituted electron-withdrawing group (e.g., nitro (-NO₂), bromomethyl (-CH₂Br)).',
            'patterns': ['c1cc([N+](=O)[O-])ccc1C(=O)O', 'c1cc([CH2Br])ccc1C(=O)O'],
            'prediction': 1
        },
        {
            'number': 3,
            'description': 'Modifiers containing sulfur functional groups such as thiols (-SH) or thioethers (-S-).',
            'patterns': ['[SX2H]', '[#6][SX2][#6]'],
            'prediction': 1
        },
        {
            'number': 4,
            'description': 'Modifiers containing heteroaromatic rings with coordinating nitrogen atoms adjacent to the carboxyl group.',
            'patterns': ['n1cccc1C(=O)[O;H]'],
            'prediction': 1
        },
        {
            'number': 5,
            'description': 'Modifiers with multiple hydroxyl groups and lacking strong coordinating functionalities decrease Fe/Hf.',
            'patterns': ['[OX2H]'],
            'exclude_patterns': ['[N]', '[S]', '[#6][OX2][#6]'],
            'count_threshold': {'[OX2H]': 2},
            'prediction': -1
        },
        {
            'number': 6,
            'description': 'Modifiers containing aldehyde (formyl) groups adjacent to aromatic rings.',
            'patterns': ['[c][CH](=O)'],
            'prediction': -1
        },
        {
            'number': 7,
            'description': 'Modifiers that are aliphatic carboxylic acids without additional coordinating functional groups.',
            'patterns': ['[CX3](=O)[OX2H1]'],
            'exclude_patterns': ['[N]', '[S]', '[OX2H]', '[#6][OX2][#6]'],
            'prediction': -1
        },
        {
            'number': 8,
            'description': 'Modifiers that are aromatic carboxylic acids with para-substituted electron-donating groups (e.g., amino (-NH₂), methyl (-CH₃), hydroxyl (-OH)).',
            'patterns': ['c1cc([NH2,C,OH])ccc1C(=O)O'],
            'prediction': -1
        },
        {
            'number': 9,
            'description': 'Modifiers with perfluorinated aliphatic chains.',
            'patterns': ['[CX4](F)(F)F'],
            'prediction': -1
        },
        {
            'number': 10,
            'description': 'Modifiers that are amino acids with side chains capable of coordinating through nitrogen or sulfur atoms.',
            'patterns': ['[NX3][CX3](=O)[CX4][NX3,SX2]'],
            'prediction': 1
        }
        # Additional rules can be added here
    ]

    # Compile SMARTS patterns
    for rule in rules:
        compiled_patterns = [Chem.MolFromSmarts(pattern) for pattern in rule['patterns']]
        rule['compiled_patterns'] = compiled_patterns
        # Compile exclude patterns if any
        if 'exclude_patterns' in rule:
            compiled_exclude_patterns = [Chem.MolFromSmarts(pattern) for pattern in rule['exclude_patterns']]
            rule['compiled_exclude_patterns'] = compiled_exclude_patterns
    
    # Initialize results list
    results = []

    # Process each SMILES string
    for smi in smiles_list:
        mol = Chem.MolFromSmiles(smi)
        if mol is None:
            # If the molecule cannot be parsed, append a row of zeros
            results.append([0]*len(rules))
            continue
        row = []
        for rule in rules:
            match = True
            try:
                # Check exclude patterns if any
                if 'compiled_exclude_patterns' in rule:
                    for pat in rule['compiled_exclude_patterns']:
                        if mol.HasSubstructMatch(pat):
                            match = False
                            break
                    if not match:
                        row.append(0)
                        continue
                # For patterns with count thresholds
                if 'count_threshold' in rule:
                    for pat_smarts in rule['count_threshold']:
                        pat = Chem.MolFromSmarts(pat_smarts)
                        matches = mol.GetSubstructMatches(pat)
                        if len(matches) >= rule['count_threshold'][pat_smarts]:
                            continue
                        else:
                            match = False
                            break
                    if not match:
                        row.append(0)
                        continue
                # Otherwise, check all compiled patterns
                for pat in rule['compiled_patterns']:
                    if not mol.HasSubstructMatch(pat):
                        match = False
                        break
                if match:
                    row.append(rule['prediction'])
                else:
                    row.append(0)
            except Exception as e:
                # In case of any error, append 0
                row.append(0)
        results.append(row)
    # Create DataFrame with results
    df = pd.DataFrame(results, columns=[f'Rule {rule["number"]}' for rule in rules])
    return df

--------------------------------------------------
    Target Name: Fe/Hf
    GPT Model: o1-preview-2024-09-12
    ML Model: ETC
    Current_Rules:
    After careful analysis of the dataset and the current rules, I have identified areas where the rules can be refined for better clarity and coverage. Some rules can be combined or adjusted to more accurately reflect the relationships observed in the data. Below is the revised set of rules:

---

**Start of Rules**

---

**Rule 1**: **Modifiers that are linear aliphatic carboxylic acids with a terminal primary amino group at the omega (ω) position increase Fe/Hf**.

- **Explanation**: The presence of both a carboxyl group and a distal amino group allows the molecule to act as a bidentate ligand, effectively chelating Fe ions and enhancing their incorporation into the catalyst.

- **Examples**:
  - **High Fe/Hf**:
    - **5-aminopentanoic acid**
    - **7-aminoheptanoic acid**
    - **8-aminooctanoic acid**

- **Structural Features**:
  - Linear aliphatic chain (typically 5–8 carbons)
  - Carboxyl group at the α-position
  - Terminal primary amino group at the ω-position

- **Counter-Examples**:
  - **Low Fe/Hf**:
    - **Octanoic acid** (lacks amino group)
    - **(2S)-2-aminopentanedioic acid** (amino group at α-position; additional carboxyl group may interfere with coordination)

---

**Rule 2**: **Modifiers that are aromatic carboxylic acids with a para-substituted electron-withdrawing group increase Fe/Hf, while those with a para-substituted electron-donating group decrease Fe/Hf**.

- **Explanation**: Electron-withdrawing groups increase the acidity of the carboxylic acid, facilitating deprotonation and promoting coordination with Fe ions. Electron-donating groups reduce acidity, hindering coordination.

- **Examples**:
  - **High Fe/Hf** (electron-withdrawing substituents):
    - **4-nitrobenzoic acid** (-NO₂ group)
    - **4-(bromomethyl)benzoic acid** (-CH₂Br group)

  - **Low Fe/Hf** (electron-donating substituents):
    - **4-aminobenzoic acid** (-NH₂ group)
    - **4-methylbenzoic acid** (-CH₃ group)
    - **5-(4-hydroxyphenyl)pentanoic acid** (-OH group)

- **Structural Features**:
  - Benzoic acid core
  - Substituent at the para position affecting electron density

---

**Rule 3**: **Modifiers containing sulfur functional groups (thiols -SH or thioethers -S-) near the carboxyl group increase Fe/Hf**.

- **Explanation**: Sulfur atoms are soft Lewis bases and coordinate strongly with Fe ions, enhancing metal-ligand interactions and Fe incorporation.

- **Examples**:
  - **High Fe/Hf**:
    - **4-sulfanylbenzoic acid**
    - **3-sulfanylpropanoic acid**
    - **2-[[(2S)-2-amino-4-methylsulfanylbutanoyl]amino]acetic acid**

- **Structural Features**:
  - Presence of sulfur functional group
  - Potential for bidentate or multidentate coordination

---

**Rule 4**: **Modifiers that contain pyridine rings or other nitrogen-containing heteroaromatic rings capable of coordinating with Fe ions increase Fe/Hf**.

- **Explanation**: Nitrogen atoms in heteroaromatic rings can act as coordination sites for Fe ions, enhancing their incorporation into the catalyst.

- **Examples**:
  - **High Fe/Hf**:
    - **4-pyridin-4-ylbenzoic acid**
    - **4-pyridin-4-ylbutanoic acid**

- **Counter-Examples**:
  - **Low Fe/Hf**:
    - **Pyridine-3-carboxylic acid** (nitrogen's position less favorable for coordination)

- **Structural Features**:
  - Heteroaromatic ring with coordinating nitrogen atom
  - Proximity to carboxyl group allows effective chelation

---

**Rule 5**: **Modifiers with multiple hydroxyl groups and lacking strong coordinating functionalities decrease Fe/Hf**.

- **Explanation**: Multiple hydroxyl groups increase hydrophilicity and can create steric hindrance, reducing effective coordination with Fe ions.

- **Examples**:
  - **Low Fe/Hf**:
    - **(2R,3S,4R,5R)-2,3,4,5,6-pentahydroxyhexanoic acid**
    - **2-[[1,3-dihydroxy-2-(hydroxymethyl)propan-2-yl]oxy]acetic acid**

- **Structural Features**:
  - Abundance of hydroxyl groups
  - Lack of additional strong coordinating groups

---

**Rule 6**: **Modifiers that are linear aliphatic carboxylic acids without additional coordinating functional groups decrease Fe/Hf**.

- **Explanation**: Without additional functional groups to provide extra coordination sites, these modifiers interact weakly with Fe ions.

- **Examples**:
  - **Low Fe/Hf**:
    - **Octanoic acid**
    - **4-oxoheptanedioic acid**

- **Structural Features**:
  - Linear aliphatic chain
  - Only carboxyl group(s) present

---

**Rule 7**: **Modifiers containing both amino and sulfur functional groups in the molecule increase Fe/Hf**.

- **Explanation**: The combination of sulfur and amino groups provides multiple strong coordination sites, enhancing Fe binding and incorporation into the catalyst.

- **Examples**:
  - **High Fe/Hf**:
    - **2-[[(2S)-2-amino-4-methylsulfanylbutanoyl]amino]acetic acid**

- **Structural Features**:
  - Presence of thioether (-S-) and amino groups
  - Potential for multidentate coordination

---

**Rule 8**: **Modifiers with ether groups (alkoxy chains) terminating with coordinating groups such as carboxyl or amino groups increase Fe/Hf**.

- **Explanation**: Ether oxygen atoms can act as additional coordination sites, and terminal coordinating groups enhance Fe binding.

- **Examples**:
  - **High Fe/Hf**:
    - **2-[2-(2-methoxyethoxy)ethoxy]acetic acid**
    - **3-[2-(2-aminoethoxy)ethoxy]propanoic acid**

- **Structural Features**:
  - Polyether chain (ethylene glycol units)
  - Terminal carboxyl or amino group

---

**Rule 9**: **Modifiers with perfluorinated alkyl chains decrease Fe/Hf**.

- **Explanation**: Perfluorinated groups are highly electron-withdrawing and hydrophobic, reducing electron density available for coordination and hindering interactions with Fe ions in polar environments.

- **Examples**:
  - **Low Fe/Hf**:
    - **2,2,3,3,4,4,5,5,5-nonafluoropentanoic acid**

- **Structural Features**:
  - Perfluorinated alkyl chain
  - Carboxyl group may be less accessible

---

**Rule 10**: **Modifiers containing conjugated carbonyl groups adjacent to aromatic rings increase Fe/Hf**.

- **Explanation**: Conjugation increases delocalization of electrons, enhancing the ligand's ability to coordinate with Fe ions due to resonance stabilization.

- **Examples**:
  - **High Fe/Hf**:
    - **1,3-dioxo-2-benzofuran-5-carboxylic acid**
    - **4-(3,4-dimethoxyphenyl)-4-oxobutanoic acid**

- **Structural Features**:
  - Aromatic ring with adjacent carbonyl group
  - Potential for extended conjugation

---

**Rule 11**: **Modifiers containing aldehyde (formyl) groups adjacent to aromatic rings decrease Fe/Hf**.

- **Explanation**: Aldehyde groups can participate in side reactions and may reduce the availability of coordination sites, decreasing Fe incorporation.

- **Examples**:
  - **Low Fe/Hf**:
    - **4-formylbenzoic acid**
    - **5-formyl-2-hydroxybenzoic acid**

- **Structural Features**:
  - Aromatic ring with adjacent aldehyde group
  - Potential for intramolecular interactions

---

**Rule 12**: **Modifiers that are amino acids with hydrophobic side chains or side chains capable of coordinating through nitrogen or sulfur atoms increase Fe/Hf**.

- **Explanation**: Amino acids with such side chains offer effective coordination with Fe ions, enhancing their incorporation into the catalyst.

- **Examples**:
  - **High Fe/Hf**:
    - **(2S)-2-amino-3-phenylpropanoic acid** (phenylalanine)
    - **(2S)-6-acetamido-2-aminohexanoic acid**

- **Structural Features**:
  - Amino acid backbone
  - Side chain with coordinating group (aromatic ring, amino group)

- **Counter-Examples**:
  - **Low Fe/Hf**:
    - **(2S)-2-aminopentanedioic acid** (glutamic acid; additional carboxyl groups may hinder coordination)

---

**Rule 13**: **Modifiers with rigid heterocyclic structures lacking accessible coordinating atoms decrease Fe/Hf**.

- **Explanation**: Steric hindrance and lack of accessible coordination sites reduce the ability of these modifiers to interact effectively with Fe ions.

- **Examples**:
  - **Low Fe/Hf**:
    - **1H-pyrazole-4-carboxylic acid**
    - **2-oxo-1H-pyridine-4-carboxylic acid**

- **Structural Features**:
  - Rigid heterocyclic ring
  - Limited number of coordination sites

---

**Rule 14**: **Modifiers with aliphatic chains containing hydroxyl groups positioned gamma (γ) or further from the carboxyl group increase Fe/Hf, provided they lack interfering groups**.

- **Explanation**: Distant hydroxyl groups can serve as additional coordination sites, promoting effective chelation with Fe ions.

- **Examples**:
  - **High Fe/Hf**:
    - **7-hydroxyheptanoic acid**

- **Structural Features**:
  - Aliphatic chain with distant hydroxyl group
  - Carboxyl group at α-position

- **Counter-Examples**:
  - **Low Fe/Hf**:
    - **5-(4-hydroxyphenyl)pentanoic acid** (hydroxyl group on aromatic ring may engage in other interactions)

---

**Rule 15**: **Modifiers with electron-donating groups adjacent to the carboxyl group without additional coordinating atoms decrease Fe/Hf**.

- **Explanation**: Electron-donating groups reduce the acidity and coordination ability of the carboxyl group, hindering effective interaction with Fe ions.

- **Examples**:
  - **Low Fe/Hf**:
    - **2-[(4-hydroxybenzoyl)amino]acetic acid**
    - **3-(4-hydroxyphenyl)propanoic acid**

- **Structural Features**:
  - Electron-donating group (e.g., hydroxyl, amino) adjacent to carboxyl group
  - Lack of other coordinating functionalities

---

**End of Rules**

---

These refined rules provide a clearer and more comprehensive understanding of how different functional groups and structural features in the modifiers influence the Fe/Hf ratio. By considering combinations of substructures and their underlying chemical properties, we can better predict whether a modifier will increase or decrease Fe incorporation into the catalyst. This understanding aids in the rational design of modifiers to optimize catalyst performance for the radical-mediated remote δ-C(sp³)–H bond functionalization reaction.---------------------------------------------------------------


    Current_Matrix:
    Matrix Generator Message:
Rule 1,Rule 2,Rule 2,Rule 3,Rule 4,Rule 5,Rule 6
0,0,0,0,0,0,0
1,0,0,0,0,0,0
0,0,0,0,0,0,0
0,0,0,0,0,0,0
1,0,0,0,0,0,0
0,0,0,0,0,0,0
0,0,0,0,0,0,0
0,0,0,0,0,0,0
0,0,0,0,0,-1,0
0,0,0,0,0,0,0
0,0,0,0,0,-1,0
0,0,0,1,0,0,0
0,0,0,0,0,0,0
0,0,0,0,0,0,0
0,0,0,0,0,0,0
0,0,0,0,0,0,0
0,0,0,0,0,0,0
0,0,0,0,0,0,0
0,0,0,1,0,0,0
0,0,0,0,0,-1,0
0,0,0,0,0,0,0
0,0,0,0,0,0,0
0,0,0,0,0,0,0
0,0,0,0,0,0,0
0,0,0,1,0,0,0
0,0,0,0,0,0,0
0,0,0,0,0,0,0
0,0,0,0,0,0,0
0,0,0,0,0,-1,0
0,0,0,0,0,0,0
0,0,0,0,0,-1,0
0,0,0,0,0,-1,0
1,0,0,0,0,0,0
0,0,0,0,0,0,0
0,0,0,0,0,0,0
0,0,0,0,0,0,0

---------------------------------------------------------------


    Train Accuracy: 0.6285714285714286; Test Accuracy: 0.0
    Train Support: 0.11428571428571428; Test Support: 0.0
    Train Confidence: 0.9166666666666667; Test Confidence: 0.5
    Train Lift: 1.8300653594771243; Test Lift: NONE
    Train Leverage: 0.05061224489795918; Test Leverage: NONE
    ----------------------------------------------------------------------------------

    Current Rule Code:
def rule2matrix(smiles_list):
    # Define SMARTS patterns for functional groups
    # Carboxylic acid group (-COOH)
    carboxylic_acid = '[CX3](=O)[OX2H1]'
    carboxylate_anion = '[CX3](=O)[O-]'

    # Primary amino group (-NH2)
    primary_amino = '[NX3;H2]'

    # Linear aliphatic chain
    aliphatic_chain = '[CX4H2][CX4H2][CX4H2][CX4H2]'

    # Sulfur functional groups
    thiol = '[SX2H]'
    thioether = '[#16X2][#6]'

    # Aromatic carboxylic acid
    aromatic_carboxylic_acid = '[c][c](c)[c](c)[c][CX3](=O)[O,H]'

    # Electron-withdrawing groups (EWGs) at para position
    para_EWG = '[c][c](c)[c]([F,Cl,Br,I,N+])(c)[c]'

    # Electron-donating groups (EDGs) at para position
    para_EDG = '[c][c](c)[c]([OX2H,NX3H2,NX3H1][#6,@H1])(c)[c]'

    # Pyridine ring connected to carboxylic acid
    pyridine_carboxylic_acid = '[n][c](c)[c](c)[c][CX3](=O)[O,H]'

    # Multiple hydroxyl groups (-OH)
    hydroxyl_group = '[OX2H]'

    # Aldehyde group adjacent to aromatic ring
    aromatic_aldehyde = '[c][CX3H](=O)'

    # Conjugated carbonyl group adjacent to aromatic ring
    conjugated_carbonyl = '[c][CX3](=O)[#6]'

    # Amino acids with hydrophobic side chains
    amino_acid_backbone = '[NX3;H2][CX4](C(=O)[OX1H])'
    hydrophobic_side_chain = '[CX4][CX4][#6]'

    # Rigid heterocyclic structures
    rigid_heterocycle = '[r3,r4,r5][r][r]'

    # Initialize rules list
    rules = []

    # Rule 1: Linear aliphatic carboxylic acids with terminal primary amino group increase Fe/Hf
    rules.append({
        'number': 1,
        'description': 'Modifiers that are linear aliphatic carboxylic acids with a terminal primary amino group at the omega (ω) position increase Fe/Hf.',
        'func': is_rule1_matched,
        'prediction': 1
    })

    # Rule 2: Aromatic carboxylic acids with para-substituted EWGs increase Fe/Hf
    rules.append({
        'number': 2,
        'description': 'Modifiers that are aromatic carboxylic acids with a para-substituted electron-withdrawing group increase Fe/Hf.',
        'patterns': {
            'aromatic_carboxylic_acid': aromatic_carboxylic_acid,
            'para_EWG': para_EWG
        },
        'prediction': 1
    })

    # Rule 2 (negative): Aromatic carboxylic acids with para-substituted EDGs decrease Fe/Hf
    rules.append({
        'number': 2,
        'description': 'Modifiers that are aromatic carboxylic acids with a para-substituted electron-donating group decrease Fe/Hf.',
        'patterns': {
            'aromatic_carboxylic_acid': aromatic_carboxylic_acid,
            'para_EDG': para_EDG
        },
        'prediction': -1
    })

    # Rule 3: Modifiers containing sulfur functional groups near carboxyl group increase Fe/Hf
    rules.append({
        'number': 3,
        'description': 'Modifiers containing sulfur functional groups (thiols -SH or thioethers -S-) near the carboxyl group increase Fe/Hf.',
        'patterns': {
            'carboxylic_acid': carboxylic_acid,
            'sulfur_group': [thiol, thioether]
        },
        'prediction': 1
    })

    # Rule 4: Modifiers containing pyridine rings capable of coordinating increase Fe/Hf
    rules.append({
        'number': 4,
        'description': 'Modifiers that contain pyridine rings or other nitrogen-containing heteroaromatic rings capable of coordinating with Fe ions increase Fe/Hf.',
        'patterns': {
            'pyridine_carboxylic_acid': pyridine_carboxylic_acid
        },
        'prediction': 1
    })

    # Rule 5: Modifiers with multiple hydroxyl groups decrease Fe/Hf
    rules.append({
        'number': 5,
        'description': 'Modifiers with multiple hydroxyl groups and lacking strong coordinating functionalities decrease Fe/Hf.',
        'func': is_rule5_matched,
        'prediction': -1
    })

    # Rule 6: Linear aliphatic carboxylic acids without additional groups decrease Fe/Hf
    rules.append({
        'number': 6,
        'description': 'Modifiers that are linear aliphatic carboxylic acids without additional coordinating functional groups decrease Fe/Hf.',
        'patterns': {
            'carboxylic_acid': carboxylic_acid
        },
        'exclude_patterns': [primary_amino, thiol, thioether, hydroxyl_group, '[N]'],
        'prediction': -1
    })

    # Continue defining the rest of the rules similarly...

    # Compile patterns
    for rule in rules:
        compiled_patterns = {}
        for key, pattern in rule.get('patterns', {}).items():
            if isinstance(pattern, list):
                compiled_patterns[key] = [Chem.MolFromSmarts(p) for p in pattern]
            else:
                compiled_patterns[key] = Chem.MolFromSmarts(pattern)
        rule['compiled_patterns'] = compiled_patterns
        # Compile exclude patterns if any
        if 'exclude_patterns' in rule:
            rule['compiled_exclude_patterns'] = [Chem.MolFromSmarts(p) for p in rule['exclude_patterns']]

    # Initialize results
    results = []
    for smi in smiles_list:
        mol = Chem.MolFromSmiles(smi)
        if mol is None:
            # Append row of zeros if molecule cannot be parsed
            results.append([0] * len(rules))
            continue
        row = []
        for rule in rules:
            try:
                match = True
                # Use function if specified
                if 'func' in rule:
                    match = rule['func'](mol)
                else:
                    # Check patterns
                    for key, patt in rule['compiled_patterns'].items():
                        if isinstance(patt, list):
                            group_match = False
                            for p in patt:
                                if mol.HasSubstructMatch(p):
                                    group_match = True
                                    break
                            if not group_match:
                                match = False
                                break
                        else:
                            if not mol.HasSubstructMatch(patt):
                                match = False
                                break
                    # Check exclude patterns
                    if match and 'compiled_exclude_patterns' in rule:
                        for p in rule['compiled_exclude_patterns']:
                            if mol.HasSubstructMatch(p):
                                match = False
                                break
                if match:
                    row.append(rule['prediction'])
                else:
                    row.append(0)
            except Exception:
                row.append(0)
        results.append(row)
    # Create DataFrame
    df = pd.DataFrame(results, columns=[f'Rule {rule["number"]}' for rule in rules])
    return df

# Define functions for complex rules

def is_rule1_matched(mol):
    # Rule 1 implementation
    carboxylic_acid = Chem.MolFromSmarts('[CX3](=O)[OX2H1]')
    primary_amino = Chem.MolFromSmarts('[NX3;H2]')
    carboxyl_matches = mol.GetSubstructMatches(carboxylic_acid)
    amino_matches = mol.GetSubstructMatches(primary_amino)
    if not carboxyl_matches or not amino_matches:
        return False
    for c_match in carboxyl_matches:
        for n_match in amino_matches:
            c_atom = c_match[0]
            n_atom = n_match[0]
            path = Chem.rdmolops.GetShortestPath(mol, c_atom, n_atom)
            path_length = len(path) - 1
            if 4 <= path_length <= 7:
                # Check if path is linear aliphatic chain
                aliphatic_chain = True
                for idx in path[1:-1]:
                    atom = mol.GetAtomWithIdx(idx)
                    if atom.GetAtomicNum() != 6 or atom.GetIsAromatic():
                        aliphatic_chain = False
                        break
                if aliphatic_chain:
                    return True
    return False

def is_rule5_matched(mol):
    # Rule 5 implementation
    hydroxyl = Chem.MolFromSmarts('[OX2H]')
    hydroxyl_matches = mol.GetSubstructMatches(hydroxyl)
    if len(hydroxyl_matches) >= 2:
        # Check for absence of strong coordinating functionalities
        sulfur = Chem.MolFromSmarts('[S]')
        nitrogen = Chem.MolFromSmarts('[N]')
        if not mol.HasSubstructMatch(sulfur) and not mol.HasSubstructMatch(nitrogen):
            return True
    return False


--------------------------------------------------
    Target Name: Fe/Hf
    GPT Model: o1-preview-2024-09-12
    ML Model: ETC
    Current_Rules:
    **Start of Rules**

---

**Rule 1**: **Modifiers that are linear aliphatic carboxylic acids with a terminal primary amino group (ω-amino acids) increase Fe/Hf**.

- **Explanation**: The presence of both a carboxyl group at one end and a terminal amino group at the opposite end allows the molecule to act as a bidentate ligand. This facilitates stronger chelation with Fe ions, enhancing their incorporation into the catalyst.

- **Examples**:
  - **High Fe/Hf**:
    - **5-aminopentanoic acid**
    - **7-aminoheptanoic acid**
    - **8-aminooctanoic acid**
  - **Low Fe/Hf**:
    - **Octanoic acid** (lacks terminal amino group)

- **Structural Features**:
  - Linear aliphatic chain (5–8 carbons)
  - Carboxyl group at one end (α-position)
  - Terminal primary amino group at the opposite end (ω-position)

---

**Rule 2**: **Modifiers that are aromatic carboxylic acids substituted with strong electron-withdrawing groups at the para position increase Fe/Hf, while those with electron-donating groups decrease Fe/Hf**.

- **Explanation**: Electron-withdrawing groups enhance the acidity of the carboxyl group and increase its ability to coordinate with Fe ions. Electron-donating groups reduce acidity and coordination effectiveness.

- **Examples**:
  - **High Fe/Hf** (electron-withdrawing groups):
    - **4-nitrobenzoic acid** (-NO₂ group)
    - **4-(bromomethyl)benzoic acid** (-CH₂Br group)
  - **Low Fe/Hf** (electron-donating groups):
    - **4-methylbenzoic acid** (-CH₃ group)
    - **4-aminobenzoic acid** (-NH₂ group)
    - **4-hydroxybenzoic acid** (-OH group)

- **Structural Features**:
  - Benzoic acid core
  - Substituent at the para position
  - Electron-withdrawing groups (e.g., -NO₂, -Br)
  - Electron-donating groups (e.g., -NH₂, -CH₃, -OH)

---

**Rule 3**: **Modifiers containing sulfur atoms (thiol -SH or thioether -S- groups) enhance Fe/Hf**.

- **Explanation**: Sulfur atoms are good soft Lewis bases and form strong coordination bonds with Fe ions, improving metal-ligand interactions.

- **Examples**:
  - **High Fe/Hf**:
    - **4-sulfanylbenzoic acid**
    - **3-sulfanylpropanoic acid**
    - **2-[[(2S)-2-amino-4-methylsulfanylbutanoyl]amino]acetic acid**

- **Structural Features**:
  - Presence of sulfur-containing functional groups
  - Potential for multidentate coordination

---

**Rule 4**: **Modifiers with nitrogen-containing heteroaromatic rings, where the nitrogen is positioned to coordinate with Fe ions, increase Fe/Hf**.

- **Explanation**: Nitrogen atoms in heteroaromatic rings like pyridine can act as strong coordination sites, enhancing Fe incorporation into the catalyst.

- **Examples**:
  - **High Fe/Hf**:
    - **4-pyridin-4-ylbenzoic acid**
    - **4-pyridin-4-ylbutanoic acid**
  - **Low Fe/Hf**:
    - **Pyridine-3-carboxylic acid** (nitrogen position less favorable for coordination)

- **Structural Features**:
  - Heteroaromatic ring with accessible nitrogen atom
  - Appropriate position relative to the carboxyl group for effective coordination

---

**Rule 5**: **Modifiers with perfluorinated alkyl chains decrease Fe/Hf**.

- **Explanation**: Perfluorinated chains are highly electronegative and hydrophobic, which can hinder coordination by reducing electron density at the coordinating atoms and creating steric hindrance.

- **Examples**:
  - **Low Fe/Hf**:
    - **2,2,3,3,4,4,5,5,5-nonafluoropentanoic acid**

- **Structural Features**:
  - Alkyl chain fully substituted with fluorine atoms
  - Carboxyl group potentially less accessible due to electron-withdrawing effects

---

**Rule 6**: **Modifiers that are linear aliphatic carboxylic acids without additional coordinating groups decrease Fe/Hf**.

- **Explanation**: Without extra coordination sites, these modifiers interact weakly with Fe ions, leading to lower metal incorporation.

- **Examples**:
  - **Low Fe/Hf**:
    - **Octanoic acid**
    - **4-oxoheptanedioic acid**

- **Structural Features**:
  - Linear aliphatic chain
  - Only carboxyl group(s) present
  - Lack of additional functional groups that can coordinate with Fe

---

**Rule 7**: **Modifiers with multiple hydroxyl groups, especially polyhydroxylated aliphatic acids, decrease Fe/Hf**.

- **Explanation**: Excessive hydroxyl groups increase hydrophilicity and can lead to steric hindrance, reducing effective coordination with Fe ions.

- **Examples**:
  - **Low Fe/Hf**:
    - **(2R,3S,4R,5R)-2,3,4,5,6-pentahydroxyhexanoic acid** (a sugar acid)
    - **2-[[1,3-dihydroxy-2-(hydroxymethyl)propan-2-yl]oxy]acetic acid**

- **Structural Features**:
  - Multiple hydroxyl groups along the aliphatic chain
  - Lack of strong coordinating atoms beyond hydroxyls

---

**Rule 8**: **Modifiers containing multiple strong coordinating functional groups (e.g., amino and sulfur groups) enhance Fe/Hf**.

- **Explanation**: The combination of different coordinating atoms (nitrogen, sulfur) provides multiple binding sites, strengthening chelation with Fe ions.

- **Examples**:
  - **High Fe/Hf**:
    - **2-[[(2S)-2-amino-4-methylsulfanylbutanoyl]amino]acetic acid** (contains both amino and thioether groups)
    - **(2S)-6-acetamido-2-aminohexanoic acid**

- **Structural Features**:
  - Presence of multiple functional groups capable of coordination
  - Potential for multidentate chelation

---

**Rule 9**: **Modifiers with ether linkages terminating in coordinating groups (e.g., carboxyl or amino groups) increase Fe/Hf**.

- **Explanation**: Ether oxygen atoms can serve as additional coordination sites, and flexible chains may facilitate binding of terminal groups to Fe ions.

- **Examples**:
  - **High Fe/Hf**:
    - **2-[2-(2-methoxyethoxy)ethoxy]acetic acid**
    - **3-[2-(2-aminoethoxy)ethoxy]propanoic acid**

- **Structural Features**:
  - Polyether chain (e.g., ethylene glycol units)
  - Terminal coordinating group (carboxyl or amino)
  - Flexibility allows multiple points of interaction with Fe

---

**Rule 10**: **Modifiers with conjugated aromatic systems containing carbonyl groups (e.g., conjugated ketones or lactones adjacent to aromatic rings) increase Fe/Hf**.

- **Explanation**: Conjugation enhances electron delocalization, improving the ligand's ability to coordinate with Fe ions through resonance stabilization.

- **Examples**:
  - **High Fe/Hf**:
    - **1,3-dioxo-2-benzofuran-5-carboxylic acid**
    - **4-(3,4-dimethoxyphenyl)-4-oxobutanoic acid**

- **Structural Features**:
  - Conjugated carbonyl groups adjacent to aromatic rings
  - Potential for π-backbonding with Fe ions

---

**Rule 11**: **Modifiers with aldehyde (formyl) groups adjacent to carboxyl groups decrease Fe/Hf**.

- **Explanation**: Aldehyde groups can participate in side reactions or reduce the availability of coordination sites, hindering Fe binding.

- **Examples**:
  - **Low Fe/Hf**:
    - **4-formylbenzoic acid**
    - **5-formyl-2-hydroxybenzoic acid**

- **Structural Features**:
  - Aldehyde group ortho or para to the carboxyl group
  - Potential for intramolecular interactions that limit Fe coordination

---

**Rule 12**: **Modifiers that are amino acids with aromatic or sulfur-containing side chains increase Fe/Hf**.

- **Explanation**: Aromatic rings and sulfur atoms in side chains provide additional coordination sites, enhancing Fe incorporation.

- **Examples**:
  - **High Fe/Hf**:
    - **(2S)-2-amino-3-phenylpropanoic acid** (phenylalanine)
  - **Low Fe/Hf**:
    - **(2S)-2-aminopentanedioic acid** (glutamic acid; extra carboxyl group may hinder coordination)

- **Structural Features**:
  - Amino acid backbone
  - Side chains containing aromatic rings or sulfur atoms
  - Potential for multidentate binding

---

**Rule 13**: **Modifiers with electron-donating substituents adjacent to the carboxyl group, without other strong coordinating groups, decrease Fe/Hf**.

- **Explanation**: Electron-donating groups reduce the acidity and coordination ability of the carboxyl group, weakening interaction with Fe ions.

- **Examples**:
  - **Low Fe/Hf**:
    - **3-(4-hydroxyphenyl)propanoic acid**
    - **2-[(4-hydroxybenzoyl)amino]acetic acid**

- **Structural Features**:
  - Electron-donating groups (e.g., -OH) near the carboxyl group
  - Lack of additional coordinating functional groups

---

**Rule 14**: **Modifiers with terminal hydroxyl groups distant from the carboxyl group on medium-length aliphatic chains increase Fe/Hf**.

- **Explanation**: Terminal hydroxyl groups can act as additional coordination sites when adequately separated from the carboxyl group, facilitating Fe binding.

- **Examples**:
  - **High Fe/Hf**:
    - **7-hydroxyheptanoic acid**

- **Structural Features**:
  - Aliphatic chain (7 carbons)
  - Carboxyl group at one end
  - Terminal hydroxyl group at the opposite end
  - Sufficient chain length for flexible coordination

---

**Rule 15**: **Modifiers with rigid heterocyclic structures lacking accessible coordinating atoms decrease Fe/Hf**.

- **Explanation**: Steric hindrance and the absence of suitable coordination sites reduce the ability of these modifiers to interact effectively with Fe ions.

- **Examples**:
  - **Low Fe/Hf**:
    - **1H-pyrazole-4-carboxylic acid**
    - **2-oxo-1H-pyridine-4-carboxylic acid**

- **Structural Features**:
  - Rigid heterocyclic rings
  - Nitrogen atoms in positions not favorable for coordination
  - Minimal flexibility for ligand binding

---

**End of Rules**

---

These rules illustrate the relationship between specific structural features of molecular modifiers and their effect on the Fe/Hf ratio in the catalyst. By considering combinations of functional groups and underlying physicochemical properties, these rules help predict whether a modifier will increase or decrease Fe incorporation. This understanding aids in the rational design and selection of modifiers to optimize the catalyst's performance in the target radical-mediated remote δ-C(sp³)–H bond functionalization reaction.---------------------------------------------------------------


    Current_Matrix:
    Matrix Generator Message:
Rule 1,Rule 2,Rule 3,Rule 4,Rule 5
0,0,0,0,0
0,0,0,0,0
0,1,0,0,0
0,0,0,0,0
1,0,0,0,0
0,1,0,0,0
0,0,0,0,0
0,0,0,0,0
0,0,0,0,0
0,1,0,1,0
0,0,0,0,0
0,1,1,0,0
0,0,0,0,0
0,1,0,1,0
0,0,0,0,0
0,0,0,0,-1
0,1,0,0,0
0,1,0,0,0
0,0,1,0,0
0,1,0,0,0
0,1,0,0,0
0,1,0,0,0
0,1,0,1,0
0,1,0,0,0
0,0,1,0,0
0,0,0,1,0
0,0,0,0,0
0,0,0,0,0
0,0,0,0,0
0,0,0,0,-1
0,0,0,0,0
0,0,0,0,0
1,0,0,0,0
0,0,0,0,0
0,0,0,0,0
1,0,0,0,0

---------------------------------------------------------------


    Train Accuracy: 0.6571428571428571; Test Accuracy: 1.0
    Train Support: 0.08571428571428572; Test Support: 0.0
    Train Confidence: 1.0; Test Confidence: 0.5
    Train Lift: 1.9444444444444446; Test Lift: NONE
    Train Leverage: 0.041632653061224496; Test Leverage: NONE
    ----------------------------------------------------------------------------------

    Current Rule Code:
def rule2matrix(smiles_list):
    # Import necessary modules
    from rdkit import Chem
    import pandas as pd

    # Define rules
    rules = [
        {
            'number': 1,
            'description': 'Modifiers that are linear aliphatic carboxylic acids with a terminal primary amino group (omega-amino acids) increase Fe/Hf.',
            'patterns': [
                '[NX3H2][CH2][CH2][CH2][CH2][CX3](=O)[OX2H1]',
                '[NX3H2][CH2][CH2][CH2][CH2][CH2][CX3](=O)[OX2H1]',
                '[NX3H2][CH2][CH2][CH2][CH2][CH2][CH2][CX3](=O)[OX2H1]',
                '[NX3H2][CH2][CH2][CH2][CH2][CH2][CH2][CH2][CX3](=O)[OX2H1]'
            ],
            'prediction': 1
        },
        {
            'number': 2,
            'description': 'Modifiers that are aromatic carboxylic acids substituted with strong electron-withdrawing groups at the para position increase Fe/Hf.',
            'patterns': [
                '[c][C](=O)[O]',
                '[c][N+](=O)[O-]',
                '[c][F,Cl,Br,I]',
                '[c][CX4](F)(F)F'
            ],
            'prediction': 1
        },
        {
            'number': 3,
            'description': 'Modifiers containing sulfur atoms (thiol -SH or thioether -S- groups) enhance Fe/Hf.',
            'patterns': [
                '[SX2H]',
                '[#16X2][#6]'
            ],
            'prediction': 1
        },
        {
            'number': 4,
            'description': 'Modifiers with nitrogen-containing heteroaromatic rings, where the nitrogen is positioned to coordinate with Fe ions, increase Fe/Hf.',
            'patterns': [
                'n1ccccc1',
                'c1ccncc1',
                'c1ccnc(c1)[C](=O)[O,H]'
            ],
            'prediction': 1
        },
        {
            'number': 5,
            'description': 'Modifiers with perfluorinated alkyl chains decrease Fe/Hf.',
            'patterns': [
                '[CX4](F)(F)(F)',
                '[C](F)(F)(F)',
                '[CF2][CF2][CF2]'
            ],
            'prediction': -1
        }
    ]

    # Compile patterns
    for rule in rules:
        compiled_patterns = []
        for smarts in rule['patterns']:
            mol = Chem.MolFromSmarts(smarts)
            compiled_patterns.append(mol)
        rule['compiled_patterns'] = compiled_patterns

    # Initialize result list
    results = []

    # Process each SMILES string
    for smi in smiles_list:
        mol = Chem.MolFromSmiles(smi)
        if mol is None:
            # If the molecule cannot be parsed, append a row of zeros
            results.append([0]*len(rules))
            continue
        row = []
        for rule in rules:
            try:
                # Check if the molecule matches any of the compiled patterns
                rule_match = False
                for pat in rule['compiled_patterns']:
                    if mol.HasSubstructMatch(pat):
                        rule_match = True
                        break
                if rule_match:
                    # Molecule matches this rule
                    row.append(rule['prediction'])
                else:
                    # Molecule does not match this rule
                    row.append(0)
            except:
                # In case of error, append 0
                row.append(0)
        results.append(row)

    # Create DataFrame
    df = pd.DataFrame(results, columns=[f'Rule {rule["number"]}' for rule in rules])
    return df

--------------------------------------------------