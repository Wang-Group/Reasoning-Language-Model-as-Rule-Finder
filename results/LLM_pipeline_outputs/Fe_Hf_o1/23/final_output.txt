
    Target Name: Fe/Hf
    GPT Model: o1-preview-2024-09-12
    ML Model: ETC
    Current_Rules:
    **Start of Rules**

- **Rule 1**: Modifiers containing sulfur functional groups (thiol –SH or thioether –S–) predict a **high Fe/Hf value**.
  - *Rationale*: Sulfur atoms can coordinate with iron, enhancing Fe incorporation.
  - *Examples*:
    - 4-sulfanylbenzoic acid
    - 3-sulfanylpropanoic acid
    - Methionine derivatives (e.g., 2-[[(2S)-2-amino-4-methylsulfanylbutanoyl]amino]acetic acid)

- **Rule 2**: Modifiers with long aliphatic chains (5 carbons or more) terminating in an amino group predict a **high Fe/Hf value**.
  - *Rationale*: Long-chain amines can chelate iron ions, promoting higher Fe incorporation.
  - *Examples*:
    - 5-aminopentanoic acid
    - 7-aminoheptanoic acid
    - 8-aminooctanoic acid
    - (2S)-6-acetamido-2-aminohexanoic acid

- **Rule 3**: Modifiers featuring benzene rings substituted at the para position with electron-withdrawing groups (e.g., nitro, bromomethyl, pyridyl) predict a **high Fe/Hf value**.
  - *Rationale*: Electron-withdrawing groups increase the acidity of the carboxylic acid, enhancing metal coordination.
  - *Examples*:
    - 4-(bromomethyl)benzoic acid
    - 4-nitrobenzoic acid
    - 4-pyridin-4-ylbenzoic acid

- **Rule 4**: Modifiers with benzene rings substituted at the para position with electron-donating groups (e.g., amino, hydroxy, methyl) predict a **low Fe/Hf value**.
  - *Rationale*: Electron-donating groups decrease acidity, reducing metal coordination efficiency.
  - *Examples*:
    - 4-aminobenzoic acid
    - 4-methylbenzoic acid
    - 4-hydroxybenzoic acid derivatives

- **Rule 5**: Modifiers possessing multiple hydroxyl groups (polyols), especially with more than one hydroxyl group, predict a **low Fe/Hf value**.
  - *Rationale*: Multiple hydroxyls can lead to extensive hydrogen bonding, hindering iron coordination.
  - *Examples*:
    - (2R,3S,4R,5R)-2,3,4,5,6-pentahydroxyhexanoic acid
    - Compounds with sugar-like structures

- **Rule 6**: Modifiers with flexible ether chains ending with amino or methoxy groups predict a **high Fe/Hf value**.
  - *Rationale*: Ether chains increase solubility and flexibility, facilitating iron interaction.
  - *Examples*:
    - 2-[2-(2-methoxyethoxy)ethoxy]acetic acid
    - 3-[2-(2-aminoethoxy)ethoxy]propanoic acid

- **Rule 7**: Modifiers that are long-chain hydroxy acids with the hydroxyl group at the terminal (omega) position predict a **high Fe/Hf value**.
  - *Rationale*: Terminal hydroxyl groups can act as additional coordination sites for iron.
  - *Examples*:
    - 7-hydroxyheptanoic acid

- **Rule 8**: Modifiers that are long-chain aliphatic carboxylic acids without additional functional groups predict a **low Fe/Hf value**.
  - *Rationale*: Lack of additional coordinating groups results in weaker metal interactions.
  - *Examples*:
    - Octanoic acid
    - 2,2,3,3,4,4,5,5,5-nonafluoropentanoic acid

- **Rule 9**: Modifiers containing nitro groups predict a **high Fe/Hf value**.
  - *Rationale*: Nitro groups are strong electron-withdrawing groups, enhancing metal binding affinity.
  - *Examples*:
    - 4-nitrobenzoic acid

- **Rule 10**: Modifiers with aldehyde groups on benzene rings predict a **low Fe/Hf value**.
  - *Rationale*: Aldehyde groups can react with amines or other nucleophiles, reducing availability for metal coordination.
  - *Examples*:
    - 4-formylbenzoic acid
    - 5-formyl-2-hydroxybenzoic acid

- **Rule 11**: Modifiers containing nitrogen heterocyclic aromatic rings directly attached to benzene rings predict a **high Fe/Hf value**.
  - *Rationale*: Nitrogen heterocycles can serve as strong ligands for iron coordination.
  - *Examples*:
    - 4-pyridin-4-ylbenzoic acid
    - 4-pyridin-4-ylbutanoic acid

- **Rule 12**: Modifiers with indole rings predict a **low Fe/Hf value**.
  - *Rationale*: Indole rings may be too bulky or sterically hindered to coordinate effectively with iron.
  - *Examples*:
    - (2R)-2-amino-3-(1H-indol-3-yl)propanoic acid (tryptophan)

- **Rule 13**: Modifiers that are amino acids with nonpolar, aromatic side chains (e.g., phenylalanine) predict a **high Fe/Hf value**, whereas those with larger or more polar aromatic side chains predict a **low Fe/Hf value**.
  - *Rationale*: Smaller aromatic rings facilitate metal coordination without significant steric hindrance.
  - *Examples*:
    - High Fe/Hf: (2S)-2-amino-3-phenylpropanoic acid (phenylalanine)
    - Low Fe/Hf: (2R)-2-amino-3-(1H-indol-3-yl)propanoic acid (tryptophan)

**End of Rules**---------------------------------------------------------------


    Current_Matrix:
    Matrix Generator Message:
Rule 1,Rule 2,Rule 3,Rule 4,Rule 5,Rule 6,Rule 7,Rule 8,Rule 9,Rule 10,Rule 11,Rule 12,Rule 13
0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,-1,0,0,0,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,-1,0,0,0
0,0,0,0,-1,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,-1,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,-1,0,0,0,0,0,0,0,0
0,0,0,-1,-1,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,-1,0,0,0,0,0,0,0,0
1,0,0,-1,0,0,0,0,0,-1,0,0,0
0,0,0,0,0,1,0,0,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,-1,0,0,0
0,0,0,-1,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,-1,0
0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,-1,0,0,0,0,0,-1,0,0,0
1,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,-1,-1,0,0,0,0,-1,0,0,0
0,0,0,-1,0,0,0,0,0,-1,0,0,0
0,0,1,-1,0,0,0,0,1,-1,0,0,0
0,0,0,-1,0,0,0,0,0,-1,0,0,0
1,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,1,-1,0,0,0,0,0,-1,0,0,0
0,0,0,-1,-1,0,0,0,0,-1,0,0,0
0,0,0,0,-1,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,-1,0,0,0,0,0,0,0,0
0,0,0,-1,-1,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,1,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0

---------------------------------------------------------------


    Train Accuracy: 0.6857142857142857; Test Accuracy: 0.0
    Train Support: 0.22857142857142856; Test Support: 0.0
    Train Confidence: 0.8; Test Confidence: 0.5
    Train Lift: 1.6470588235294117; Test Lift: NONE
    Train Leverage: 0.08979591836734693; Test Leverage: NONE
    ----------------------------------------------------------------------------------

    Current Rule Code:
def rule2matrix(smiles_list):
    # Define the rules with their associated SMARTS patterns and predictions

    rules = [
        {
            'number': 1,
            'description': 'Modifiers containing sulfur functional groups (thiol –SH or thioether –S–) predict a high Fe/Hf value.',
            'patterns': [
                '[SX2H]',  # Thiol group
                '[SX2;!$(S=[O,N])]([#6])[#6]'  # Thioether group
            ],
            'prediction': 1
        },
        {
            'number': 2,
            'description': 'Modifiers with long aliphatic chains (5 carbons or more) terminating in an amino group predict a high Fe/Hf value.',
            'patterns': [
                '[CH2]{5,}[NX3;H2,H1,H0]'  # Aliphatic chain with 5 or more CH2 groups terminating in amino group
            ],
            'prediction': 1
        },
        {
            'number': 3,
            'description': 'Modifiers featuring benzene rings substituted at the para position with electron-withdrawing groups predict a high Fe/Hf value.',
            'patterns': [
                'c1ccc(cc1)[EWG]'  # Benzene ring with EWG substituent
            ],
            'substituents': {
                'EWG': ['[F,Cl,Br,I]', '[NX3+](=O)[O-]', '[CX3](=O)[#6]', '[CX4](F)(F)F', 'n1ccccc1']  # Halogens, nitro, carbonyl, trifluoromethyl, pyridyl
            },
            'prediction': 1
        },
        {
            'number': 4,
            'description': 'Modifiers with benzene rings substituted at the para position with electron-donating groups (e.g., amino, hydroxy, methyl) predict a low Fe/Hf value.',
            'patterns': [
                'c1ccc(cc1)[EDG]'  # Benzene ring with EDG substituent
            ],
            'substituents': {
                'EDG': ['[NH2]', '[OH]', 'C']  # Amino, hydroxy, methyl groups
            },
            'prediction': -1
        },
        {
            'number': 5,
            'description': 'Modifiers possessing multiple hydroxyl groups (polyols), especially with more than one hydroxyl group, predict a low Fe/Hf value.',
            'count_pattern': '[OX2H]',  # Hydroxyl groups
            'count_threshold': 2,
            'prediction': -1
        },
        {
            'number': 6,
            'description': 'Modifiers with flexible ether chains ending with amino or methoxy groups predict a high Fe/Hf value.',
            'patterns': [
                '[OX2][CH2][CH2][OX2][CH2][CH2][NX3;H2,H1,H0]',  # Ether chain ending with amino group
                '[OX2][CH2][CH2][OX2][CH2][CH2][OX2][CH3]'        # Ether chain ending with methoxy group
            ],
            'prediction': 1
        },
        {
            'number': 7,
            'description': 'Modifiers that are long-chain hydroxy acids with the hydroxyl group at the terminal (omega) position predict a high Fe/Hf value.',
            'patterns': [
                '[CX3](=O)[OX1H][CH2]{5,}[OX2H]'  # Carboxylic acid with terminal hydroxyl after 5 or more carbons
            ],
            'prediction': 1
        },
        {
            'number': 8,
            'description': 'Modifiers that are long-chain aliphatic carboxylic acids without additional functional groups predict a low Fe/Hf value.',
            'patterns': [
                '[CH3][CH2]{4,}[CX3](=O)[OX1H]'  # Long-chain carboxylic acid with 5 or more carbons
            ],
            'exclude_patterns': [
                '[!#6;!#1]'   # Exclude molecules with heteroatoms other than carboxyl group
            ],
            'prediction': -1
        },
        {
            'number': 9,
            'description': 'Modifiers containing nitro groups predict a high Fe/Hf value.',
            'patterns': [
                '[NX3+](=O)[O-]',  # Nitro group
                '[N+](=O)[O-]',    # Alternate nitro group pattern
            ],
            'prediction': 1
        },
        {
            'number': 10,
            'description': 'Modifiers with aldehyde groups on benzene rings predict a low Fe/Hf value.',
            'patterns': [
                'c1ccc(cc1)C=O'  # Aldehyde group on benzene ring
            ],
            'prediction': -1
        },
        {
            'number': 11,
            'description': 'Modifiers containing nitrogen heterocyclic aromatic rings directly attached to benzene rings predict a high Fe/Hf value.',
            'patterns': [
                'c1ccc(cc1)c2ncccc2'  # Benzene ring attached to pyridine
            ],
            'prediction': 1
        },
        {
            'number': 12,
            'description': 'Modifiers with indole rings predict a low Fe/Hf value.',
            'patterns': [
                'c1c2ccccc2[nH]c1'  # Indole ring
            ],
            'prediction': -1
        },
        {
            'number': 13,
            'description': 'Modifiers that are amino acids with nonpolar, aromatic side chains (e.g., phenylalanine) predict a high Fe/Hf value, whereas those with larger or more polar aromatic side chains predict a low Fe/Hf value.',
            'patterns': [
                '[NX3;H2][CX4H](C(=O)[OX1H])[CX4H2][c1ccccc1]'  # Phenylalanine-like amino acid
            ],
            'prediction': 1
        }
    ]

    # Compile SMARTS patterns
    for rule in rules:
        compiled_patterns = []
        for smarts in rule.get('patterns', []):
            # Check if the pattern contains substituents
            if 'substituents' in rule:
                for subst_key, subst_values in rule['substituents'].items():
                    for subst_smarts in subst_values:
                        pattern = smarts.replace(f'[{subst_key}]', subst_smarts)
                        pat = Chem.MolFromSmarts(pattern)
                        if pat:
                            compiled_patterns.append(pat)
            else:
                pat = Chem.MolFromSmarts(smarts)
                if pat:
                    compiled_patterns.append(pat)
        rule['compiled_patterns'] = compiled_patterns
        # Compile exclude patterns if any
        compiled_excludes = []
        for smarts in rule.get('exclude_patterns', []):
            pat = Chem.MolFromSmarts(smarts)
            if pat:
                compiled_excludes.append(pat)
        rule['compiled_exclude_patterns'] = compiled_excludes
        # Compile count patterns if any
        if 'count_pattern' in rule:
            count_pat = Chem.MolFromSmarts(rule['count_pattern'])
            rule['compiled_count_pattern'] = count_pat

    # Initialize results list
    results = []

    # Process each SMILES string
    for smi in smiles_list:
        mol = Chem.MolFromSmiles(smi)
        if mol is None:
            # If the molecule cannot be parsed, append a row of zeros
            results.append([0]*len(rules))
            continue
        row = []
        for rule in rules:
            try:
                match = False
                # Check exclude patterns if any
                exclude_match = False
                for pat in rule.get('compiled_exclude_patterns', []):
                    if mol.HasSubstructMatch(pat):
                        exclude_match = True
                        break
                if exclude_match:
                    row.append(0)
                    continue
                # Check count patterns if any
                if 'compiled_count_pattern' in rule and 'count_threshold' in rule:
                    matches = mol.GetSubstructMatches(rule['compiled_count_pattern'])
                    if len(matches) >= rule['count_threshold']:
                        match = True
                else:
                    # Check main patterns
                    for pat in rule['compiled_patterns']:
                        if mol.HasSubstructMatch(pat):
                            match = True
                            break
                if match:
                    row.append(rule['prediction'])
                else:
                    row.append(0)
            except Exception:
                # In case of any error, append 0
                row.append(0)
        # Append row for the current molecule
        results.append(row)
    # Create DataFrame with results
    df = pd.DataFrame(results, columns=[f'Rule {rule["number"]}' for rule in rules])
    return df
--------------------------------------------------
    Target Name: Fe/Hf
    GPT Model: o1-preview-2024-09-12
    ML Model: ETC
    Current_Rules:
    **Start of Rules**

- **Rule 1**: Modifiers containing both a **carboxylic acid group (-COOH)** and a **sulfur-containing functional group** (e.g., thiol –SH or thioether –S–) predict a **high Fe/Hf value**.
  - *Rationale*: Sulfur atoms are soft Lewis bases with a strong affinity for coordinating with iron ions. This enhances Fe incorporation into the catalyst. The carboxylic acid group anchors the modifier to the metal-organic layer (MOL).
  - *Examples*:
    - **4-sulfanylbenzoic acid**
    - **3-sulfanylpropanoic acid**
    - **2-[(2S)-2-amino-4-methylsulfanylbutanoyl]amino]acetic acid**

- **Rule 2**: Modifiers that are **aromatic carboxylic acids** substituted with **strong electron-withdrawing groups (EWGs)** such as **nitro (-NO₂)** or **halogens (e.g., bromo –Br, fluoro –F)** predict a **high Fe/Hf value**.
  - *Rationale*: Electron-withdrawing groups increase the acidity of the carboxylic acid, enhancing its ability to deprotonate and coordinate with iron ions. This strengthens the interaction between the modifier and Fe ions.
  - *Examples*:
    - **4-(bromomethyl)benzoic acid**
    - **4-nitrobenzoic acid**

- **Rule 3**: Modifiers that are **aromatic carboxylic acids** substituted with **electron-donating groups (EDGs)** such as **amino (-NH₂)**, **hydroxy (-OH)**, or **methyl (-CH₃)** groups predict a **low Fe/Hf value**.
  - *Rationale*: Electron-donating groups decrease the acidity of the carboxylic acid, reducing its tendency to coordinate with iron ions. This weakens the interaction between the modifier and Fe ions.
  - *Examples*:
    - **4-aminobenzoic acid**
    - **4-methylbenzoic acid**
    - **3-(4-hydroxyphenyl)propanoic acid**

- **Rule 4**: Modifiers containing an **aromatic ring** linked to a **pyridine ring** predict a **high Fe/Hf value**.
  - *Rationale*: The nitrogen atom in the pyridine ring serves as an additional coordination site for iron ions, enhancing Fe incorporation into the catalyst.
  - *Examples*:
    - **4-pyridin-4-ylbenzoic acid**
    - **4-pyridin-4-ylbutanoic acid**

- **Rule 5**: Modifiers with **flexible ether chains** ending with **polar functional groups** (e.g., methoxy –OCH₃, amino –NH₂), along with a **carboxylic acid group (-COOH)**, predict a **high Fe/Hf value**.
  - *Rationale*: The flexible ether chains allow the terminal polar groups to coordinate effectively with iron ions. The multiple oxygen atoms in the ether chain can also participate in coordination, enhancing Fe incorporation.
  - *Examples*:
    - **2-[2-(2-methoxyethoxy)ethoxy]acetic acid**
    - **3-[2-(2-aminoethoxy)ethoxy]propanoic acid**

- **Rule 6**: Modifiers that are **aliphatic amino acids** with a **terminal amino group (-NH₂)** and a **single carboxylic acid group (-COOH)** predict a **high Fe/Hf value**.
  - *Rationale*: The amino and carboxyl groups can act as bidentate ligands, effectively chelating iron ions and promoting Fe incorporation.
  - *Examples*:
    - **5-aminopentanoic acid**
    - **7-aminoheptanoic acid**
    - **8-aminooctanoic acid**

- **Rule 7**: Modifiers containing **multiple hydroxyl groups (-OH)** in addition to a **carboxylic acid group (-COOH)** predict a **low Fe/Hf value**.
  - *Rationale*: Multiple hydroxyl groups increase the hydrophilicity and hydrogen-bonding capacity of the modifier, which may hinder effective coordination with iron ions due to steric hindrance and competition with solvent molecules.
  - *Examples*:
    - **(2R,3S,4R,5R)-2,3,4,5,6-pentahydroxyhexanoic acid** (gluconic acid)
    - **2-[[1,3-dihydroxy-2-(hydroxymethyl)propan-2-yl]oxy]-2-oxoacetic acid**

- **Rule 8**: Modifiers containing **fluorinated aliphatic chains** or **strongly electron-withdrawing fluorinated groups**, along with a **carboxylic acid group (-COOH)**, predict a **low Fe/Hf value**.
  - *Rationale*: Fluorine's strong electronegativity decreases electron density on the carboxylate oxygen atoms, reducing their ability to coordinate with iron ions. Fluorinated chains are also highly hydrophobic, impeding interactions in polar environments.
  - *Examples*:
    - **2,2,3,3,4,4,5,5,5-nonafluoropentanoic acid**
    - **4-[(2,2,2-trifluoroacetyl)amino]butanoic acid**

- **Rule 9**: Modifiers that are **dicarboxylic acids** with **short aliphatic chains** predict a **variable Fe/Hf value**, depending on the chain length and functional groups.
  - *Rationale*: Short-chain dicarboxylic acids can either promote or hinder Fe coordination based on their ability to chelate iron ions effectively. Additional functional groups and chain flexibility play significant roles.
  - *Examples*:
    - **High Fe/Hf**: **(2S)-2-aminobutanedioic acid** (aspartic acid)
    - **Low Fe/Hf**: **(2S)-2-aminopentanedioic acid** (glutamic acid)

- **Rule 10**: Modifiers containing **heterocyclic aromatic rings with multiple nitrogen atoms**, such as **pyrazole**, predict a **low Fe/Hf value**.
  - *Rationale*: Multiple nitrogen atoms in a heterocycle can delocalize electron density, reducing the availability of lone pairs for effective coordination with iron ions. Steric hindrance may also interfere with Fe binding.
  - *Examples*:
    - **1H-pyrazole-4-carboxylic acid**

- **Rule 11**: Modifiers that are **omega-hydroxy acids** (terminal hydroxyl group –OH and a carboxylic acid group –COOH) predict a **high Fe/Hf value**.
  - *Rationale*: The terminal hydroxyl group serves as an additional coordination site, enhancing interaction with iron ions. The flexibility of the aliphatic chain aids in effective chelation.
  - *Examples*:
    - **7-hydroxyheptanoic acid**

- **Rule 12**: Modifiers containing an **aromatic ring** with **methoxy groups (-OCH₃)** and a **carbonyl group (>C=O)** adjacent to the ring, along with a **carboxylic acid group (-COOH)**, predict a **high Fe/Hf value**.
  - *Rationale*: Methoxy groups increase electron density through resonance, enhancing the ability of adjacent carbonyl and carboxylate groups to coordinate with iron ions.
  - *Examples*:
    - **4-(3,4-dimethoxyphenyl)-4-oxobutanoic acid**

- **Rule 13**: Modifiers containing both a **carboxylic acid group (-COOH)** and an **aldehyde (-CHO)** group attached to an aromatic ring predict a **low Fe/Hf value**.
  - *Rationale*: Aldehyde groups can participate in side reactions or form intramolecular hydrogen bonds, reducing the availability of coordination sites for iron ions.
  - *Examples*:
    - **4-formylbenzoic acid**
    - **5-formyl-2-hydroxybenzoic acid**

- **Rule 14**: Modifiers that are **alpha-amino acids** with **bulky or heterocyclic side chains** show variable effects on the Fe/Hf value, and no definitive prediction can be made without additional context.
  - *Rationale*: Bulky side chains may hinder coordination due to steric effects, but specific interactions depend on the nature of the side chain and its ability to participate in metal coordination.
  - *Examples*:
    - **High Fe/Hf**: **(2S)-2-amino-3-phenylpropanoic acid** (phenylalanine)
    - **Low Fe/Hf**: **(2R)-2-amino-3-(1H-indol-3-yl)propanoic acid** (tryptophan)

- **Rule 15**: Modifiers with **oxidized aromatic heterocycles** (e.g., **pyridine N-oxide**), along with a **carboxylic acid group (-COOH)**, predict a **low Fe/Hf value**.
  - *Rationale*: Oxidation of the heterocyclic nitrogen reduces its electron density and lone pair availability, diminishing its ability to coordinate with iron ions.
  - *Examples*:
    - **2-oxo-1H-pyridine-4-carboxylic acid**

**End of Rules**

---

These rules collectively explain the observed relationships between the structural features of the molecular modifiers and their impact on the Fe/Hf ratio. By considering combinations of functional groups and underlying chemical principles, the rules provide predictive guidance for designing modifiers to achieve desired Fe/Hf values.---------------------------------------------------------------


    Current_Matrix:
    Matrix Generator Message:
Rule 1,Rule 2,Rule 3,Rule 4,Rule 5,Rule 6,Rule 7,Rule 8,Rule 9,Rule 10,Rule 11,Rule 12,Rule 13,Rule 14,Rule 15
0,0,0,1,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,1,0,0,0,0,1,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,1,0,0,0,0,1,0,0,0,0
0,0,0,0,0,1,0,0,0,0,1,0,0,0,0
0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,1,0,0,0,0
0,0,0,0,0,0,0,0,0,0,1,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,1,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,1,0,0,0,0
1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,1,0,0,0,0,0,1,0,0,0,0
0,0,0,1,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,-1,0,0,1,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1,0,0,0,0,0,0,0,0,0,1,0,0,0,0
0,0,-1,0,0,0,0,0,0,0,0,0,-1,0,0
0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0
0,1,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0
1,0,0,0,0,1,0,0,0,0,1,0,0,0,0
0,0,0,1,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,1,0,0,0,0,0,0,1,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,1,0,0,0,0
0,0,0,0,0,0,0,-1,0,0,1,0,0,0,0
0,0,0,0,0,0,0,0,0,0,1,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,1,0,0,0,0,1,0,0,0,0
0,0,0,0,1,1,0,0,0,0,1,0,0,0,0
0,0,0,0,0,1,0,0,0,0,1,0,0,0,0
0,0,0,0,0,1,0,0,0,0,1,0,0,0,0

---------------------------------------------------------------


    Train Accuracy: 0.7714285714285715; Test Accuracy: 1.0
    Train Support: 0.11428571428571428; Test Support: 0.0
    Train Confidence: 0.96875; Test Confidence: 0.5
    Train Lift: 1.9122753267973858; Test Lift: NONE
    Train Leverage: 0.05244897959183674; Test Leverage: NONE
    ----------------------------------------------------------------------------------

    Current Rule Code:
def rule2matrix(smiles_list):
    from rdkit import Chem
    import pandas as pd

    # Define SMARTS patterns for functional groups

    # Carboxylic acid group (-COOH) and carboxylate anion (-COO-)
    carboxylic_acid = ['[CX3](=O)[OX2H1]', '[CX3](=O)[O-]']

    # Thiol group (-SH)
    thiol = '[SX2H]'

    # Thioether group (-S-)
    thioether = '[#6][SX2][#6]'

    # Aromatic carboxylic acid
    aromatic_carboxylic_acid = ['[c][CX3](=O)[OX2H1]', '[c][CX3](=O)[O-]']

    # Nitro group attached to aromatic ring
    nitro_group_on_aromatic = '[c][N+](=O)[O-]'

    # Halogen attached to aromatic ring
    halogen_on_aromatic = '[c][F,Cl,Br,I]'

    # Amino group attached to aromatic ring (aniline)
    amino_on_aromatic = '[c][NX3H2]'

    # Hydroxyl group attached to aromatic ring (phenol)
    hydroxyl_on_aromatic = '[c][OX2H]'

    # Methyl group attached to aromatic ring
    methyl_on_aromatic = '[c][CH3]'

    # Pyridine ring
    pyridine_ring = 'n1ccccc1'

    # Ether linkage in chain
    ether_linkage = '[#6][OX2][#6]'

    # Terminal methoxy group
    terminal_methoxy = '[OX2][CH3]'

    # Terminal amino group
    terminal_amino = '[NX3H2]'

    # Multiple hydroxyl groups (-OH)
    hydroxyl_group = '[OX2H]'

    # Fluorinated aliphatic chain
    fluorinated_aliphatic_chain = '[CX4][F]'

    # Heterocyclic aromatic rings with multiple nitrogen atoms
    heterocyclic_aromatic_multiple_nitrogen = '[n][n]'

    # Aldehyde group attached to aromatic ring
    aldehyde_on_aromatic = '[c][CX3H]=O'

    # Oxidized aromatic heterocycles (pyridine N-oxide)
    oxidized_pyridine = '[n+](=O)[a]'

    # Aromatic ring with methoxy group
    aromatic_methoxy = '[c][OX2][CH3]'

    # Carbonyl group adjacent to aromatic ring
    carbonyl_adjacent_aromatic = '[c][CX3](=O)[#6]'

    # Exclude aromatic rings
    exclude_aromatic = '[a]'

    # Define the rules with their associated patterns and predictions
    rules = [
        {
            'number': 1,
            'description': 'Modifiers containing both a carboxylic acid group (-COOH) and a sulfur-containing functional group (thiol -SH or thioether -S-) predict a high Fe/Hf value.',
            'patterns': [
                carboxylic_acid,  # Carboxylic acid
                [thiol, thioether]  # Thiol or Thioether
            ],
            'prediction': 1
        },
        {
            'number': 2,
            'description': 'Modifiers that are aromatic carboxylic acids substituted with strong electron-withdrawing groups (EWGs) such as nitro (-NO2) or halogens (e.g., bromo -Br, fluoro -F) predict a high Fe/Hf value.',
            'patterns': [
                aromatic_carboxylic_acid,  # Aromatic carboxylic acid
                [nitro_group_on_aromatic, halogen_on_aromatic]  # Nitro group or halogen on aromatic ring
            ],
            'prediction': 1
        },
        {
            'number': 3,
            'description': 'Modifiers that are aromatic carboxylic acids substituted with electron-donating groups (EDGs) such as amino (-NH2), hydroxy (-OH), or methyl (-CH3) groups predict a low Fe/Hf value.',
            'patterns': [
                aromatic_carboxylic_acid,  # Aromatic carboxylic acid
                [amino_on_aromatic, hydroxyl_on_aromatic, methyl_on_aromatic]  # EDG on aromatic ring
            ],
            'prediction': -1
        },
        {
            'number': 4,
            'description': 'Modifiers containing an aromatic ring linked to a pyridine ring predict a high Fe/Hf value.',
            'patterns': [
                [pyridine_ring]  # Presence of pyridine ring
            ],
            'prediction': 1
        },
        {
            'number': 5,
            'description': 'Modifiers with flexible ether chains ending with polar functional groups (e.g., methoxy -OCH3, amino -NH2), along with a carboxylic acid group (-COOH), predict a high Fe/Hf value.',
            'patterns': [
                carboxylic_acid,  # Carboxylic acid
                [ether_linkage],  # Ether linkage
                [terminal_methoxy, terminal_amino]  # Terminal methoxy or amino group
            ],
            'prediction': 1
        },
        {
            'number': 6,
            'description': 'Modifiers that are aliphatic amino acids with a terminal amino group (-NH2) and a single carboxylic acid group (-COOH) predict a high Fe/Hf value.',
            'patterns': [
                carboxylic_acid,  # Carboxylic acid
                [terminal_amino]  # Terminal amino group
            ],
            'exclude_patterns': [
                [exclude_aromatic]  # Exclude aromatic rings
            ],
            'prediction': 1
        },
        {
            'number': 7,
            'description': 'Modifiers containing multiple hydroxyl groups (-OH) in addition to a carboxylic acid group (-COOH) predict a low Fe/Hf value.',
            'patterns': [
                carboxylic_acid,  # Carboxylic acid
                [hydroxyl_group]  # Hydroxyl group
            ],
            'count_threshold': {'[OX2H]': 2},  # At least 2 hydroxyl groups
            'prediction': -1
        },
        {
            'number': 8,
            'description': 'Modifiers containing fluorinated aliphatic chains or strongly electron-withdrawing fluorinated groups, along with a carboxylic acid group (-COOH), predict a low Fe/Hf value.',
            'patterns': [
                carboxylic_acid,  # Carboxylic acid
                [fluorinated_aliphatic_chain]  # Fluorine atoms in aliphatic chain
            ],
            'prediction': -1
        },
        {
            'number': 9,
            'description': 'Modifiers that are dicarboxylic acids with short aliphatic chains predict a variable Fe/Hf value, depending on the chain length and functional groups.',
            'patterns': [
                # Variable prediction, set prediction to 0
            ],
            'prediction': 0
        },
        {
            'number': 10,
            'description': 'Modifiers containing heterocyclic aromatic rings with multiple nitrogen atoms, such as pyrazole, predict a low Fe/Hf value.',
            'patterns': [
                [heterocyclic_aromatic_multiple_nitrogen]  # Heterocyclic aromatic rings with multiple nitrogen
            ],
            'prediction': -1
        },
        {
            'number': 11,
            'description': 'Modifiers that are omega-hydroxy acids (terminal hydroxyl group -OH and a carboxylic acid group -COOH) predict a high Fe/Hf value.',
            'patterns': [
                carboxylic_acid,  # Carboxylic acid
                [hydroxyl_group]  # Hydroxyl group
            ],
            'exclude_patterns': [
                [exclude_aromatic]  # Exclude aromatic rings
            ],
            'terminal_hydroxyl': True,
            'prediction': 1
        },
        {
            'number': 12,
            'description': 'Modifiers containing an aromatic ring with methoxy groups (-OCH3) and a carbonyl group (>C=O) adjacent to the ring, along with a carboxylic acid group (-COOH), predict a high Fe/Hf value.',
            'patterns': [
                carboxylic_acid,  # Carboxylic acid
                [aromatic_methoxy],  # Methoxy group on aromatic ring
                [carbonyl_adjacent_aromatic]  # Carbonyl group adjacent to aromatic ring
            ],
            'prediction': 1
        },
        {
            'number': 13,
            'description': 'Modifiers containing both a carboxylic acid group (-COOH) and an aldehyde (-CHO) group attached to an aromatic ring predict a low Fe/Hf value.',
            'patterns': [
                carboxylic_acid,  # Carboxylic acid
                [aldehyde_on_aromatic]  # Aldehyde group attached to aromatic ring
            ],
            'prediction': -1
        },
        {
            'number': 14,
            'description': 'Modifiers that are alpha-amino acids with bulky or heterocyclic side chains show variable effects on the Fe/Hf value, and no definitive prediction can be made without additional context.',
            'patterns': [
                # Variable effect, set prediction to 0
            ],
            'prediction': 0
        },
        {
            'number': 15,
            'description': 'Modifiers with oxidized aromatic heterocycles (e.g., pyridine N-oxide), along with a carboxylic acid group (-COOH), predict a low Fe/Hf value.',
            'patterns': [
                carboxylic_acid,  # Carboxylic acid
                [oxidized_pyridine]  # Oxidized aromatic heterocycles
            ],
            'prediction': -1
        }
    ]

    # Compile SMARTS patterns
    for rule in rules:
        compiled_patterns = []
        for group in rule.get('patterns', []):
            compiled_group = [Chem.MolFromSmarts(p) for p in group]
            compiled_patterns.append(compiled_group)
        rule['compiled_patterns'] = compiled_patterns
        # Compile exclude patterns if any
        if 'exclude_patterns' in rule:
            compiled_excludes = []
            for group in rule['exclude_patterns']:
                compiled_group = [Chem.MolFromSmarts(p) for p in group]
                compiled_excludes.append(compiled_group)
            rule['compiled_exclude_patterns'] = compiled_excludes

    # Initialize results list
    results = []

    # Process each SMILES string
    for smi in smiles_list:
        mol = Chem.MolFromSmiles(smi)
        if mol is None:
            # If the molecule cannot be parsed, append a row of zeros
            results.append([0]*len(rules))
            continue
        row = []
        for rule in rules:
            try:
                match = True
                # Check exclude patterns if any
                if 'exclude_patterns' in rule:
                    for group in rule['compiled_exclude_patterns']:
                        for pat in group:
                            if mol.HasSubstructMatch(pat):
                                match = False
                                break
                        if not match:
                            break
                    if not match:
                        row.append(0)
                        continue
                # Check required patterns
                for compiled_group in rule['compiled_patterns']:
                    group_match = False
                    for pat in compiled_group:
                        matches = mol.GetSubstructMatches(pat)
                        if matches:
                            # If a count threshold is specified for this pattern
                            if 'count_threshold' in rule and pat.GetSmarts() in rule['count_threshold']:
                                threshold = rule['count_threshold'][pat.GetSmarts()]
                                if len(matches) >= threshold:
                                    group_match = True
                                    break
                            else:
                                group_match = True
                                break
                    if not group_match:
                        match = False
                        break
                if match:
                    row.append(rule['prediction'])
                else:
                    row.append(0)
            except Exception as e:
                # In case of any error, append 0 and optionally log the error
                # print(f"Error processing rule {rule['number']} for SMILES {smi}: {e}")
                row.append(0)
        results.append(row)
    # Create DataFrame with results
    df = pd.DataFrame(results, columns=[f'Rule {rule['number']}' for rule in rules])
    return df

--------------------------------------------------
    Target Name: Fe/Hf
    GPT Model: o1-preview-2024-09-12
    ML Model: ETC
    Current_Rules:
    **Start of Rules**

1. **Modifiers with Carboxylic Acid Attached to Aromatic Rings Predict Fe/Hf Based on Substituents**

   - **Description**: For modifiers containing a **carboxylic acid group (-COOH)** attached to an **aromatic ring**:
     - If the ring has **strong electron-withdrawing groups (EWGs)** such as **halogens (e.g., -Br)** or **nitro groups (-NO₂)**, the modifier predicts a **high Fe/Hf value**.
     - If the ring has **electron-donating groups (EDGs)** such as **amino (-NH₂)**, **hydroxy (-OH)**, **alkyl groups (e.g., -CH₃)**, **aldehyde (-CHO)**, or **methoxy (-OCH₃)**, the modifier predicts a **low Fe/Hf value**.
   - **Rationale**: EWGs increase the acidity and coordinating ability of the carboxylate group, enhancing Fe incorporation. EDGs decrease acidity, reducing coordination with Fe ions.
   - **Examples**:
     - **High Fe/Hf**:
       - **4-(bromomethyl)benzoic acid** (High Fe/Hf)
       - **4-nitrobenzoic acid** (High Fe/Hf)
     - **Low Fe/Hf**:
       - **4-aminobenzoic acid** (Low Fe/Hf)
       - **4-methylbenzoic acid** (Low Fe/Hf)
       - **4-formylbenzoic acid** (Low Fe/Hf)
       - **5-formyl-2-hydroxybenzoic acid** (Low Fe/Hf)
       - **2-[(4-hydroxybenzoyl)amino]acetic acid** (Low Fe/Hf)

2. **Modifiers Containing Sulfur Atoms Predict High Fe/Hf**

   - **Description**: Modifiers with **sulfur-containing functional groups**, such as **thiol (-SH)** or **thioether (-S-)**, along with a **carboxylic acid group (-COOH)**, predict a **high Fe/Hf value**.
   - **Rationale**: Sulfur atoms are good ligands for Fe ions due to their lone pairs, enhancing coordination and Fe incorporation.
   - **Examples**:
     - **4-sulfanylbenzoic acid** (High Fe/Hf)
     - **3-sulfanylpropanoic acid** (High Fe/Hf)
     - **2-[[(2S)-2-amino-4-methylsulfanylbutanoyl]amino]acetic acid** (High Fe/Hf)

3. **Modifiers Containing Pyridine Rings Predict High Fe/Hf**

   - **Description**: Modifiers with a **pyridine ring** (aromatic ring containing a nitrogen atom) and a **carboxylic acid group (-COOH)** predict a **high Fe/Hf value**.
   - **Rationale**: The nitrogen atom in the pyridine ring can coordinate with Fe ions, enhancing Fe binding and incorporation.
   - **Examples**:
     - **4-pyridin-4-ylbenzoic acid** (High Fe/Hf)
     - **4-pyridin-4-ylbutanoic acid** (High Fe/Hf)

4. **Aliphatic Amino Acids with Terminal Amino Groups Predict High Fe/Hf**

   - **Description**: **Straight-chain aliphatic amino acids** with a **terminal amino group (-NH₂)** and a **carboxylic acid group (-COOH)** predict a **high Fe/Hf value**.
   - **Rationale**: The amino and carboxyl groups can chelate Fe ions, enhancing stability and incorporation into the catalyst.
   - **Examples**:
     - **5-aminopentanoic acid** (High Fe/Hf)
     - **7-aminoheptanoic acid** (High Fe/Hf)
     - **8-aminooctanoic acid** (High Fe/Hf)

5. **Modifiers That Are Alpha-Amino Dicarboxylic Acids Predict Fe/Hf Based on Chain Length**

   - **Description**: **Alpha-amino dicarboxylic acids** predict Fe/Hf values depending on chain length:
     - **Short-chain acids** (e.g., **aspartic acid**): **High Fe/Hf value**
     - **Longer-chain acids** (e.g., **glutamic acid**): **Low Fe/Hf value**
   - **Rationale**: Shorter chains allow closer proximity of coordinating groups, enhancing Fe chelation.
   - **Examples**:
     - **(2S)-2-aminobutanedioic acid** (Aspartic acid) (High Fe/Hf)
     - **(2S)-2-aminopentanedioic acid** (Glutamic acid) (Low Fe/Hf)

6. **Modifiers with Flexible Ether Chains Ending with Polar Groups Predict High Fe/Hf**

   - **Description**: Modifiers containing **flexible ether chains (–O–)** ending with **polar groups** like **methoxy (-OCH₃)** or **amino (-NH₂)**, along with a **carboxylic acid group (-COOH)**, predict a **high Fe/Hf value**.
   - **Rationale**: Ether oxygen atoms and terminal polar groups can coordinate with Fe ions, enhancing incorporation.
   - **Examples**:
     - **2-[2-(2-methoxyethoxy)ethoxy]acetic acid** (High Fe/Hf)
     - **3-[2-(2-aminoethoxy)ethoxy]propanoic acid** (High Fe/Hf)

7. **Modifiers with Multiple Hydroxyl Groups and Carboxylic Acid Predict Low Fe/Hf**

   - **Description**: Modifiers with **multiple hydroxyl groups (-OH)** and a **carboxylic acid group (-COOH)** predict a **low Fe/Hf value**.
   - **Rationale**: Excessive hydroxyl groups may hinder Fe coordination due to steric hindrance and competition with solvent molecules.
   - **Examples**:
     - **(2R,3S,4R,5R)-2,3,4,5,6-pentahydroxyhexanoic acid** (Low Fe/Hf)
     - **2-[[1,3-dihydroxy-2-(hydroxymethyl)propan-2-yl]oxy]-2-oxoacetic acid** (Low Fe/Hf)

8. **Modifiers with Fluorinated Chains Predict Low Fe/Hf**

   - **Description**: Modifiers containing **fluorinated aliphatic chains** or **fluorinated groups**, along with a **carboxylic acid group (-COOH)**, predict a **low Fe/Hf value**.
   - **Rationale**: Fluorine's strong electronegativity reduces electron density on coordinating atoms, decreasing Fe binding.
   - **Examples**:
     - **2,2,3,3,4,4,5,5,5-nonafluoropentanoic acid** (Low Fe/Hf)
     - **4-[(2,2,2-trifluoroacetyl)amino]butanoic acid** (Low Fe/Hf)

9. **Simple Aliphatic Carboxylic Acids Without Additional Functional Groups Predict Low Fe/Hf**

   - **Description**: **Straight-chain aliphatic carboxylic acids** without additional coordinating groups predict a **low Fe/Hf value**.
   - **Rationale**: Lack of additional coordinating sites results in weaker Fe binding.
   - **Examples**:
     - **Octanoic acid** (Low Fe/Hf)
     - **4-oxoheptanedioic acid** (Low Fe/Hf)

10. **Modifiers That Are Omega-Hydroxy Acids Predict High Fe/Hf**

    - **Description**: Modifiers that are **omega-hydroxy acids** (terminal **hydroxyl group (-OH)** and a **carboxylic acid group (-COOH)**) predict a **high Fe/Hf value**.
    - **Rationale**: The hydroxyl group provides an additional coordination site for Fe ions.
    - **Example**:
      - **7-hydroxyheptanoic acid** (High Fe/Hf)

11. **Modifiers Containing Aliphatic Chains with Additional Amino Groups Predict High Fe/Hf**

    - **Description**: Modifiers with **aliphatic chains** containing **amino groups (-NH₂)**, in addition to a **carboxylic acid group (-COOH)**, predict a **high Fe/Hf value**.
    - **Rationale**: Amino groups enhance Fe coordination through chelation.
    - **Examples**:
      - **3-[2-(2-aminoethoxy)ethoxy]propanoic acid** (High Fe/Hf)
      - **(2S)-6-acetamido-2-aminohexanoic acid** (High Fe/Hf)

12. **Modifiers with Aromatic Rings and Carbonyl Groups Predict High Fe/Hf**

    - **Description**: Modifiers containing **aromatic rings** with adjacent **carbonyl groups (>C=O)** and a **carboxylic acid group (-COOH)** predict a **high Fe/Hf value**.
    - **Rationale**: Carbonyl groups adjacent to aromatic rings can enhance resonance stabilization and coordinate with Fe ions.
    - **Examples**:
      - **4-(3,4-dimethoxyphenyl)-4-oxobutanoic acid** (High Fe/Hf)
      - **1,3-dioxo-2-benzofuran-5-carboxylic acid** (High Fe/Hf)

13. **Modifiers with Aromatic Rings and Hydroxyl Groups Predict Low Fe/Hf**

    - **Description**: Modifiers containing **aromatic rings** with **hydroxyl groups (-OH)** and a **carboxylic acid group (-COOH)** predict a **low Fe/Hf value**.
    - **Rationale**: Hydroxyl groups on aromatic rings can reduce coordinating ability with Fe ions due to intramolecular hydrogen bonding.
    - **Examples**:
      - **5-formyl-2-hydroxybenzoic acid** (Low Fe/Hf)
      - **2-[(4-hydroxybenzoyl)amino]acetic acid** (Low Fe/Hf)

**End of Rules**

---

**Summary:**

- **Functional Groups Influence Fe/Hf Ratios**: Specific combinations of functional groups in molecular modifiers directly impact the Fe/Hf value by affecting the coordination with iron ions.
- **Electron-Withdrawing vs. Electron-Donating Groups**: EWGs enhance Fe coordination by increasing acidity, while EDGs reduce it.
- **Presence of Additional Coordination Sites**: Modifiers with sulfur atoms, nitrogen heterocycles, amino groups, or ether chains with polar termini provide extra coordination sites, leading to higher Fe incorporation.
- **Chain Length and Flexibility**: Shorter chains and flexible linkages facilitate effective chelation with Fe ions.
- **Steric and Electronic Hindrance**: Excessive hydroxyl groups, fluorination, or certain aromatic substitutions can hinder Fe coordination, resulting in lower Fe/Hf values.

**Application of the Rules:**

- **Predictive Tool**: These rules can be used to predict whether a new modifier will result in a high or low Fe/Hf value based on its structural features.
- **Modifier Design**: Researchers can design modifiers to achieve desired Fe/Hf ratios by incorporating functional groups that promote or inhibit Fe coordination.
- **Broad Dataset Coverage**: The rules cover a wide range of modifiers in the dataset, balancing simplicity and specificity.

---

By considering underlying physicochemical properties and combining multiple sub-structures, the rules provide clear predictions for the Fe/Hf value. They maintain a balance between broad coverage and specificity, aligning with the requirements to optimize the understanding and control of Fe incorporation in the catalyst system.---------------------------------------------------------------


    Current_Matrix:
    Matrix Generator Message:
Rule 1,Rule 2,Rule 3,Rule 4,Rule 5,Rule 6,Rule 7,Rule 8,Rule 9,Rule 10,Rule 11,Rule 12,Rule 13,Rule 14
0,0,0,1,0,0,0,0,-1,0,0,0,1,0
0,0,0,0,1,0,-1,0,-1,0,0,0,0,0
0,-1,0,0,0,0,0,0,-1,0,0,0,1,0
0,0,0,0,1,0,-1,0,-1,0,0,0,0,0
0,0,0,0,1,0,0,0,-1,0,0,0,0,0
0,-1,0,0,0,0,0,0,-1,0,0,0,1,0
0,0,0,0,0,0,0,0,-1,0,0,0,0,0
0,0,0,0,0,0,0,0,-1,0,0,0,0,0
0,0,0,0,0,0,0,0,-1,0,0,0,0,-1
0,0,0,1,0,0,0,0,-1,0,0,0,1,0
0,0,0,0,0,0,0,0,-1,0,0,0,0,0
0,0,1,0,0,0,0,0,-1,0,0,0,1,0
0,0,0,0,0,0,0,0,-1,0,0,0,0,0
0,0,0,1,0,0,0,0,-1,0,0,0,1,0
0,0,0,0,0,0,-1,0,-1,0,0,0,0,0
0,0,0,0,0,0,0,0,-1,-1,0,0,0,0
0,0,0,1,0,0,-1,0,-1,0,0,0,0,0
0,0,0,0,0,0,0,0,-1,0,0,0,1,0
0,0,0,0,0,0,0,0,-1,0,0,0,1,0
0,0,1,0,0,0,0,0,-1,0,0,0,0,0
0,-1,0,0,0,0,0,0,-1,0,0,0,1,-1
0,-1,0,0,0,0,0,0,-1,0,0,0,1,0
1,-1,0,0,0,0,0,0,-1,0,0,0,1,0
0,-1,0,0,0,0,0,0,-1,0,0,0,1,0
0,0,1,0,1,0,0,0,-1,0,0,0,0,0
0,0,0,1,0,0,0,0,-1,0,0,0,0,0
0,0,0,0,0,0,0,0,-1,0,0,0,1,0
0,0,0,0,0,0,0,0,-1,0,0,0,1,-1
0,0,0,0,0,0,0,0,-1,0,0,0,0,0
0,0,0,0,0,0,0,0,-1,-1,0,0,0,0
0,0,0,0,0,0,0,0,-1,0,0,0,0,0
0,0,0,0,0,0,0,0,-1,0,0,0,0,-1
0,0,0,0,1,0,0,0,-1,0,0,0,0,0
0,0,0,0,1,0,0,0,-1,0,0,0,0,0
0,0,0,0,1,0,-1,0,-1,0,0,0,0,0
0,0,0,0,1,0,0,0,-1,0,0,0,0,0

---------------------------------------------------------------


    Train Accuracy: 0.7142857142857143; Test Accuracy: 1.0
    Train Support: 0.11428571428571428; Test Support: 0.0
    Train Confidence: 0.96875; Test Confidence: 0.5
    Train Lift: 1.9408700980392157; Test Lift: NONE
    Train Leverage: 0.05306122448979592; Test Leverage: NONE
    ----------------------------------------------------------------------------------

    Current Rule Code:
def rule2matrix(smiles_list):
    # Define SMARTS patterns for functional groups
    carboxylic_acid = '[CX3](=O)[OX2H1]'
    carboxylic_acid_on_aromatic = '[c][CX3](=O)[OX2H1]'
    
    # Electron-Withdrawing Groups (EWGs) on aromatic ring
    halogen_on_aromatic = '[c][F,Cl,Br,I]'
    nitro_on_aromatic = '[c][NX3+](=O)[O-]'
    
    # Electron-Donating Groups (EDGs) on aromatic ring
    amino_on_aromatic = '[c][NX3;H2,H1,H0]'
    hydroxy_on_aromatic = '[c][OX2H]'
    methoxy_on_aromatic = '[c][OX2][CH3]'
    alkyl_on_aromatic = '[c][CX4]'
    aldehyde_on_aromatic = '[c][CX3H](=O)'
    
    # Sulfur-containing groups
    thiol = '[SX2H]'
    thioether = '[#6][SX2][#6]'
    
    # Pyridine ring
    pyridine_ring = '[n][c][c][c][c][c]'
    
    # Primary aliphatic amine
    primary_aliphatic_amine = '[NX3;H2][CX4]'
    
    # Ether linkage
    ether_linkage = '[#6][OX2][#6]'
    
    # Terminal amino group
    terminal_amino = '[NX3;H2]'
    
    # Omega-hydroxy acids
    omega_hydroxy_acid = '[OX2H][CH2]{n}[CX3](=O)[OX2H1]'  # n>=1
    
    # Multiple hydroxyl groups
    hydroxyl_group = '[OX2H]'
    
    # Fluorinated chain
    fluorinated_chain = '[CX4][F]'
    
    # Carbonyl group adjacent to aromatic ring
    carbonyl_adjacent_to_aromatic = '[c][CX3](=O)'
    
    # Exclude patterns for simple aliphatic carboxylic acids
    exclude_amines = '[NX3]'
    exclude_sulfur_groups = '[S]'
    exclude_ethers = '[OX2][#6]'
    exclude_halogens = '[F,Cl,Br,I]'
    exclude_aromatic = '[a]'
    exclude_hydroxyl = '[OX2H]'
    
    # Define the rules with their associated patterns and predictions
    rules = [
        {
            'number': 1,
            'description': 'High Fe/Hf Value: Modifiers with carboxylic acid attached to aromatic ring and EWGs (halogens, nitro groups).',
            'patterns': [
                [carboxylic_acid_on_aromatic],
                [halogen_on_aromatic, nitro_on_aromatic]
            ],
            'prediction': 1
        },
        {
            'number': 2,
            'description': 'Low Fe/Hf Value: Modifiers with carboxylic acid attached to aromatic ring and EDGs (amino, hydroxy, alkyl, aldehyde, methoxy).',
            'patterns': [
                [carboxylic_acid_on_aromatic],
                [amino_on_aromatic, hydroxy_on_aromatic, methoxy_on_aromatic, alkyl_on_aromatic, aldehyde_on_aromatic]
            ],
            'prediction': -1
        },
        {
            'number': 3,
            'description': 'High Fe/Hf Value: Modifiers containing sulfur atoms and a carboxylic acid group (-COOH).',
            'patterns': [
                [thiol, thioether],
                [carboxylic_acid]
            ],
            'prediction': 1
        },
        {
            'number': 4,
            'description': 'High Fe/Hf Value: Modifiers containing pyridine rings and a carboxylic acid group (-COOH).',
            'patterns': [
                [pyridine_ring],
                [carboxylic_acid]
            ],
            'prediction': 1
        },
        {
            'number': 5,
            'description': 'High Fe/Hf Value: Aliphatic amino acids with terminal amino groups and a carboxylic acid group (-COOH).',
            'patterns': [
                [primary_aliphatic_amine],
                [carboxylic_acid]
            ],
            'exclude_patterns': [
                [exclude_aromatic]
            ],
            'prediction': 1
        },
        {
            'number': 6,
            'description': 'High Fe/Hf Value: Short-chain alpha-amino dicarboxylic acids (chain length <= 4 carbons).',
            'patterns': [
                ['[NX3;H2][CX4][CX3](=O)[OX2H1]'],  # Alpha amino acid
                [carboxylic_acid]
            ],
            'max_chain_length': 4,
            'prediction': 1
        },
        {
            'number': 7,
            'description': 'Low Fe/Hf Value: Longer-chain alpha-amino dicarboxylic acids (chain length > 4 carbons).',
            'patterns': [
                ['[NX3;H2][CX4][CX3](=O)[OX2H1]'],  # Alpha amino acid
                [carboxylic_acid]
            ],
            'min_chain_length': 5,
            'prediction': -1
        },
        {
            'number': 8,
            'description': 'High Fe/Hf Value: Modifiers with flexible ether chains ending with polar groups and a carboxylic acid group (-COOH).',
            'patterns': [
                ['[#6][OX2][#6][OX2][#6][NX3;H2,H1]', '[#6][OX2][#6][OX2][#6][OX2][CH3]'],
                [carboxylic_acid]
            ],
            'prediction': 1
        },
        {
            'number': 9,
            'description': 'Low Fe/Hf Value: Modifiers with multiple hydroxyl groups and a carboxylic acid group (-COOH).',
            'patterns': [
                [hydroxyl_group],
                [carboxylic_acid]
            ],
            'count_threshold': {hydroxyl_group: 2},
            'prediction': -1
        },
        {
            'number': 10,
            'description': 'Low Fe/Hf Value: Modifiers with fluorinated chains and a carboxylic acid group (-COOH).',
            'patterns': [
                [fluorinated_chain],
                [carboxylic_acid]
            ],
            'prediction': -1
        },
        {
            'number': 11,
            'description': 'Low Fe/Hf Value: Simple aliphatic carboxylic acids without additional functional groups.',
            'patterns': [
                [carboxylic_acid],
            ],
            'exclude_patterns': [
                [exclude_amines],
                [exclude_sulfur_groups],
                [exclude_ethers],
                [exclude_halogens],
                [exclude_aromatic],
                [exclude_hydroxyl]
            ],
            'prediction': -1
        },
        {
            'number': 12,
            'description': 'High Fe/Hf Value: Omega-hydroxy acids (terminal hydroxyl group and carboxylic acid group).',
            'patterns': [
                ['[OX2H][CH2][CH2][CH2][CH2][CX3](=O)[OX2H1]'],  # Example with 4 CH2 units
                [carboxylic_acid]
            ],
            'prediction': 1
        },
        {
            'number': 13,
            'description': 'High Fe/Hf Value: Modifiers with aromatic rings and carbonyl groups (>C=O) and a carboxylic acid group (-COOH).',
            'patterns': [
                [carbonyl_adjacent_to_aromatic],
                [carboxylic_acid]
            ],
            'prediction': 1
        },
        {
            'number': 14,
            'description': 'Low Fe/Hf Value: Modifiers with aromatic rings and hydroxyl groups (-OH) and a carboxylic acid group (-COOH).',
            'patterns': [
                [hydroxy_on_aromatic],
                [carboxylic_acid]
            ],
            'prediction': -1
        }
    ]
    
    # Compile SMARTS patterns
    for rule in rules:
        compiled_patterns = []
        for group in rule.get('patterns', []):
            compiled_group = [Chem.MolFromSmarts(p) for p in group]
            compiled_patterns.append(compiled_group)
        rule['compiled_patterns'] = compiled_patterns
        # Compile exclude patterns if any
        if 'exclude_patterns' in rule:
            compiled_excludes = []
            for group in rule['exclude_patterns']:
                compiled_group = [Chem.MolFromSmarts(p) for p in group]
                compiled_excludes.append(compiled_group)
            rule['compiled_exclude_patterns'] = compiled_excludes
    
    # Initialize results list
    results = []
    
    # Process each SMILES string
    for smi in smiles_list:
        mol = Chem.MolFromSmiles(smi)
        if mol is None:
            # If the molecule cannot be parsed, append a row of zeros
            results.append([0]*len(rules))
            continue
        row = []
        for rule in rules:
            try:
                match = True
                # Check exclude patterns if any
                if 'exclude_patterns' in rule:
                    for group in rule['compiled_exclude_patterns']:
                        for pat in group:
                            if mol.HasSubstructMatch(pat):
                                match = False
                                break
                        if not match:
                            break
                    if not match:
                        row.append(0)
                        continue
                # Check required patterns
                for compiled_group in rule['compiled_patterns']:
                    group_match = False
                    for pat in compiled_group:
                        matches = mol.GetSubstructMatches(pat)
                        if matches:
                            # If a count threshold is specified for this pattern
                            if 'count_threshold' in rule and pat in rule['count_threshold']:
                                threshold = rule['count_threshold'][pat]
                                if len(matches) >= threshold:
                                    group_match = True
                                    break
                            else:
                                group_match = True
                                break
                    if not group_match:
                        match = False
                        break
                # Check for chain length constraints
                if match and ('max_chain_length' in rule or 'min_chain_length' in rule):
                    chain_lengths = []
                    for pat in rule['compiled_patterns'][0]:
                        matches = mol.GetSubstructMatches(pat)
                        for match_atoms in matches:
                            chain_length = len(match_atoms)
                            chain_lengths.append(chain_length)
                    if 'max_chain_length' in rule and (not chain_lengths or min(chain_lengths) > rule['max_chain_length']):
                        match = False
                    if 'min_chain_length' in rule and (not chain_lengths or max(chain_lengths) < rule['min_chain_length']):
                        match = False
                if match:
                    row.append(rule['prediction'])
                else:
                    row.append(0)
            except Exception as e:
                # In case of any error, append 0
                row.append(0)
        results.append(row)
    # Create DataFrame with results
    df = pd.DataFrame(results, columns=[f'Rule {rule['number']}' for rule in rules])
    return df
--------------------------------------------------
    Target Name: Fe/Hf
    GPT Model: o1-preview-2024-09-12
    ML Model: ETC
    Current_Rules:
    **Start of Rules**

---

**Rule 1: Modifiers with Aromatic Carboxylic Acids Predict Fe/Hf Based on Substituents**

- **Description**: For modifiers containing a **carboxylic acid group (-COOH)** directly attached to an **aromatic ring**:
  - If the ring is substituted with **electron-withdrawing groups (EWGs)** such as **nitro (-NO₂)**, **halogens (e.g., bromo -Br)**, **trifluoromethyl (-CF₃)**, or **pyridyl rings**, the modifier predicts a **high Fe/Hf value**.
  - If the ring is unsubstituted or substituted with **electron-donating groups (EDGs)** like **amino (-NH₂)**, **hydroxy (-OH)**, **alkyl (-CH₃)**, or **methoxy (-OCH₃)**, the modifier predicts a **low Fe/Hf value**.
- **Underlying Property**: EWGs increase the acidity of the carboxylic acid and enhance its ability to coordinate with Fe ions. EDGs reduce acidity and coordination ability.
- **Examples**:
  - **High Fe/Hf**:
    - **4-(bromomethyl)benzoic acid**
    - **4-nitrobenzoic acid**
    - **4-pyridin-4-ylbenzoic acid**
  - **Low Fe/Hf**:
    - **4-aminobenzoic acid**
    - **4-methylbenzoic acid**
    - **5-formyl-2-hydroxybenzoic acid**

---

**Rule 2: Modifiers with Terminal Amino Groups Predict High Fe/Hf**

- **Description**: Modifiers containing a **terminal amino group (-NH₂)** at the opposite end of a **carboxylic acid group (-COOH)** in an **aliphatic chain** predict a **high Fe/Hf value**.
- **Underlying Property**: The amino and carboxyl groups at opposite ends can chelate Fe ions effectively due to spatial arrangement, increasing Fe incorporation.
- **Examples**:
  - **High Fe/Hf**:
    - **5-aminopentanoic acid**
    - **7-aminoheptanoic acid**
    - **8-aminooctanoic acid**
  - **Low Fe/Hf**:
    - **(2S)-2-aminopentanedioic acid** (Glutamic acid)

---

**Rule 3: Modifiers with Sulfur-Containing Groups Predict High Fe/Hf**

- **Description**: Modifiers containing **sulfur-containing functional groups** such as **thiol (-SH)** or **thioether (-S-)**, along with a **carboxylic acid group (-COOH)**, predict a **high Fe/Hf value**.
- **Underlying Property**: Sulfur atoms act as soft Lewis bases, forming strong coordination bonds with Fe(III) ions.
- **Examples**:
  - **4-sulfanylbenzoic acid**
  - **3-sulfanylpropanoic acid**
  - **2-[[(2S)-2-amino-4-methylsulfanylbutanoyl]amino]acetic acid**

---

**Rule 4: Modifiers with Multiple Hydroxyl Groups Predict Low Fe/Hf**

- **Description**: Modifiers containing **multiple hydroxyl groups (-OH)** in addition to a **carboxylic acid group (-COOH)** predict a **low Fe/Hf value**.
- **Underlying Property**: Extensive hydrogen bonding among hydroxyl groups reduces availability of coordination sites for Fe ions.
- **Examples**:
  - **(2R,3S,4R,5R)-2,3,4,5,6-pentahydroxyhexanoic acid** (Gluconic acid)
  - **2-[[1,3-dihydroxy-2-(hydroxymethyl)propan-2-yl]oxy]-2-oxoacetic acid**

---

**Rule 5: Modifiers with Fluorinated Aliphatic Chains Predict Low Fe/Hf**

- **Description**: Modifiers with **perfluorinated aliphatic chains** and a terminal **carboxylic acid group (-COOH)** predict a **low Fe/Hf value**.
- **Underlying Property**: Fluorine atoms withdraw electron density, decreasing the carboxylate's ability to coordinate with Fe ions.
- **Examples**:
  - **2,2,3,3,4,4,5,5,5-nonafluoropentanoic acid**
  - **4-[(2,2,2-trifluoroacetyl)amino]butanoic acid**

---

**Rule 6: Modifiers with Aromatic Hydroxyl Groups Predict Low Fe/Hf**

- **Description**: Modifiers with **aromatic rings** bearing **hydroxyl groups (-OH)** and a **carboxylic acid group (-COOH)** predict a **low Fe/Hf value**.
- **Underlying Property**: Phenolic hydroxyl groups can form intramolecular hydrogen bonds, reducing coordination with Fe ions.
- **Examples**:
  - **5-(4-hydroxyphenyl)pentanoic acid**
  - **3-(4-hydroxyphenyl)propanoic acid**
  - **2-[(4-hydroxybenzoyl)amino]acetic acid**

---

**Rule 7: Modifiers with Electron-Rich Heterocycles Predict Low Fe/Hf**

- **Description**: Modifiers containing **electron-rich heterocycles** such as **indole**, **imidazole**, or **pyrazole** rings predict a **low Fe/Hf value**.
- **Underlying Property**: The nitrogen atoms in these rings are involved in aromatic electron delocalization, making them less available for coordination with Fe ions.
- **Examples**:
  - **(2R)-2-amino-3-(1H-indol-3-yl)propanoic acid** (Tryptophan)
  - **1H-pyrazole-4-carboxylic acid**

---

**Rule 8: Modifiers with Pyridine Rings Predict Fe/Hf Based on Position of Nitrogen**

- **Description**: Modifiers containing a **pyridine ring**:
  - If the **nitrogen atom** is available for coordination (not sterically hindered), the modifier predicts a **high Fe/Hf value**.
  - If the nitrogen is less accessible (e.g., within a fused ring system or substituted), predicts **low Fe/Hf value**.
- **Underlying Property**: Pyridine nitrogen can act as a coordination site for Fe ions.
- **Examples**:
  - **High Fe/Hf**:
    - **4-pyridin-4-ylbenzoic acid**
    - **4-pyridin-4-ylbutanoic acid**
  - **Low Fe/Hf**:
    - **2-oxo-1H-pyridine-4-carboxylic acid**

---

**Rule 9: Modifiers with Alpha, Beta-Unsaturated Carbonyl Groups Predict High Fe/Hf**

- **Description**: Modifiers containing **alpha, beta-unsaturated carbonyl groups** (conjugated carbonyl systems) along with a **carboxylic acid group** predict a **high Fe/Hf value**.
- **Underlying Property**: The conjugated system stabilizes coordination with Fe ions via resonance structures.
- **Examples**:
  - **1,3-dioxo-2-benzofuran-5-carboxylic acid**
  - **4-(3,4-dimethoxyphenyl)-4-oxobutanoic acid**

---

**Rule 10: Modifiers with Simple Aliphatic Carboxylic Acids Predict Low Fe/Hf**

- **Description**: **Straight-chain aliphatic carboxylic acids** without additional coordinating functional groups predict a **low Fe/Hf value**.
- **Underlying Property**: Lack of donor atoms or groups results in minimal interaction with Fe ions.
- **Examples**:
  - **Octanoic acid**
  - **4-oxoheptanedioic acid**

---

**Rule 11: Modifiers with Ether Chains and Terminal Polar Groups Predict High Fe/Hf**

- **Description**: Modifiers featuring **polyether chains** (multiple **ether linkages (-O-)**) ending with a **polar group** such as **amino (-NH₂)** or **methoxy (-OCH₃)**, along with a **carboxylic acid group**, predict a **high Fe/Hf value**.
- **Underlying Property**: Ether oxygens and terminal polar groups provide multiple coordination sites, enhancing Fe binding.
- **Examples**:
  - **2-[2-(2-methoxyethoxy)ethoxy]acetic acid**
  - **3-[2-(2-aminoethoxy)ethoxy]propanoic acid**

---

**Rule 12: Modifiers with Multiple Carboxylic Acid Groups Predict Low Fe/Hf**

- **Description**: Modifiers containing **more than one carboxylic acid group (-COOH)** without additional coordinating groups predict a **low Fe/Hf value**.
- **Underlying Property**: Multiple carboxyl groups may deprotonate and repel each other, hindering effective Fe coordination.
- **Examples**:
  - **(2S)-2-aminopentanedioic acid** (Glutamic acid)
  - **4-oxoheptanedioic acid**

---

**Rule 13: Modifiers with Aliphatic Hydroxyl Groups Predict Fe/Hf Based on Position**

- **Description**: Modifiers containing **aliphatic hydroxyl groups (-OH)**:
  - If the **hydroxyl group** is at the terminal position opposite the **carboxylic acid group**, the modifier predicts a **high Fe/Hf value**.
  - If hydroxyl groups are multiple or near the carboxylic group, predicts **low Fe/Hf value**.
- **Underlying Property**: Terminal hydroxyl groups can act as coordination sites; multiple hydroxyls may hinder Fe binding due to hydrogen bonding.
- **Examples**:
  - **High Fe/Hf**:
    - **7-hydroxyheptanoic acid**
  - **Low Fe/Hf**:
    - **(2R,3S,4R,5R)-2,3,4,5,6-pentahydroxyhexanoic acid**

---

**Rule 14: Modifiers with Electron-Donating Groups Adjacent to Carboxyl Predict Low Fe/Hf**

- **Description**: Modifiers where **electron-donating groups (EDGs)** such as **amino (-NH₂)** or **hydroxy (-OH)** are adjacent to the **carboxylic acid group (-COOH)** predict a **low Fe/Hf value**.
- **Underlying Property**: EDGs decrease the acidity of the carboxylic acid, reducing its ability to coordinate with Fe ions.
- **Examples**:
  - **(2S)-2-aminopentanedioic acid** (Glutamic acid)
  - **(2R)-2-amino-3-(1H-indol-3-yl)propanoic acid** (Tryptophan)

---

**Rule 15: Modifiers with Ketone Groups Conjugated to Aromatic Systems Predict High Fe/Hf**

- **Description**: Modifiers containing **ketone groups (>C=O)** conjugated with **aromatic rings**, along with a **carboxylic acid group**, predict a **high Fe/Hf value**.
- **Underlying Property**: Conjugated ketones enhance electron delocalization, increasing electron density available for Fe coordination.
- **Examples**:
  - **1,3-dioxo-2-benzofuran-5-carboxylic acid**
  - **4-(3,4-dimethoxyphenyl)-4-oxobutanoic acid**

---

**End of Rules**---------------------------------------------------------------


    Current_Matrix:
    Matrix Generator Message:
Rule 1,Rule 2,Rule 3,Rule 4,Rule 5,Rule 6,Rule 7,Rule 8,Rule 9,Rule 10,Rule 11,Rule 12,Rule 13,Rule 14,Rule 15
1,0,0,0,0,0,0,0,1,0,0,0,0,0,0
0,0,1,0,-1,0,0,0,0,0,0,0,-1,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,-1,0,0,0,0,0,0,0,-1,1,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0
0,0,0,0,-1,0,-1,0,0,0,0,0,0,0,0
1,0,0,0,0,0,0,0,1,0,0,0,0,0,0
0,0,0,0,-1,0,0,0,0,0,0,0,0,1,0
0,0,0,1,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1,0,0,0,0,0,0,0,1,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0
0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,1,0,0,0,0,0,0,0,0,0,0,0
0,-1,0,0,-1,0,-1,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,1,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,-1,0,-1,0,0,0,0,0,0,0,0
0,0,0,0,-1,0,0,0,0,0,0,0,-1,0,0
0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0
0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0
0,0,0,0,-1,0,-1,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0

---------------------------------------------------------------


    Train Accuracy: 0.8571428571428571; Test Accuracy: 0.0
    Train Support: 0.10857142857142857; Test Support: 0.0
    Train Confidence: 0.96; Test Confidence: 0.5
    Train Lift: 1.9764705882352938; Test Lift: NONE
    Train Leverage: 0.05028571428571428; Test Leverage: NONE
    ----------------------------------------------------------------------------------

    Current Rule Code:
def rule2matrix(smiles_list):
    # Define SMARTS patterns for functional groups

    # Carboxylic acid group attached to an aromatic ring
    aromatic_carboxylic_acid = '[c][CX3](=O)[OX2H1]'
    carboxylate_anion_aromatic = '[c][CX3](=O)[O-]'

    # EWGs attached to aromatic ring
    nitro_on_aromatic = '[c][N+](=O)[O-]'
    halogen_on_aromatic = '[c][F,Cl,Br,I]'
    trifluoromethyl_on_aromatic = '[c][CX4](F)(F)F'
    # Pyridine ring (nitrogen heteroaromatic ring)
    pyridine_ring = 'n1ccccc1'

    EWGs_on_aromatic = [nitro_on_aromatic, halogen_on_aromatic, trifluoromethyl_on_aromatic, pyridine_ring]

    # EDGs attached to aromatic ring
    amino_on_aromatic = '[c][NX3;H2,H1]'
    hydroxy_on_aromatic = '[c][OX2H]'
    alkyl_on_aromatic = '[c][CH3]'
    methoxy_on_aromatic = '[c][OX2][CH3]'

    EDGs_on_aromatic = [amino_on_aromatic, hydroxy_on_aromatic, alkyl_on_aromatic, methoxy_on_aromatic]

    # Terminal amino group (-NH2) at the opposite end of carboxylic acid in an aliphatic chain
    terminal_amino_carboxylic_acid = '[NX3;H2][*][*][*][CX3](=O)[OX2H1]'

    # Sulfur-containing groups (thiol or thioether) and carboxylic acid group
    thiol = '[SX2H]'
    thioether = '[#16X2][#6]'
    sulfur_containing_group = [thiol, thioether]

    # Multiple hydroxyl groups in addition to carboxylic acid
    hydroxyl_group = '[OX2H]'

    # Perfluorinated aliphatic chains with terminal carboxylic acid
    perfluoroalkyl_chain = '[CX4](F)(F)(F)[CX4](F)(F)[CX3](=O)[OX2H1]'

    # Aromatic rings bearing hydroxyl groups and a carboxylic acid
    aromatic_hydroxy = '[c][OX2H]'

    # Electron-rich heterocycles like indole, imidazole, or pyrazole rings
    indole = 'c1cc2ccccc2[nH]1'
    imidazole = 'c1ncc[nH]1'
    pyrazole = 'c1cc[nH]n1'

    # Pyridine ring with available nitrogen
    pyridine_ring = 'n1ccccc1'

    # Alpha, beta-unsaturated carbonyl groups with carboxylic acid
    alpha_beta_unsaturated_carbonyl = '[CX3]=[CX3][CX3](=O)[OX2H1]'

    # Simple aliphatic carboxylic acids without additional coordinating functional groups
    aliphatic_carboxylic_acid = '[#6][CX3](=O)[OX2H1]'

    # Polyether chains ending with a polar group and carboxylic acid
    polyether_chain = '[#6][OX2][#6][OX2][#6][OX2][#6]'

    # Modifiers with multiple carboxylic acid groups
    multiple_carboxylic_acids = '[CX3](=O)[OX2H1]'

    # Aliphatic hydroxyl groups at terminal position opposite carboxylic acid
    terminal_aliphatic_hydroxyl = '[OX2H][*][*][*][CX3](=O)[OX2H1]'

    # Electron-donating groups adjacent to carboxyl group
    EDG_adjacent_carboxyl = '[CX3](=O)[OX2H1][NX3;H2,H1]'

    # Ketone groups conjugated to aromatic systems and carboxylic acid
    conjugated_ketone_aromatic = '[c][CX3](=O)[c]'

    # Define rules

    # Compile SMARTS patterns
    rules = []

    # Rule 1: Modifiers with aromatic carboxylic acids with EWGs predict high Fe/Hf
    rules.append({
        'number': 1,
        'description': 'Modifiers with aromatic carboxylic acids with EWGs predict high Fe/Hf value',
        'patterns': [
            [aromatic_carboxylic_acid, carboxylate_anion_aromatic],  # Aromatic carboxylic acid
            EWGs_on_aromatic  # EWG attached to aromatic ring
        ],
        'prediction': 1
    })

    # Rule 2: Modifiers with aromatic carboxylic acids with EDGs predict low Fe/Hf
    rules.append({
        'number': 2,
        'description': 'Modifiers with aromatic carboxylic acids with EDGs predict low Fe/Hf value',
        'patterns': [
            [aromatic_carboxylic_acid, carboxylate_anion_aromatic],  # Aromatic carboxylic acid
            EDGs_on_aromatic  # EDG attached to aromatic ring
        ],
        'prediction': -1
    })

    # Rule 3: Modifiers with terminal amino groups predict high Fe/Hf
    rules.append({
        'number': 3,
        'description': 'Modifiers with terminal amino groups predict high Fe/Hf value',
        'patterns': [
            [terminal_amino_carboxylic_acid]  # Terminal amino opposite carboxylic acid
        ],
        'prediction': 1
    })

    # Rule 4: Modifiers with sulfur-containing groups predict high Fe/Hf
    rules.append({
        'number': 4,
        'description': 'Modifiers with sulfur-containing groups predict high Fe/Hf value',
        'patterns': [
            sulfur_containing_group,  # Thiol or thioether
            ['[CX3](=O)[OX2H1]']  # Carboxylic acid
        ],
        'prediction': 1
    })

    # Rule 5: Modifiers with multiple hydroxyl groups predict low Fe/Hf
    rules.append({
        'number': 5,
        'description': 'Modifiers with multiple hydroxyl groups predict low Fe/Hf value',
        'patterns': [
            ['[CX3](=O)[OX2H1]'],  # Carboxylic acid
        ],
        'count_patterns': {
            hydroxyl_group: 2  # At least two hydroxyl groups
        },
        'prediction': -1
    })

    # Rule 6: Modifiers with fluorinated aliphatic chains predict low Fe/Hf
    rules.append({
        'number': 6,
        'description': 'Modifiers with fluorinated aliphatic chains predict low Fe/Hf',
        'patterns': [
            ['[CX3](=O)[OX2H1]'],  # Carboxylic acid
            ['[CX4](F)(F)(F)']  # Trifluoromethyl group
        ],
        'prediction': -1
    })

    # Rule 7: Modifiers with aromatic hydroxyl groups predict low Fe/Hf
    rules.append({
        'number': 7,
        'description': 'Modifiers with aromatic hydroxyl groups predict low Fe/Hf',
        'patterns': [
            ['[CX3](=O)[OX2H1]'],  # Carboxylic acid
            [aromatic_hydroxy]  # Aromatic hydroxyl group
        ],
        'prediction': -1
    })

    # Rule 8: Modifiers with electron-rich heterocycles predict low Fe/Hf
    rules.append({
        'number': 8,
        'description': 'Modifiers with electron-rich heterocycles predict low Fe/Hf',
        'patterns': [
            ['[CX3](=O)[OX2H1]'],  # Carboxylic acid
            [indole, imidazole, pyrazole]  # Electron-rich heterocycles
        ],
        'prediction': -1
    })

    # Rule 9: Modifiers with pyridine rings predict Fe/Hf based on position of nitrogen
    rules.append({
        'number': 9,
        'description': 'Modifiers with pyridine rings predict high Fe/Hf',
        'patterns': [
            ['[CX3](=O)[OX2H1]'],  # Carboxylic acid
            [pyridine_ring]  # Pyridine ring
        ],
        'prediction': 1
    })

    # Rule 10: Modifiers with alpha, beta-unsaturated carbonyl groups predict high Fe/Hf
    rules.append({
        'number': 10,
        'description': 'Modifiers with alpha, beta-unsaturated carbonyl groups predict high Fe/Hf',
        'patterns': [
            ['[CX3](=O)[OX2H1]'],  # Carboxylic acid
            [alpha_beta_unsaturated_carbonyl]  # Alpha, beta-unsaturated carbonyl
        ],
        'prediction': 1
    })

    # Rule 11: Modifiers with simple aliphatic carboxylic acids predict low Fe/Hf
    # Exclude functional groups that may interact
    rules.append({
        'number': 11,
        'description': 'Modifiers with simple aliphatic carboxylic acids predict low Fe/Hf',
        'patterns': [
            [aliphatic_carboxylic_acid],  # Aliphatic carboxylic acid
        ],
        'exclude_patterns': [
            sulfur_containing_group,  # Exclude sulfur-containing groups
            [hydroxyl_group],  # Exclude hydroxyl groups
            ['[NX3;H2,H1]']  # Exclude amino groups
        ],
        'prediction': -1
    })

    # Rule 12: Modifiers with ether chains and terminal polar groups predict high Fe/Hf
    rules.append({
        'number': 12,
        'description': 'Modifiers with ether chains and terminal polar groups predict high Fe/Hf',
        'patterns': [
            ['[CX3](=O)[OX2H1]'],  # Carboxylic acid
            [polyether_chain],  # Polyether chain
            ['[NX3;H2,H1]', '[OX2][CH3]']  # Terminal amino or methoxy
        ],
        'prediction': 1
    })

    # Rule 13: Modifiers with multiple carboxylic acid groups predict low Fe/Hf
    rules.append({
        'number': 13,
        'description': 'Modifiers with multiple carboxylic acid groups predict low Fe/Hf',
        'patterns': [
            [multiple_carboxylic_acids],  # Carboxylic acid
        ],
        'count_patterns': {
            multiple_carboxylic_acids: 2  # At least two carboxylic acids
        },
        'prediction': -1
    })

    # Rule 14: Modifiers with aliphatic hydroxyl groups predict Fe/Hf based on position
    # If hydroxyl group is at terminal position opposite carboxylic acid, predict high Fe/Hf
    rules.append({
        'number': 14,
        'description': 'Modifiers with terminal aliphatic hydroxyl predict high Fe/Hf',
        'patterns': [
            [terminal_aliphatic_hydroxyl],  # Terminal hydroxyl opposite carboxylic acid
        ],
        'prediction': 1
    })

    # Rule 15: Modifiers with electron-donating groups adjacent to carboxyl predict low Fe/Hf
    rules.append({
        'number': 15,
        'description': 'Modifiers with EDGs adjacent to carboxyl group predict low Fe/Hf',
        'patterns': [
            [EDG_adjacent_carboxyl],  # EDG adjacent to carboxyl group
        ],
        'prediction': -1
    })

    # Compile patterns
    for rule in rules:
        compiled_patterns = []
        for group in rule.get('patterns', []):
            compiled_group = [Chem.MolFromSmarts(p) for p in group]
            compiled_patterns.append(compiled_group)
        rule['compiled_patterns'] = compiled_patterns

        # Compile exclude patterns if any
        if 'exclude_patterns' in rule:
            compiled_excludes = []
            for group in rule['exclude_patterns']:
                compiled_group = [Chem.MolFromSmarts(p) for p in group]
                compiled_excludes.append(compiled_group)
            rule['compiled_exclude_patterns'] = compiled_excludes

        # Compile count_patterns if any
        if 'count_patterns' in rule:
            compiled_count_patterns = {}
            for p, threshold in rule['count_patterns'].items():
                compiled_pat = Chem.MolFromSmarts(p)
                compiled_count_patterns[compiled_pat] = threshold
            rule['compiled_count_patterns'] = compiled_count_patterns

    # Initialize results list
    results = []

    # Process each SMILES string
    for smi in smiles_list:
        mol = Chem.MolFromSmiles(smi)
        if mol is None:
            # If the molecule cannot be parsed, append a row of zeros
            results.append([0]*len(rules))
            continue
        row = []
        for rule in rules:
            try:
                match = True
                # Check exclude patterns if any
                if 'exclude_patterns' in rule:
                    for group in rule['compiled_exclude_patterns']:
                        for pat in group:
                            if mol.HasSubstructMatch(pat):
                                match = False
                                break
                        if not match:
                            break
                    if not match:
                        row.append(0)
                        continue
                # Check required patterns
                for compiled_group in rule['compiled_patterns']:
                    group_match = False
                    for pat in compiled_group:
                        if mol.HasSubstructMatch(pat):
                            group_match = True
                            break
                    if not group_match:
                        match = False
                        break
                # Check count patterns if any
                if match and 'compiled_count_patterns' in rule:
                    for pat, threshold in rule['compiled_count_patterns'].items():
                        matches = mol.GetSubstructMatches(pat)
                        if len(matches) < threshold:
                            match = False
                            break
                if match:
                    row.append(rule['prediction'])
                else:
                    row.append(0)
            except Exception as e:
                # In case of any error, append 0
                row.append(0)
        results.append(row)
    # Create DataFrame with results
    df = pd.DataFrame(results, columns=[f'Rule {rule['number']}' for rule in rules])
    return df

--------------------------------------------------
    Target Name: Fe/Hf
    GPT Model: o1-preview-2024-09-12
    ML Model: ETC
    Current_Rules:
    **Start of Rules**

---

**Rule 1: Modifiers Containing Sulfur Functional Groups Predict High Fe/Hf**

- **Description**: Modifiers that possess sulfur-containing functional groups such as **thiol (-SH)** or **thioether (-S-)** alongside a **carboxylic acid group (-COOH)** predict a **high Fe/Hf value**.
- **Underlying Property**: Sulfur atoms act as soft Lewis bases, forming strong coordination bonds with Fe(III) ions, enhancing iron incorporation into the catalyst.
- **Examples**:
  - **High Fe/Hf**:
    - **4-sulfanylbenzoic acid**
    - **3-sulfanylpropanoic acid**
    - **2-[[(2S)-2-amino-4-methylsulfanylbutanoyl]amino]acetic acid**

---

**Rule 2: Modifiers with Terminal Primary Amino Groups on Aliphatic Chains Predict High Fe/Hf**

- **Description**: Modifiers possessing a **terminal primary amino group (-NH₂)** located on an aliphatic chain of at least three carbons, along with a **carboxylic acid group (-COOH)**, predict a **high Fe/Hf value**.
- **Underlying Property**: The amino and carboxylate groups can chelate Fe ions effectively, enhancing iron incorporation into the catalyst.
- **Examples**:
  - **High Fe/Hf**:
    - **5-aminopentanoic acid**
    - **7-aminoheptanoic acid**
    - **8-aminooctanoic acid**
    - **(2S)-6-acetamido-2-aminohexanoic acid**

---

**Rule 3: Aromatic Carboxylic Acids with Strong Electron-Withdrawing Substituents Predict High Fe/Hf**

- **Description**:
  - **High Fe/Hf**: Modifiers that are **aromatic carboxylic acids** substituted with strong **electron-withdrawing groups (EWGs)** such as **nitro (-NO₂)**, **halogens (-Br)**, or **pyridine rings**.
  - **Low Fe/Hf**: Modifiers that are **aromatic carboxylic acids** substituted with **electron-donating groups (EDGs)** like **amino (-NH₂)**, **hydroxyl (-OH)**, or **alkyl groups (-CH₃)**.
- **Underlying Property**:
  - **EWGs** increase the acidity and coordination ability of the carboxylate group, enhancing Fe ion binding.
  - **EDGs** decrease acidity and coordination ability, reducing Fe ion binding.
- **Examples**:
  - **High Fe/Hf**:
    - **4-nitrobenzoic acid**
    - **4-(bromomethyl)benzoic acid**
    - **4-pyridin-4-ylbenzoic acid**
  - **Low Fe/Hf**:
    - **4-aminobenzoic acid**
    - **4-methylbenzoic acid**
    - **5-formyl-2-hydroxybenzoic acid**
    - **4-formylbenzoic acid**

---

**Rule 4: Modifiers with Multiple Hydroxyl Groups Predict Low Fe/Hf**

- **Description**: Modifiers containing **multiple hydroxyl groups (-OH)**, including **polyols**, **sugar acids**, or **phenolic hydroxyls**, predict a **low Fe/Hf value**.
- **Underlying Property**: Abundant hydroxyl groups can form hydrogen bonds or intramolecular interactions, reducing their ability to coordinate with Fe ions.
- **Examples**:
  - **Low Fe/Hf**:
    - **(2R,3S,4R,5R)-2,3,4,5,6-pentahydroxyhexanoic acid**
    - **5-(4-hydroxyphenyl)pentanoic acid**
    - **3-(4-hydroxyphenyl)propanoic acid**
    - **2-[(4-hydroxybenzoyl)amino]acetic acid**

---

**Rule 5: Modifiers with Electron-Rich Heterocycles Predict Low Fe/Hf**

- **Description**: Modifiers featuring **electron-rich heterocyclic rings** such as **indole**, **pyrazole**, or **pyridone** along with a **carboxylic acid group (-COOH)** predict a **low Fe/Hf value**.
- **Underlying Property**: Delocalized electron density in these heterocycles may reduce the availability of lone pairs for effective coordination with Fe ions, leading to weaker binding.
- **Examples**:
  - **Low Fe/Hf**:
    - **(2R)-2-amino-3-(1H-indol-3-yl)propanoic acid**
    - **1H-pyrazole-4-carboxylic acid**
    - **2-oxo-1H-pyridine-4-carboxylic acid**

---

**Rule 6: Modifiers with Simple Aliphatic Carboxylic Acids Predict Low Fe/Hf**

- **Description**: Modifiers that are **straight-chain aliphatic carboxylic acids** without additional coordinating functional groups predict a **low Fe/Hf value**.
- **Underlying Property**: Absence of extra donor atoms or functional groups limits coordination capabilities with Fe ions, resulting in lower iron incorporation.
- **Examples**:
  - **Low Fe/Hf**:
    - **Octanoic acid**
    - **4-oxoheptanedioic acid**
    - **2,2,3,3,4,4,5,5,5-nonafluoropentanoic acid**

---

**Rule 7: Modifiers with Multiple Ether Linkages and Terminal Polar Groups Predict High Fe/Hf**

- **Description**: Modifiers containing **polyether chains** (multiple **ether linkages (-O-)**) ending with a **terminal polar group** like **methoxy (-OCH₃)** or **amino (-NH₂)**, along with a **carboxylic acid group (-COOH)**, predict a **high Fe/Hf value**.
- **Underlying Property**: Multiple ether oxygen atoms and terminal polar groups provide additional coordination sites for Fe ions, enhancing iron uptake.
- **Examples**:
  - **High Fe/Hf**:
    - **2-[2-(2-methoxyethoxy)ethoxy]acetic acid**
    - **3-[2-(2-aminoethoxy)ethoxy]propanoic acid**

---

**Rule 8: Modifiers with Fluorinated Aliphatic Chains Predict Low Fe/Hf**

- **Description**: Modifiers featuring **heavily fluorinated aliphatic chains**, especially those with multiple fluorine atoms, predict a **low Fe/Hf value**.
- **Underlying Property**: Fluorine's strong electron-withdrawing effect decreases the electron density of the carboxylate group, diminishing its coordination ability with Fe ions.
- **Examples**:
  - **Low Fe/Hf**:
    - **2,2,3,3,4,4,5,5,5-nonafluoropentanoic acid**
    - **4-[(2,2,2-trifluoroacetyl)amino]butanoic acid**

---

**Rule 9: Modifiers with Conjugated Carbonyl Groups in Aromatic Systems Predict High Fe/Hf**

- **Description**: Modifiers containing **conjugated carbonyl groups (>C=O)** within **aromatic systems**, especially when conjugated with a **carboxylic acid group (-COOH)**, predict a **high Fe/Hf value**.
- **Underlying Property**: Extended conjugation and additional carbonyl groups enhance electron-withdrawing capacity and coordination ability with Fe ions, promoting stronger binding.
- **Examples**:
  - **High Fe/Hf**:
    - **1,3-dioxo-2-benzofuran-5-carboxylic acid**
    - **4-(3,4-dimethoxyphenyl)-4-oxobutanoic acid**

---

**Rule 10: Modifiers with Distant Aliphatic Hydroxyl Groups Predict High Fe/Hf**

- **Description**: Modifiers possessing an **aliphatic hydroxyl group (-OH)** located at least five carbons away from the **carboxylic acid group (-COOH)** predict a **high Fe/Hf value**.
- **Underlying Property**: A distant hydroxyl group can serve as an additional coordination site without causing steric hindrance or intramolecular interactions that hinder Fe binding.
- **Examples**:
  - **High Fe/Hf**:
    - **7-hydroxyheptanoic acid**

---

**Rule 11: Modifiers That Are Short-Chain Dicarboxylic Alpha-Amino Acids Predict High Fe/Hf**

- **Description**: Modifiers that are **short-chain dicarboxylic alpha-amino acids** (e.g., with four carbon atoms) predict a **high Fe/Hf value**, whereas longer-chain analogs predict **low Fe/Hf**.
- **Underlying Property**: Short-chain amino acids like aspartic acid can effectively chelate Fe ions due to optimal spatial positioning of coordinating groups.
- **Examples**:
  - **High Fe/Hf**:
    - **(2S)-2-aminobutanedioic acid** (aspartic acid)
  - **Low Fe/Hf**:
    - **(2S)-2-aminopentanedioic acid** (glutamic acid)

---

**Rule 12: Modifiers That Are Alpha-Amino Acids with Non-Polar Aromatic Side Chains Predict High Fe/Hf**

- **Description**: Modifiers that are **alpha-amino acids** with **non-polar aromatic side chains**, such as **phenylalanine**, predict a **high Fe/Hf value**.
- **Underlying Property**: The aromatic side chain does not interfere with coordination, allowing the amino and carboxylate groups to chelate Fe ions effectively.
- **Examples**:
  - **High Fe/Hf**:
    - **(2S)-2-amino-3-phenylpropanoic acid** (phenylalanine)
  - **Low Fe/Hf**:
    - **(2R)-2-amino-3-(1H-indol-3-yl)propanoic acid** (tryptophan)

---

**Rule 13: Modifiers with Electron-Donating Substituents on Aliphatic Chains Predict High Fe/Hf**

- **Description**: Modifiers featuring **electron-donating substituents** such as **methoxy (-OCH₃)** groups on **aliphatic chains**, along with a **carboxylic acid group (-COOH)**, predict a **high Fe/Hf value**.
- **Underlying Property**: Electron-donating groups increase the electron density of the coordinating atoms, enhancing their ability to bind Fe ions.
- **Examples**:
  - **High Fe/Hf**:
    - **4-(3,4-dimethoxyphenyl)-4-oxobutanoic acid**

---

**Rule 14: Modifiers with Aliphatic Chains Terminated with Aldehyde or Keto Groups Predict Low Fe/Hf**

- **Description**: Modifiers that have an **aldehyde (-CHO)** or **keto (>C=O)** group near the end of an **aliphatic chain**, along with a **carboxylic acid group (-COOH)**, predict a **low Fe/Hf value**.
- **Underlying Property**: Aldehyde and keto groups may form intramolecular interactions or reduce the availability of the carboxylate group for coordination.
- **Examples**:
  - **Low Fe/Hf**:
    - **5-formyl-2-hydroxybenzoic acid**
    - **4-formylbenzoic acid**
    - **4-oxoheptanedioic acid**

---

**Rule 15: Modifiers with Cyclized Structures Containing Oxygen Heterocycles Predict Low Fe/Hf**

- **Description**: Modifiers that include **oxygen-containing heterocyclic rings**, such as **lactones** or **pyranones**, predict a **low Fe/Hf value**.
- **Underlying Property**: The rigidity of the cyclic structure may hinder effective coordination with Fe ions, and oxygen heterocycles may not provide optimal binding sites.
- **Examples**:
  - **Low Fe/Hf**:
    - **2-oxo-1H-pyridine-4-carboxylic acid**
    - **1H-pyrazole-4-carboxylic acid**

---

**End of Rules**---------------------------------------------------------------


    Current_Matrix:
    Matrix Generator Message:
Rule 1,Rule 2,Rule 3,Rule 3,Rule 4,Rule 5,Rule 6,Rule 7,Rule 8,Rule 9,Rule 10,Rule 11,Rule 12,Rule 13,Rule 14,Rule 15
0,0,1,0,0,0,0,0,0,0,0,0,0,0,-1,0
0,0,0,0,0,0,0,0,0,0,1,1,0,0,-1,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0
0,0,0,0,0,0,0,0,0,0,0,1,0,0,-1,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0
0,0,0,-1,0,0,0,0,0,0,0,0,0,0,-1,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0
0,0,0,-1,0,0,0,0,0,0,1,0,0,0,-1,0
0,0,1,0,0,-1,0,0,0,0,0,0,0,0,-1,0
0,0,0,0,0,0,0,0,0,0,1,0,0,0,-1,0
1,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0
0,0,1,0,0,0,0,0,0,0,0,0,0,0,-1,0
0,0,0,0,0,0,0,0,0,0,0,1,1,0,-1,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0
0,0,0,0,0,0,0,0,0,0,0,1,1,0,-1,0
0,0,0,0,0,-1,0,0,0,0,0,0,0,0,-1,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0
1,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0
0,0,0,-1,0,0,0,0,0,0,0,0,0,0,-1,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0
0,0,1,0,0,0,0,0,0,0,0,0,0,0,-1,0
0,0,0,-1,0,0,0,0,0,0,0,0,0,0,-1,0
1,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0
0,0,1,0,0,0,0,0,0,0,0,0,0,0,-1,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0
0,0,0,-1,0,0,0,0,0,0,1,0,0,0,-1,0
0,0,0,0,0,0,0,0,0,0,1,0,0,0,-1,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0
0,0,0,0,0,0,0,0,0,0,1,0,0,0,-1,0
0,0,0,-1,0,0,0,0,0,0,1,0,0,0,-1,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0
0,0,0,0,0,0,0,0,0,0,0,1,0,0,-1,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0

---------------------------------------------------------------


    Train Accuracy: 0.8; Test Accuracy: 0.0
    Train Support: 0.08571428571428572; Test Support: 0.0
    Train Confidence: 0.7142857142857143; Test Confidence: 0.5
    Train Lift: 1.4651416122004355; Test Lift: NONE
    Train Leverage: 0.014421768707482985; Test Leverage: NONE
    ----------------------------------------------------------------------------------

    Current Rule Code:
def rule2matrix(smiles_list):
    # Define SMARTS patterns for functional groups
    # Carboxylic acid group (-COOH) and carboxylate anion (-COO-)
    carboxylic_acid = '[CX3](=O)[OX2H1]'
    carboxylate_anion = '[CX3](=O)[O-]'
    carboxylic_acid_group = [carboxylic_acid, carboxylate_anion]

    # Thiol group (-SH)
    thiol = '[SX2H]'
    # Thioether group (-S-)
    thioether = '[#16X2]([#6])[#6]'
    sulfur_groups = [thiol, thioether]

    # Primary amino group (-NH2)
    primary_amine = '[NX3;H2]'
    
    # Halogens on aromatic ring
    halogen_on_aromatic = '[c][F,Cl,Br,I]'
    # Nitro group on aromatic ring
    nitro_on_aromatic = '[c][N+](=O)[O-]'
    # Electron-withdrawing groups (EWGs) on aromatic ring
    ewg_on_aromatic = [halogen_on_aromatic, nitro_on_aromatic, 'n1ccccc1']  # Include pyridine ring as EWG

    # Electron-donating groups (EDGs) on aromatic ring
    amino_on_aromatic = '[c][NX3;H2,H1]'  # Aromatic amine
    hydroxyl_on_aromatic = '[c][OX2H]'     # Phenol
    alkyl_on_aromatic = '[c][CX4H3]'       # Alkyl group attached to aromatic ring
    edg_on_aromatic = [amino_on_aromatic, hydroxyl_on_aromatic, alkyl_on_aromatic]

    # Multiple hydroxyl groups
    hydroxyl_group = '[OX2H]'

    # Electron-rich heterocycles
    indole = '[nH]1ccccc1'   # Indole
    pyrazole = 'n1nccc1'     # Pyrazole
    pyridone = 'O=C1C=CC=CN1' # Pyridone
    electron_rich_heterocycles = [indole, pyrazole, pyridone]

    # Polyether chain (multiple ether linkages)
    polyether = '[#6][OX2][#6][OX2][#6][OX2][#6]'

    # Fluorinated aliphatic chain
    fluorinated_aliphatic_chain = '[CX4][F][F][F]'

    # Conjugated carbonyl groups in aromatic systems
    conjugated_carbonyl = '[a][CX3](=O)[a]'

    # Dicarboxylic alpha-amino acids
    short_chain_dicarboxylic_alpha_amino_acid = '[NX3;H1,H2][CX4H][CX3](=O)[OX1-,OX2H1]'

    # Alpha-amino acids with non-polar aromatic side chains
    phenylalanine_like = '[NX3;H1,H2][CX4H][CH2][c]'  # Amino acid with benzyl side chain

    # Modifiers with aldehyde or keto groups near the end of aliphatic chains
    terminal_aldehyde_keto = '[CH]=O'  # Aldehyde group
    keto_group = '[CX3](=O)[#6]'

    # Oxygen-containing heterocyclic rings
    oxygen_heterocycles = ['[o]', 'O1CCCC1', 'O1CCCCC1']  # General oxygen heterocycles

    # Now define the rules
    rules = [
        {
            'number': 1,
            'description': 'Rule 1: Modifiers containing sulfur functional groups (thiol or thioether) and carboxylic acid group predict high Fe/Hf',
            'patterns': [sulfur_groups, carboxylic_acid_group],
            'prediction': 1
        },
        {
            'number': 2,
            'description': 'Rule 2: Modifiers with terminal primary amino groups on aliphatic chains (at least three carbons) and carboxylic acid group predict high Fe/Hf',
            'patterns': [primary_amine, carboxylic_acid_group],
            'additional_checks': 'chain_length',
            'prediction': 1
        },
        {
            'number': 3,
            'description': 'Rule 3 (High): Aromatic carboxylic acids with strong electron-withdrawing substituents predict high Fe/Hf',
            'patterns': [ewg_on_aromatic, carboxylic_acid_group],
            'prediction': 1
        },
        {
            'number': 3,
            'description': 'Rule 3 (Low): Aromatic carboxylic acids with electron-donating substituents predict low Fe/Hf',
            'patterns': [edg_on_aromatic, carboxylic_acid_group],
            'prediction': -1
        },
        {
            'number': 4,
            'description': 'Rule 4: Modifiers with multiple hydroxyl groups predict low Fe/Hf',
            'patterns': [[hydroxyl_group], carboxylic_acid_group],
            'count_threshold': {hydroxyl_group: 2},
            'prediction': -1
        },
        {
            'number': 5,
            'description': 'Rule 5: Modifiers with electron-rich heterocycles and carboxylic acid group predict low Fe/Hf',
            'patterns': [electron_rich_heterocycles, carboxylic_acid_group],
            'prediction': -1
        },
        {
            'number': 6,
            'description': 'Rule 6: Modifiers that are simple aliphatic carboxylic acids predict low Fe/Hf',
            'patterns': [carboxylic_acid_group],
            'exclude_patterns': [[primary_amine], sulfur_groups, ['[OX2][#6]'], ['[!#1][F,Cl,Br,I]'], ['[a]']],
            'prediction': -1
        },
        {
            'number': 7,
            'description': 'Rule 7: Modifiers with multiple ether linkages and terminal polar groups predict high Fe/Hf',
            'patterns': [[polyether], carboxylic_acid_group],
            'prediction': 1
        },
        {
            'number': 8,
            'description': 'Rule 8: Modifiers with fluorinated aliphatic chains predict low Fe/Hf',
            'patterns': [[fluorinated_aliphatic_chain], carboxylic_acid_group],
            'prediction': -1
        },
        {
            'number': 9,
            'description': 'Rule 9: Modifiers with conjugated carbonyl groups in aromatic systems predict high Fe/Hf',
            'patterns': [[conjugated_carbonyl], carboxylic_acid_group],
            'prediction': 1
        },
        {
            'number': 10,
            'description': 'Rule 10: Modifiers with distant aliphatic hydroxyl groups predict high Fe/Hf',
            'patterns': [[hydroxyl_group], carboxylic_acid_group],
            'additional_checks': 'distant_hydroxyl',
            'prediction': 1
        },
        {
            'number': 11,
            'description': 'Rule 11: Modifiers that are short-chain dicarboxylic alpha-amino acids predict high Fe/Hf',
            'patterns': [[short_chain_dicarboxylic_alpha_amino_acid]],
            'prediction': 1
        },
        {
            'number': 12,
            'description': 'Rule 12: Modifiers that are alpha-amino acids with non-polar aromatic side chains predict high Fe/Hf',
            'patterns': [[phenylalanine_like]],
            'prediction': 1
        },
        {
            'number': 13,
            'description': 'Rule 13: Modifiers with electron-donating substituents on aliphatic chains predict high Fe/Hf',
            'patterns': ['[CX4][OX2][CH3]', carboxylic_acid_group],
            'prediction': 1
        },
        {
            'number': 14,
            'description': 'Rule 14: Modifiers with aliphatic chains terminated with aldehyde or keto groups predict low Fe/Hf',
            'patterns': [[terminal_aldehyde_keto, keto_group], carboxylic_acid_group],
            'prediction': -1
        },
        {
            'number': 15,
            'description': 'Rule 15: Modifiers with cyclized structures containing oxygen heterocycles predict low Fe/Hf',
            'patterns': [oxygen_heterocycles, carboxylic_acid_group],
            'prediction': -1
        }
    ]

    # Compile SMARTS patterns
    for rule in rules:
        compiled_patterns = []
        for group in rule.get('patterns', []):
            compiled_group = [Chem.MolFromSmarts(p) if isinstance(p, str) else Chem.MolFromSmarts(patt) for p in group for patt in (p if isinstance(p, list) else [p])]
            compiled_patterns.append(compiled_group)
        rule['compiled_patterns'] = compiled_patterns
        # Compile exclude patterns if any
        if 'exclude_patterns' in rule:
            compiled_excludes = []
            for group in rule['exclude_patterns']:
                compiled_group = [Chem.MolFromSmarts(p) for p in group]
                compiled_excludes.append(compiled_group)
            rule['compiled_exclude_patterns'] = compiled_excludes

    # Initialize results list
    results = []

    # Process each SMILES string
    for smi in smiles_list:
        mol = Chem.MolFromSmiles(smi)
        if mol is None:
            # If the molecule cannot be parsed, append a row of zeros
            results.append([0]*len(rules))
            continue
        row = []
        for rule in rules:
            try:
                match = True
                # Check exclude patterns if any
                if 'exclude_patterns' in rule:
                    for group in rule['compiled_exclude_patterns']:
                        for pat in group:
                            if mol.HasSubstructMatch(pat):
                                match = False
                                break
                        if not match:
                            break
                    if not match:
                        row.append(0)
                        continue
                # Check required patterns
                for compiled_group in rule['compiled_patterns']:
                    group_match = False
                    for pat in compiled_group:
                        matches = mol.GetSubstructMatches(pat)
                        if matches:
                            # If a count threshold is specified for this pattern
                            if 'count_threshold' in rule and pat.GetSmarts() in rule['count_threshold']:
                                threshold = rule['count_threshold'][pat.GetSmarts()]
                                if len(matches) >= threshold:
                                    group_match = True
                                    break
                            else:
                                group_match = True
                                break
                    if not group_match:
                        match = False
                        break
                if match:
                    # Additional checks, e.g., chain length or distant hydroxyl
                    if 'additional_checks' in rule:
                        if rule['additional_checks'] == 'chain_length':
                            # For Rule 2: Check if there's a chain of at least 3 carbons between the primary amine and the carboxylic acid group
                            # Find matches for primary amine and carboxylic acid
                            amine_matches = mol.GetSubstructMatches(Chem.MolFromSmarts(primary_amine))
                            acid_matches = []
                            for acid_pat in carboxylic_acid_group:
                                acid_matches.extend(mol.GetSubstructMatches(Chem.MolFromSmarts(acid_pat)))
                            chain_length_ok = False
                            for amine_atom in [match[0] for match in amine_matches]:
                                for acid_atom in [match[0] for match in acid_matches]:
                                    path = Chem.GetShortestPath(mol, amine_atom, acid_atom)
                                    # Count number of carbons in the path
                                    n_carbons = sum(1 for atom_idx in path if mol.GetAtomWithIdx(atom_idx).GetSymbol() == 'C')
                                    if n_carbons >= 3:
                                        chain_length_ok = True
                                        break
                                if chain_length_ok:
                                    break
                            if not chain_length_ok:
                                match = False
                        elif rule['additional_checks'] == 'distant_hydroxyl':
                            # For Rule 10: Check if hydroxyl group is at least 5 carbons away from carboxylic acid
                            hydroxyl_matches = mol.GetSubstructMatches(Chem.MolFromSmarts(hydroxyl_group))
                            acid_matches = []
                            for acid_pat in carboxylic_acid_group:
                                acid_matches.extend(mol.GetSubstructMatches(Chem.MolFromSmarts(acid_pat)))
                            distance_ok = False
                            for hydroxyl_atom in [match[0] for match in hydroxyl_matches]:
                                for acid_atom in [match[0] for match in acid_matches]:
                                    path = Chem.GetShortestPath(mol, hydroxyl_atom, acid_atom)
                                    # Count number of carbons in the path
                                    n_carbons = sum(1 for atom_idx in path if mol.GetAtomWithIdx(atom_idx).GetSymbol() == 'C')
                                    if n_carbons >= 5:
                                        distance_ok = True
                                        break
                                if distance_ok:
                                    break
                            if not distance_ok:
                                match = False
                    if match:
                        row.append(rule['prediction'])
                    else:
                        row.append(0)
                else:
                    row.append(0)
            except Exception as e:
                # In case of any error, append 0
                row.append(0)
        results.append(row)
    # Create DataFrame with results
    df = pd.DataFrame(results, columns=[f'Rule {rule["number"]}' for rule in rules])
    return df
--------------------------------------------------
    Target Name: Fe/Hf
    GPT Model: o1-preview-2024-09-12
    ML Model: ETC
    Current_Rules:
    **Start of Rules**

---

**Rule 1: Modifiers Containing Sulfur Functional Groups and a Carboxylic Acid Predict High Fe/Hf**

- **Description**: Modifiers that possess **sulfur-containing functional groups** such as **thiol (-SH)** or **thioether (-S-)**, **combined** with a **carboxylic acid group (-COOH)**, predict a **high Fe/Hf value**.
- **Underlying Property**: Sulfur atoms are soft Lewis bases and form strong coordination bonds with Fe(III) ions, enhancing iron incorporation into the catalyst.
- **Examples**:
  - **High Fe/Hf**:
    - **4-sulfanylbenzoic acid**
    - **3-sulfanylpropanoic acid**
    - **2-[[(2S)-2-amino-4-methylsulfanyl]butanoyl]amino]acetic acid**

---

**Rule 2: Alpha-Amino Acids with Short Aliphatic Side Chains or Non-Electron-Rich Aromatic Side Chains Predict High Fe/Hf**

- **Description**: Modifiers that are **alpha-amino acids** with either **short aliphatic side chains** (e.g., **aspartic acid**) or **non-electron-rich aromatic side chains** (e.g., **phenylalanine**), predict a **high Fe/Hf value**.
- **Underlying Property**: The amino and carboxylate groups can effectively chelate Fe ions, and the side chains do not interfere with coordination.
- **Examples**:
  - **High Fe/Hf**:
    - **(2S)-2-aminobutanedioic acid** (Aspartic acid)
    - **(2S)-2-amino-3-phenylpropanoic acid** (Phenylalanine)
    - **(2S)-6-acetamido-2-aminohexanoic acid**
  - **Low Fe/Hf**:
    - **(2S)-2-aminopentanedioic acid** (Glutamic acid) — longer side chain may reduce coordination efficiency.
    - **(2R)-2-amino-3-(1H-indol-3-yl)propanoic acid** (Tryptophan) — electron-rich indole ring interferes with Fe binding.

---

**Rule 3: Modifiers with Terminal Primary Amino Groups on Medium to Long Aliphatic Chains and a Carboxylic Acid Predict High Fe/Hf**

- **Description**: Modifiers possessing a **terminal primary amino group (-NH₂)** on an **aliphatic chain of four or more carbons**, combined with a **carboxylic acid group (-COOH)**, predict a **high Fe/Hf value**.
- **Underlying Property**: The spatial arrangement allows for effective chelation of Fe ions via both amino and carboxylate groups.
- **Examples**:
  - **High Fe/Hf**:
    - **5-aminopentanoic acid**
    - **7-aminoheptanoic acid**
    - **8-aminooctanoic acid**

---

**Rule 4: Aromatic Carboxylic Acids with Strong Electron-Withdrawing Substituents Predict High Fe/Hf**

- **Description**: Modifiers that are **aromatic carboxylic acids** substituted with strong **electron-withdrawing groups (EWGs)** such as **nitro (-NO₂)**, **bromo (-Br)**, or **pyridyl rings**, predict a **high Fe/Hf value**.
- **Underlying Property**: EWGs increase the acidity and coordination ability of the carboxylate group, enhancing Fe binding.
- **Examples**:
  - **High Fe/Hf**:
    - **4-nitrobenzoic acid**
    - **4-(bromomethyl)benzoic acid**
    - **4-pyridin-4-ylbenzoic acid**
    - **4-pyridin-4-ylbutanoic acid**
  - **Low Fe/Hf**:
    - **4-aminobenzoic acid** — electron-donating amino group reduces Fe binding.

---

**Rule 5: Modifiers with Long Aliphatic Chains Terminated with Polar Groups and a Carboxylic Acid Predict High Fe/Hf**

- **Description**: Modifiers featuring **long aliphatic chains (five or more carbons)** terminated with **polar functional groups** like **hydroxyl (-OH)** or **amino (-NH₂)**, combined with a **carboxylic acid group (-COOH)**, predict a **high Fe/Hf value**.
- **Underlying Property**: The extended chain with terminal polar groups provides multiple coordination sites, facilitating Fe incorporation.
- **Examples**:
  - **High Fe/Hf**:
    - **7-hydroxyheptanoic acid**
    - **7-aminoheptanoic acid**
    - **8-aminooctanoic acid**
  - **Low Fe/Hf**:
    - **Octanoic acid** — lacks terminal polar group.

---

**Rule 6: Modifiers with Aromatic Hydroxyl Groups Predict Low Fe/Hf**

- **Description**: Modifiers containing **aromatic rings** with **hydroxyl groups (-OH)**, especially **phenolic hydroxyls**, predict a **low Fe/Hf value**.
- **Underlying Property**: Phenolic hydroxyls are electron-rich and may form intramolecular hydrogen bonds, reducing their availability to coordinate with Fe ions.
- **Examples**:
  - **Low Fe/Hf**:
    - **5-(4-hydroxyphenyl)pentanoic acid**
    - **3-(4-hydroxyphenyl)propanoic acid**
    - **2-[(4-hydroxybenzoyl)amino]acetic acid**

---

**Rule 7: Modifiers with Multiple Ether Linkages and Terminal Polar Groups Combined with a Carboxylic Acid Predict High Fe/Hf**

- **Description**: Modifiers featuring **polyether chains** with multiple **ether linkages (-O-)** ending with a **terminal polar group** (e.g., **methoxy (-OCH₃)** or **amino (-NH₂)**), along with a **carboxylic acid group (-COOH)**, predict a **high Fe/Hf value**.
- **Underlying Property**: Multiple ether oxygen atoms and terminal polar groups provide additional coordination sites for Fe ions.
- **Examples**:
  - **High Fe/Hf**:
    - **2-[2-(2-methoxyethoxy)ethoxy]acetic acid**
    - **3-[2-(2-aminoethoxy)ethoxy]propanoic acid**

---

**Rule 8: Modifiers with Heavily Fluorinated Aliphatic Chains Predict Low Fe/Hf**

- **Description**: Modifiers containing **multiple fluorine atoms** on **aliphatic chains**, especially those that are highly fluorinated, predict a **low Fe/Hf value**.
- **Underlying Property**: Fluorine's strong electron-withdrawing effect decreases the electron density of coordinating groups, reducing their ability to bind Fe ions.
- **Examples**:
  - **Low Fe/Hf**:
    - **2,2,3,3,4,4,5,5,5-nonafluoropentanoic acid**
    - **4-[(2,2,2-trifluoroacetyl)amino]butanoic acid**

---

**Rule 9: Modifiers with Multiple Adjacent Hydroxyl Groups (Polyols or Sugar Acids) Predict Low Fe/Hf**

- **Description**: Modifiers that have **multiple adjacent hydroxyl groups (-OH)**, such as in **polyols** or **sugar acids**, along with a **carboxylic acid group (-COOH)**, predict a **low Fe/Hf value**.
- **Underlying Property**: Multiple hydroxyl groups can form strong hydrogen bonds, potentially leading to intramolecular interactions that hinder coordination with Fe ions.
- **Examples**:
  - **Low Fe/Hf**:
    - **(2R,3S,4R,5R)-2,3,4,5,6-pentahydroxyhexanoic acid**
    - **2-[[1,3-dihydroxy-2-(hydroxymethyl)propan-2-yl]oxy]acetic acid**

---

**Rule 10: Modifiers with Electron-Rich Heterocycles Combined with a Carboxylic Acid Predict Low Fe/Hf**

- **Description**: Modifiers featuring **electron-rich heterocyclic rings** (e.g., **indole**, **pyrazole**, **pyridone**), along with a **carboxylic acid group (-COOH)**, predict a **low Fe/Hf value**.
- **Underlying Property**: Delocalized electrons in heterocycles may favor intramolecular interactions or coordinate preferentially with other metal centers, reducing Fe binding.
- **Examples**:
  - **Low Fe/Hf**:
    - **(2R)-2-amino-3-(1H-indol-3-yl)propanoic acid** (Tryptophan)
    - **1H-pyrazole-4-carboxylic acid**
    - **2-oxo-1H-pyridine-4-carboxylic acid**

---

**Rule 11: Modifiers Combining Ketone Groups Conjugated with Aromatic Rings and a Carboxylic Acid Predict High Fe/Hf**

- **Description**: Modifiers containing **conjugated ketone groups (>C=O)** within aromatic systems, along with a **carboxylic acid group (-COOH)**, predict a **high Fe/Hf value**.
- **Underlying Property**: Conjugation with ketone groups enhances the electron-withdrawing nature of the aromatic ring, increasing the acidity and coordination ability of the carboxylate group.
- **Examples**:
  - **High Fe/Hf**:
    - **1,3-dioxo-2-benzofuran-5-carboxylic acid**
    - **4-(3,4-dimethoxyphenyl)-4-oxobutanoic acid**

---

**Rule 12: Modifiers with Straight-Chain Aliphatic Carboxylic Acids Without Additional Functional Groups Predict Low Fe/Hf**

- **Description**: Modifiers that are **straight-chain aliphatic carboxylic acids** lacking additional polar or coordinating functional groups predict a **low Fe/Hf value**.
- **Underlying Property**: The absence of extra coordination sites limits Fe ion binding to the catalyst.
- **Examples**:
  - **Low Fe/Hf**:
    - **Octanoic acid**
    - **4-oxoheptanedioic acid**

---

**Rule 13: Modifiers with Electron-Donating Groups on Aromatic Carboxylic Acids Predict Low Fe/Hf**

- **Description**: Modifiers that are **aromatic carboxylic acids** substituted with **electron-donating groups (EDGs)** such as **amino (-NH₂)**, **hydroxyl (-OH)**, or **methyl (-CH₃)** predict a **low Fe/Hf value**.
- **Underlying Property**: EDGs increase electron density on the aromatic ring, decreasing the acidity of the carboxylic acid and reducing its ability to coordinate with Fe ions.
- **Examples**:
  - **Low Fe/Hf**:
    - **4-aminobenzoic acid**
    - **4-methylbenzoic acid**
    - **2-[(4-hydroxybenzoyl)amino]acetic acid**

---

**End of Rules**

---

These rules are formulated to capture the relationships between molecular modifier structures and the Fe/Hf ratio in the catalyst. Each rule combines multiple substructures and considers underlying chemical properties to predict whether a modifier will result in a high or low Fe/Hf value. The rules aim for broad coverage of the dataset while balancing simplicity and specificity, as per the given requirements.---------------------------------------------------------------


    Current_Matrix:
    Matrix Generator Message:
Rule 1,Rule 2,Rule 4,Rule 6,Rule 8
0,0,1,0,0
0,1,0,0,0
0,0,0,0,0
0,1,0,0,0
0,0,0,0,0
0,0,0,0,0
0,0,0,0,0
0,0,0,0,0
0,0,0,-1,0
0,0,1,0,0
0,0,0,0,0
1,0,0,0,0
0,0,0,0,0
0,0,1,0,0
0,1,0,0,0
0,0,0,0,-1
0,1,0,0,0
0,0,0,0,0
0,0,0,0,0
1,0,0,0,0
0,0,0,-1,0
0,0,0,0,0
0,0,1,0,0
0,0,0,0,0
1,0,0,0,0
0,0,0,0,0
0,0,0,0,0
0,0,0,-1,0
0,0,0,0,0
0,0,0,0,-1
0,0,0,0,0
0,0,0,-1,0
0,0,0,0,0
0,0,0,0,0
0,1,0,0,0
0,0,0,0,0

---------------------------------------------------------------


    Train Accuracy: 0.6857142857142857; Test Accuracy: 0.0
    Train Support: 0.08571428571428572; Test Support: 0.0
    Train Confidence: 1.0; Test Confidence: 0.5
    Train Lift: 2.020697167755991; Test Lift: NONE
    Train Leverage: 0.04326530612244898; Test Leverage: NONE
    ----------------------------------------------------------------------------------

    Current Rule Code:
def rule2matrix(smiles_list):
    # Define SMARTS patterns for functional groups
    
    # Rule 1: Modifiers containing sulfur functional groups (thiol or thioether) and a carboxylic acid group predict high Fe/Hf
    thiol_smarts = '[SX2H]'
    thioether_smarts = '[SX2]([#6])[#6]'
    carboxylic_acid_smarts = '[CX3](=O)[OX2H1]'
    
    # Compile patterns
    thiol_pattern = Chem.MolFromSmarts(thiol_smarts)
    thioether_pattern = Chem.MolFromSmarts(thioether_smarts)
    carboxylic_acid_pattern = Chem.MolFromSmarts(carboxylic_acid_smarts)
    
    # Rule 2: Alpha-amino acids with short aliphatic side chains or non-electron-rich aromatic side chains predict high Fe/Hf
    alpha_amino_acid_smarts = '[NX3;H2][CX4H]([#6])[CX3](=O)[OX2H1]'
    
    # Compile pattern
    alpha_amino_acid_pattern = Chem.MolFromSmarts(alpha_amino_acid_smarts)
    
    # Rule 4: Aromatic carboxylic acids with strong electron-withdrawing substituents predict high Fe/Hf
    aromatic_carboxylic_acid_smarts = '[c][CX3](=O)[OX2H1]'
    nitro_smarts = '[c][NX3+](=O)[O-]'
    bromo_smarts = '[c][Br]'
    pyridine_ring_smarts = 'n1ccccc1'
    
    # Compile patterns
    aromatic_carboxylic_acid_pattern = Chem.MolFromSmarts(aromatic_carboxylic_acid_smarts)
    nitro_pattern = Chem.MolFromSmarts(nitro_smarts)
    bromo_pattern = Chem.MolFromSmarts(bromo_smarts)
    pyridine_ring_pattern = Chem.MolFromSmarts(pyridine_ring_smarts)
    
    # Rule 6: Modifiers with aromatic hydroxyl groups predict low Fe/Hf
    aromatic_hydroxyl_smarts = '[c][OX2H]'
    aromatic_hydroxyl_pattern = Chem.MolFromSmarts(aromatic_hydroxyl_smarts)
    
    # Rule 8: Modifiers with heavily fluorinated aliphatic chains predict low Fe/Hf
    fluoroalkane_smarts = '[CX4](F)(F)(F)'
    fluoroalkane_pattern = Chem.MolFromSmarts(fluoroalkane_smarts)
    
    # List of rules
    rules = [
        {
            'number': 1,
            'description': 'Modifiers containing sulfur functional groups (thiol or thioether) and a carboxylic acid group predict high Fe/Hf',
            'patterns': [carboxylic_acid_pattern],
            'subpatterns': [[thiol_pattern, thioether_pattern]],
            'prediction': 1
        },
        {
            'number': 2,
            'description': 'Alpha-amino acids with short aliphatic side chains or non-electron-rich aromatic side chains predict high Fe/Hf',
            'patterns': [alpha_amino_acid_pattern],
            'prediction': 1
        },
        {
            'number': 4,
            'description': 'Aromatic carboxylic acids with strong electron-withdrawing substituents predict high Fe/Hf',
            'patterns': [aromatic_carboxylic_acid_pattern],
            'subpatterns': [[nitro_pattern, bromo_pattern, pyridine_ring_pattern]],
            'prediction': 1
        },
        {
            'number': 6,
            'description': 'Modifiers with aromatic hydroxyl groups predict low Fe/Hf',
            'patterns': [aromatic_hydroxyl_pattern],
            'prediction': -1
        },
        {
            'number': 8,
            'description': 'Modifiers with heavily fluorinated aliphatic chains predict low Fe/Hf',
            'patterns': [fluoroalkane_pattern],
            'prediction': -1
        }
    ]
    
    # Initialize results list
    results = []
    
    # Process each SMILES string
    for smi in smiles_list:
        mol = Chem.MolFromSmiles(smi)
        if mol is None:
            # If the molecule cannot be parsed, append a row of zeros
            results.append([0]*len(rules))
            continue
        row = []
        for rule in rules:
            try:
                match = True
                # Check main patterns
                for pat in rule['patterns']:
                    if not mol.HasSubstructMatch(pat):
                        match = False
                        break
                if not match:
                    row.append(0)
                    continue
                # Check subpatterns (if any)
                if 'subpatterns' in rule:
                    subpattern_match = False
                    for group in rule['subpatterns']:
                        group_match = False
                        for subpat in group:
                            if mol.HasSubstructMatch(subpat):
                                group_match = True
                                break
                        if group_match:
                            subpattern_match = True
                            break
                    if not subpattern_match:
                        match = False
                if match:
                    row.append(rule['prediction'])
                else:
                    row.append(0)
            except Exception as e:
                # In case of any error, append 0
                row.append(0)
        results.append(row)
    
    # Create DataFrame with results
    df = pd.DataFrame(results, columns=[f'Rule {rule['number']}' for rule in rules])
    return df

--------------------------------------------------
    Target Name: Fe/Hf
    GPT Model: o1-preview-2024-09-12
    ML Model: ETC
    Current_Rules:
    **Start of Rules**

---

**Rule 1: Modifiers Containing Sulfur Functional Groups and a Carboxylic Acid Predict High Fe/Hf**

- **Description**: Modifiers that possess **sulfur-containing functional groups** such as **thiol (-SH)** or **thioether (-S-)**, **combined** with a **carboxylic acid group (-COOH)**, predict a **high Fe/Hf value**.
- **Underlying Property**: Sulfur atoms are soft Lewis bases and form strong coordination bonds with Fe(III) ions, enhancing iron incorporation into the catalyst.
- **Examples**:
  - **High Fe/Hf**:
    - **4-sulfanylbenzoic acid**
    - **3-sulfanylpropanoic acid**
    - **2-[[(2S)-2-amino-4-methylsulfanyl]butanoyl]amino]acetic acid**

---

**Rule 2: Aromatic Carboxylic Acids with Strong Electron-Withdrawing Substituents Predict High Fe/Hf**

- **Description**: Modifiers that are **aromatic carboxylic acids** substituted with strong **electron-withdrawing groups (EWGs)** such as **nitro (-NO₂)**, **bromo (-Br)**, or **pyridyl rings**, predict a **high Fe/Hf value**.
- **Underlying Property**: EWGs increase the acidity and coordination ability of the carboxylate group, enhancing Fe binding.
- **Examples**:
  - **High Fe/Hf**:
    - **4-nitrobenzoic acid**
    - **4-(bromomethyl)benzoic acid**
    - **4-pyridin-4-ylbenzoic acid**
    - **4-pyridin-4-ylbutanoic acid**
  - **Low Fe/Hf**:
    - **4-methylbenzoic acid** — electron-donating methyl group reduces Fe binding.

---

**Rule 3: Modifiers with Terminal Primary Amino Groups on Medium to Long Aliphatic Chains and a Carboxylic Acid Predict High Fe/Hf**

- **Description**: Modifiers possessing a **terminal primary amino group (-NH₂)** on an **aliphatic chain of five or more carbons**, combined with a **carboxylic acid group (-COOH)**, predict a **high Fe/Hf value**.
- **Underlying Property**: The spatial arrangement allows for effective chelation of Fe ions via both amino and carboxylate groups.
- **Examples**:
  - **High Fe/Hf**:
    - **5-aminopentanoic acid**
    - **7-aminoheptanoic acid**
    - **8-aminooctanoic acid**
  - **Low Fe/Hf**:
    - **Octanoic acid** — lacks amino group.

---

**Rule 4: Alpha-Amino Acids with Non-Electron-Rich Side Chains Predict High Fe/Hf**

- **Description**: Modifiers that are **alpha-amino acids** with **non-electron-rich side chains**, such as **phenylalanine** or **aspartic acid**, predict a **high Fe/Hf value**. In contrast, alpha-amino acids with **electron-rich aromatic side chains** predict a **low Fe/Hf value**.
- **Underlying Property**: Electron-rich side chains may interfere with Fe coordination by engaging in intramolecular interactions or competing for the metal ion.
- **Examples**:
  - **High Fe/Hf**:
    - **(2S)-2-aminobutanedioic acid** (Aspartic acid)
    - **(2S)-2-amino-3-phenylpropanoic acid** (Phenylalanine)
  - **Low Fe/Hf**:
    - **(2S)-2-aminopentanedioic acid** (Glutamic acid) — longer side chain may reduce coordination efficiency.
    - **(2R)-2-amino-3-(1H-indol-3-yl)propanoic acid** (Tryptophan) — electron-rich indole ring interferes with Fe binding.

---

**Rule 5: Modifiers with Aromatic Hydroxyl Groups Predict Low Fe/Hf**

- **Description**: Modifiers containing **aromatic rings** with **hydroxyl groups (-OH)**, especially **phenolic hydroxyls**, predict a **low Fe/Hf value**.
- **Underlying Property**: Phenolic hydroxyls are electron-rich and can form intramolecular hydrogen bonds, reducing their availability to coordinate with Fe ions.
- **Examples**:
  - **Low Fe/Hf**:
    - **5-(4-hydroxyphenyl)pentanoic acid**
    - **3-(4-hydroxyphenyl)propanoic acid**
    - **2-[(4-hydroxybenzoyl)amino]acetic acid**

---

**Rule 6: Modifiers with Multiple Adjacent Hydroxyl Groups (Polyols or Sugar Acids) Predict Low Fe/Hf**

- **Description**: Modifiers that have **multiple adjacent hydroxyl groups (-OH)**, such as in **polyols** or **sugar acids**, along with a **carboxylic acid group (-COOH)**, predict a **low Fe/Hf value**.
- **Underlying Property**: Multiple hydroxyl groups may engage in intramolecular hydrogen bonding, making them less available for coordination with Fe ions.
- **Examples**:
  - **Low Fe/Hf**:
    - **(2R,3S,4R,5R)-2,3,4,5,6-pentahydroxyhexanoic acid**

---

**Rule 7: Modifiers with Heavily Fluorinated Aliphatic Chains Predict Low Fe/Hf**

- **Description**: Modifiers containing **multiple fluorine atoms** on **aliphatic chains**, especially those that are highly fluorinated, predict a **low Fe/Hf value**.
- **Underlying Property**: Fluorine's strong electron-withdrawing effect decreases the electron density of coordinating groups, reducing their ability to bind Fe ions.
- **Examples**:
  - **Low Fe/Hf**:
    - **2,2,3,3,4,4,5,5,5-nonafluoropentanoic acid**
    - **4-[(2,2,2-trifluoroacetyl)amino]butanoic acid**

---

**Rule 8: Modifiers with Polyether Chains and Terminal Polar Groups Combined with a Carboxylic Acid Predict High Fe/Hf**

- **Description**: Modifiers featuring **polyether chains** (multiple **ether linkages (-O-)**) ending with a **terminal polar group** (e.g., **methoxy (-OCH₃)** or **amino (-NH₂)**), along with a **carboxylic acid group (-COOH)**, predict a **high Fe/Hf value**.
- **Underlying Property**: Multiple ether oxygen atoms and terminal polar groups provide additional coordination sites for Fe ions.
- **Examples**:
  - **High Fe/Hf**:
    - **2-[2-(2-methoxyethoxy)ethoxy]acetic acid**
    - **3-[2-(2-aminoethoxy)ethoxy]propanoic acid**

---

**Rule 9: Modifiers with Electron-Rich Heterocycles Predict Low Fe/Hf**

- **Description**: Modifiers featuring **electron-rich heterocyclic rings** (e.g., **indole**, **pyrazole**, **pyridone**), along with a **carboxylic acid group (-COOH)**, predict a **low Fe/Hf value**.
- **Underlying Property**: Electron-rich heterocycles can engage in strong pi interactions or coordinate preferentially with other metal centers, reducing Fe binding.
- **Examples**:
  - **Low Fe/Hf**:
    - **(2R)-2-amino-3-(1H-indol-3-yl)propanoic acid** (Tryptophan)
    - **1H-pyrazole-4-carboxylic acid**
    - **2-oxo-1H-pyridine-4-carboxylic acid**

---

**Rule 10: Modifiers with Straight-Chain Aliphatic Carboxylic Acids Without Additional Functional Groups Predict Low Fe/Hf**

- **Description**: Modifiers that are **straight-chain aliphatic carboxylic acids** lacking additional polar or coordinating functional groups predict a **low Fe/Hf value**.
- **Underlying Property**: The absence of extra coordination sites limits Fe ion binding to the catalyst.
- **Examples**:
  - **Low Fe/Hf**:
    - **Octanoic acid**
    - **4-oxoheptanedioic acid**

---

**Rule 11: Modifiers with Electron-Donating Groups on Aromatic Carboxylic Acids Predict Low Fe/Hf**

- **Description**: Modifiers that are **aromatic carboxylic acids** substituted with **electron-donating groups (EDGs)** such as **amino (-NH₂)**, **hydroxyl (-OH)**, or **methyl (-CH₃)** predict a **low Fe/Hf value**.
- **Underlying Property**: EDGs increase electron density on the aromatic ring, decreasing the acidity of the carboxylic acid and reducing its ability to coordinate with Fe ions.
- **Examples**:
  - **Low Fe/Hf**:
    - **4-aminobenzoic acid**
    - **4-methylbenzoic acid**
    - **2-[(4-hydroxybenzoyl)amino]acetic acid**

---

**Rule 12: Modifiers with Long Aliphatic Chains Terminated with Polar Groups and a Carboxylic Acid Predict High Fe/Hf**

- **Description**: Modifiers featuring **long aliphatic chains (seven or more carbons)** terminated with **polar functional groups** like **hydroxyl (-OH)** or **amino (-NH₂)**, combined with a **carboxylic acid group (-COOH)**, predict a **high Fe/Hf value**.
- **Underlying Property**: The extended chain with terminal polar groups provides multiple coordination sites and flexibility, facilitating Fe incorporation.
- **Examples**:
  - **High Fe/Hf**:
    - **7-hydroxyheptanoic acid**
    - **7-aminoheptanoic acid**
    - **8-aminooctanoic acid**
  - **Low Fe/Hf**:
    - **Octanoic acid** — lacks terminal polar group.

---

**Rule 13: Modifiers Combining Ketone Groups Conjugated with Aromatic Rings and a Carboxylic Acid Predict High Fe/Hf**

- **Description**: Modifiers containing **conjugated ketone groups (>C=O)** within aromatic systems, along with a **carboxylic acid group (-COOH)**, predict a **high Fe/Hf value**.
- **Underlying Property**: Conjugation with ketone groups enhances the electron-withdrawing nature of the aromatic ring, increasing the acidity and coordination ability of the carboxylate group.
- **Examples**:
  - **High Fe/Hf**:
    - **1,3-dioxo-2-benzofuran-5-carboxylic acid**
    - **4-(3,4-dimethoxyphenyl)-4-oxobutanoic acid**

---

**End of Rules**

---

These rules are formulated to capture the relationships between molecular modifier structures and the Fe/Hf ratio in the catalyst system. Each rule combines multiple substructures and considers underlying chemical properties to predict whether a modifier will result in a high or low Fe/Hf value. The rules aim for broad coverage of the dataset while balancing simplicity and specificity, in accordance with the given requirements.---------------------------------------------------------------


    Current_Matrix:
    Matrix Generator Message:
Rule 1,Rule 2,Rule 3,Rule 4,Rule 5,Rule 6,Rule 7,Rule 8,Rule 9,Rule 10,Rule 11,Rule 12,Rule 13
0,1,0,0,0,0,0,0,0,0,0,0,0
0,0,0,1,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,1,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,-1,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,-1,0,0,0,0,0,-1,0,0
0,1,0,0,0,0,0,0,-1,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0
1,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0
0,1,0,0,0,0,0,0,0,0,0,0,0
0,0,0,1,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0
0,1,0,1,0,0,0,0,-1,0,0,0,0
0,0,0,0,0,0,0,0,-1,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0
1,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,-1,0,0,0,0,0,-1,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0
0,1,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,-1,0,0
1,0,0,0,0,0,0,0,0,0,0,0,0
0,1,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,1
0,0,0,0,-1,0,0,0,0,0,-1,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,1,0
0,0,0,0,-1,0,0,0,0,0,-1,0,0
0,0,1,0,0,0,0,0,0,0,0,1,0
0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,1,0,0,0,0,0,0,0,0,0
0,0,1,0,0,0,0,0,0,0,0,1,0

---------------------------------------------------------------


    Train Accuracy: 0.8285714285714286; Test Accuracy: 0.0
    Train Support: 0.08888888888888889; Test Support: 0.0
    Train Confidence: 0.911111111111111; Test Confidence: 0.4444444444444444
    Train Lift: 1.8097312999273782; Test Lift: NONE
    Train Leverage: 0.037823129251700685; Test Leverage: NONE
    ----------------------------------------------------------------------------------

    Current Rule Code:
def rule2matrix(smiles_list):
    # Import required modules
    import pandas as pd
    from rdkit import Chem

    # Define SMARTS patterns for functional groups using corrected patterns from suggestions

    # Carboxylic acid group (-COOH) and its anion form (-COO-)
    carboxylic_acid = ['[CX3](=O)[OX2H1]', '[CX3](=O)[O-]']

    # Thiol group (-SH)
    thiol = '[SX2H]'

    # Thioether group (-S-)
    thioether = '[#6][SX2][#6]'

    # Aromatic hydroxyl group (phenol)
    aromatic_hydroxyl = '[c][OH]'

    # Electron-withdrawing groups (EWGs)
    # Nitro group attached to aromatic ring
    nitro_on_aromatic = '[$(c[N+](=O)[O-])]'    

    # Halogens attached to aromatic ring (corrected as per Suggestion 2)
    halogen_on_aromatic = '[cH0][F,Cl,Br,I]'

    # Pyridine ring (adjusted as per Suggestion 1)
    pyridine_ring = '[n][c][c][c][c][c]'

    # Terminal primary amino group on aliphatic chain of five or more carbons (Suggestion 3)
    terminal_primary_amine = '[NX3;H2][CH2][CH2][CH2][CH2][CH2]'

    # Alpha-amino acid with non-electron-rich side chain (Suggestion 4)
    alpha_amino_acid = '[NX3;H2][CX4H]([#6])[CX3](=O)[OX2H1,O-]'

    # Exclude patterns for electron-rich side chains (aromatic rings or heterocycles)
    electron_rich_side_chain = '[CX4H]([$(c),$(n),$(o)])[CX3](=O)[OX2H1,O-]'

    # Multiple adjacent hydroxyl groups (polyols or sugar acids) (Suggestion 6)
    # Pattern for at least two adjacent hydroxyl groups
    adjacent_hydroxyls = '[CX4;H2,H1][OX2H][CX4;H2,H1][OX2H]'

    # Heavily fluorinated aliphatic chains (Suggestion 7)
    heavily_fluorinated = '[CX4;R0][F][F]'

    # Polyether chains with at least two ether linkages (Suggestion 8)
    # As recursive SMARTS is not fully supported, define patterns for two and three ether linkages
    polyether_chain = ['[#6][OX2][#6][OX2][#6]', '[#6][OX2][#6][OX2][#6][OX2][#6]']

    # Terminal polar groups
    terminal_hydroxyl = '[OX2H][CX4;!$(C(=O))]'
    terminal_amino = '[NX3;H2][CX4;!$(C(=O))]'

    # Electron-rich heterocycles (Suggestion 9)
    # Indole ring
    indole = 'c1[nH]c2c(c1)cccc2'
    # Pyrazole ring
    pyrazole = 'c1c[nH]n[c]1'
    # Pyridone ring
    pyridone = 'c1cc[nH]c(=O)c1'

    # Straight-chain aliphatic carboxylic acids without additional functional groups (Rule 10)
    # Long aliphatic chain of five or more carbons
    long_aliphatic_chain = '[CH2]-[CH2]-[CH2]-[CH2]-[CH2]'

    # Exclude patterns for Rule 10 (exclude presence of hydroxyl, amine, ether groups)
    exclude_polar_groups = ['[OX2H]', '[NX3;H2,H1]', '[OX2][#6]']

    # Electron-donating groups on aromatic carboxylic acids (Rule 11)
    # Amino group on aromatic ring
    amino_on_aromatic = '[c][NX3;H2,H1]'
    # Hydroxyl group on aromatic ring (phenol)
    hydroxyl_on_aromatic = '[c][OH]'
    # Methyl group on aromatic ring
    methyl_on_aromatic = '[c][CH3]'

    # Ketone conjugated with aromatic ring (Rule 13)
    conjugated_ketone = '[a][CX3](=O)[a,#6]'

    # Define the rules
    rules = [
        {
            'number': 1,
            'description': 'Modifiers containing sulfur functional groups (thiol or thioether) and a carboxylic acid predict high Fe/Hf.',
            'patterns': [
                [thiol, thioether],  # One of thiol or thioether
                carboxylic_acid      # Carboxylic acid
            ],
            'prediction': 1  # High Fe/Hf
        },
        {
            'number': 2,
            'description': 'Aromatic carboxylic acids with strong electron-withdrawing substituents (nitro, bromo, pyridyl rings) predict high Fe/Hf.',
            'patterns': [
                carboxylic_acid,
                [nitro_on_aromatic, halogen_on_aromatic, pyridine_ring]
            ],
            'prediction': 1
        },
        {
            'number': 3,
            'description': 'Modifiers with terminal primary amino groups on medium to long aliphatic chains and a carboxylic acid predict high Fe/Hf.',
            'patterns': [
                [terminal_primary_amine],
                carboxylic_acid
            ],
            'prediction': 1
        },
        {
            'number': 4,
            'description': 'Alpha-amino acids with non-electron-rich side chains predict high Fe/Hf.',
            'patterns': [
                [alpha_amino_acid]
            ],
            'exclude_patterns': [
                [electron_rich_side_chain]
            ],
            'prediction': 1
        },
        {
            'number': 5,
            'description': 'Modifiers with aromatic hydroxyl groups predict low Fe/Hf.',
            'patterns': [
                [aromatic_hydroxyl]
            ],
            'prediction': -1
        },
        {
            'number': 6,
            'description': 'Modifiers with multiple adjacent hydroxyl groups (polyols or sugar acids) predict low Fe/Hf.',
            'patterns': [
                [adjacent_hydroxyls],
                carboxylic_acid
            ],
            'prediction': -1
        },
        {
            'number': 7,
            'description': 'Modifiers with heavily fluorinated aliphatic chains predict low Fe/Hf.',
            'patterns': [
                [heavily_fluorinated]
            ],
            'prediction': -1
        },
        {
            'number': 8,
            'description': 'Modifiers with polyether chains and terminal polar groups combined with a carboxylic acid predict high Fe/Hf.',
            'patterns': [
                polyether_chain,
                [terminal_hydroxyl, terminal_amino],
                carboxylic_acid
            ],
            'prediction': 1
        },
        {
            'number': 9,
            'description': 'Modifiers with electron-rich heterocycles predict low Fe/Hf.',
            'patterns': [
                [indole, pyrazole, pyridone],
                carboxylic_acid
            ],
            'prediction': -1
        },
        {
            'number': 10,
            'description': 'Modifiers with straight-chain aliphatic carboxylic acids without additional functional groups predict low Fe/Hf.',
            'patterns': [
                carboxylic_acid,
                [long_aliphatic_chain]
            ],
            'exclude_patterns': [
                exclude_polar_groups
            ],
            'prediction': -1
        },
        {
            'number': 11,
            'description': 'Modifiers with electron-donating groups on aromatic carboxylic acids predict low Fe/Hf.',
            'patterns': [
                [amino_on_aromatic, hydroxyl_on_aromatic, methyl_on_aromatic],
                carboxylic_acid
            ],
            'prediction': -1
        },
        {
            'number': 12,
            'description': 'Modifiers with long aliphatic chains terminated with polar groups and a carboxylic acid predict high Fe/Hf.',
            'patterns': [
                [long_aliphatic_chain],
                [terminal_hydroxyl, terminal_amino],
                carboxylic_acid
            ],
            'prediction': 1
        },
        {
            'number': 13,
            'description': 'Modifiers combining ketone groups conjugated with aromatic rings and a carboxylic acid predict high Fe/Hf.',
            'patterns': [
                [conjugated_ketone],
                carboxylic_acid
            ],
            'prediction': 1
        },
    ]

    # Compile SMARTS patterns
    for rule in rules:
        # For each group in patterns, compile the SMARTS
        compiled_patterns = []
        for group in rule.get('patterns', []):
            compiled_group = [Chem.MolFromSmarts(pat) for pat in group]
            compiled_patterns.append(compiled_group)
        rule['compiled_patterns'] = compiled_patterns
        # Compile exclude patterns if any
        if 'exclude_patterns' in rule:
            compiled_excludes = []
            for group in rule['exclude_patterns']:
                compiled_group = [Chem.MolFromSmarts(pat) for pat in group]
                compiled_excludes.append(compiled_group)
            rule['compiled_exclude_patterns'] = compiled_excludes

    # Initialize results list
    results = []

    # Process each SMILES string
    for smi in smiles_list:
        mol = Chem.MolFromSmiles(smi)
        if mol is None:
            # If the molecule cannot be parsed, append a row of zeros
            results.append([0]*len(rules))
            continue
        row = []
        for rule in rules:
            try:
                match = True
                # Check exclude patterns if any
                if 'exclude_patterns' in rule:
                    for group in rule['compiled_exclude_patterns']:
                        group_match = False
                        for pat in group:
                            if mol.HasSubstructMatch(pat):
                                group_match = True
                                break
                        if group_match:
                            match = False
                            break
                    if not match:
                        row.append(0)
                        continue
                # Check required patterns
                for compiled_group in rule['compiled_patterns']:
                    group_match = False
                    for pat in compiled_group:
                        if mol.HasSubstructMatch(pat):
                            group_match = True
                            break
                    if not group_match:
                        match = False
                        break
                if match:
                    row.append(rule['prediction'])
                else:
                    row.append(0)
            except Exception as e:
                # In case of any error, append 0
                row.append(0)
        results.append(row)
    # Create DataFrame with results
    df = pd.DataFrame(results, columns=[f'Rule {rule['number']}' for rule in rules])
    return df
--------------------------------------------------
    Target Name: Fe/Hf
    GPT Model: o1-preview-2024-09-12
    ML Model: ETC
    Current_Rules:
    **Start of Rules**

---

**Rule 1: Modifiers Containing Sulfur Functional Groups Predict High Fe/Hf**

- **Description**: Modifiers that possess **sulfur-containing functional groups**, such as **thiol (-SH)** or **thioether (-S-CH₃)** groups, in combination with a **carboxylic acid (-COOH)**, predict a **high Fe/Hf value**.
- **Underlying Property**: Sulfur atoms are good ligands for Fe(III) ions due to their soft Lewis base character, facilitating strong coordination bonds and enhancing Fe incorporation.
- **Examples**:
  - **High Fe/Hf**:
    - **4-sulfanylbenzoic acid**
    - **3-sulfanylpropanoic acid**
    - **2-[[(2S)-2-amino-4-methylsulfanylbutanoyl]amino]acetic acid**

---

**Rule 2: Modifiers with Terminal Primary Amino Groups on Medium to Long Aliphatic Chains Predict High Fe/Hf**

- **Description**: Modifiers with a **terminal primary amino group (-NH₂)** on an **aliphatic chain of five or more carbons**, combined with a **carboxylic acid (-COOH)**, predict a **high Fe/Hf value**.
- **Underlying Property**: These molecules can chelate Fe ions effectively through both amino and carboxylate groups, facilitating Fe incorporation.
- **Examples**:
  - **High Fe/Hf**:
    - **5-aminopentanoic acid**
    - **7-aminoheptanoic acid**
    - **8-aminooctanoic acid**
  - **Low Fe/Hf**:
    - **Octanoic acid** (lacks amino group)

---

**Rule 3: Small Alpha-Amino Acids with Short Side Chains Predict High Fe/Hf**

- **Description**: Modifiers that are **small alpha-amino acids** with **short, non-bulky side chains**, predict a **high Fe/Hf value**. This includes amino acids like **aspartic acid**.
- **Underlying Property**: The amino and carboxylate groups allow for bidentate coordination with Fe ions; smaller side chains reduce steric hindrance, enhancing binding.
- **Examples**:
  - **High Fe/Hf**:
    - **(2S)-2-aminobutanedioic acid** (Aspartic acid)
  - **Low Fe/Hf**:
    - **(2S)-2-aminopentanedioic acid** (Glutamic acid)—longer side chain may hinder coordination.

---

**Rule 4: Aromatic Carboxylic Acids with Electron-Withdrawing Substituents Predict High Fe/Hf**

- **Description**: Modifiers that are **aromatic carboxylic acids** substituted with **electron-withdrawing groups (EWGs)** such as **nitro (-NO₂)**, **halogens (-Br)**, or **pyridyl rings**, predict a **high Fe/Hf value**.
- **Underlying Property**: EWGs increase the acidity of the carboxylic acid, enhancing its ability to coordinate with Fe ions.
- **Examples**:
  - **High Fe/Hf**:
    - **4-nitrobenzoic acid**
    - **4-(bromomethyl)benzoic acid**
    - **4-pyridin-4-ylbenzoic acid**

---

**Rule 5: Modifiers with Polyether Chains and Terminal Polar Groups Predict High Fe/Hf**

- **Description**: Modifiers featuring **polyether chains** (multiple **ether linkages (-O-)**) with **terminal polar groups** like **amino (-NH₂)** or **methoxy (-OCH₃)**, along with a **carboxylic acid (-COOH)**, predict a **high Fe/Hf value**.
- **Underlying Property**: The multiple ether oxygens and terminal polar groups provide additional coordination sites for Fe ions.
- **Examples**:
  - **High Fe/Hf**:
    - **2-[2-(2-methoxyethoxy)ethoxy]acetic acid**
    - **3-[2-(2-aminoethoxy)ethoxy]propanoic acid**

---

**Rule 6: Modifiers with Electron-Rich Aromatic Hydroxyl Groups Predict Low Fe/Hf**

- **Description**: Modifiers containing **electron-rich aromatic rings** with **hydroxyl groups (-OH)**, especially **phenolic hydroxyls**, predict a **low Fe/Hf value**.
- **Underlying Property**: Phenolic hydroxyls can engage in intramolecular hydrogen bonding or compete with Fe binding sites, reducing Fe coordination.
- **Examples**:
  - **Low Fe/Hf**:
    - **5-(4-hydroxyphenyl)pentanoic acid**
    - **3-(4-hydroxyphenyl)propanoic acid**
    - **2-[(4-hydroxybenzoyl)amino]acetic acid**

---

**Rule 7: Modifiers with Electron-Rich Heteroaromatic Rings Predict Low Fe/Hf**

- **Description**: Modifiers containing **electron-rich heteroaromatic rings** (e.g., **indole**, **pyrazole**, **pyridone**), along with a **carboxylic acid (-COOH)**, predict a **low Fe/Hf value**.
- **Underlying Property**: The electron-rich heterocycles may interfere with Fe coordination by competing for binding or through steric hindrance.
- **Examples**:
  - **Low Fe/Hf**:
    - **(2R)-2-amino-3-(1H-indol-3-yl)propanoic acid** (Tryptophan)
    - **1H-pyrazole-4-carboxylic acid**
    - **2-oxo-1H-pyridine-4-carboxylic acid**

---

**Rule 8: Modifiers with Multiple Adjacent Hydroxyl Groups Predict Low Fe/Hf**

- **Description**: Modifiers that have **multiple adjacent hydroxyl groups (-OH)** (as in **polyols** or **sugar acids**), along with a **carboxylic acid (-COOH)**, predict a **low Fe/Hf value**.
- **Underlying Property**: Extensive intramolecular hydrogen bonding may hinder coordination with Fe ions by occupying potential binding sites.
- **Examples**:
  - **Low Fe/Hf**:
    - **(2R,3S,4R,5R)-2,3,4,5,6-pentahydroxyhexanoic acid**

---

**Rule 9: Modifiers with Highly Fluorinated Aliphatic Chains Predict Low Fe/Hf**

- **Description**: Modifiers containing **multiple fluorine atoms** on **aliphatic chains**, especially those that are **highly fluorinated**, predict a **low Fe/Hf value**.
- **Underlying Property**: Fluorine's strong electronegativity reduces the electron density of coordinating groups, diminishing their ability to bind Fe ions.
- **Examples**:
  - **Low Fe/Hf**:
    - **2,2,3,3,4,4,5,5,5-nonafluoropentanoic acid**
    - **4-[(2,2,2-trifluoroacetyl)amino]butanoic acid**

---

**Rule 10: Straight-Chain Aliphatic Carboxylic Acids Without Additional Functional Groups Predict Low Fe/Hf**

- **Description**: Modifiers that are **straight-chain aliphatic carboxylic acids** lacking additional polar or coordinating functional groups predict a **low Fe/Hf value**.
- **Underlying Property**: The absence of extra coordination sites limits the binding capacity for Fe ions.
- **Examples**:
  - **Low Fe/Hf**:
    - **Octanoic acid**
    - **4-oxoheptanedioic acid**

---

**Rule 11: Modifiers with Long Aliphatic Chains Terminated with Polar Groups Predict High Fe/Hf**

- **Description**: Modifiers featuring **long aliphatic chains** (seven or more carbons) terminated with **polar functional groups** like **hydroxyl (-OH)** or **amino (-NH₂)**, in addition to a **carboxylic acid (-COOH)**, predict a **high Fe/Hf value**.
- **Underlying Property**: The flexibility and distance between coordination sites allow effective chelation of Fe ions.
- **Examples**:
  - **High Fe/Hf**:
    - **7-hydroxyheptanoic acid**
    - **7-aminoheptanoic acid**
    - **8-aminooctanoic acid**

---

**Rule 12: Modifiers with Steric Hindrance Near the Carboxylate Group Predict Low Fe/Hf**

- **Description**: Modifiers where **bulky groups** or **steric hindrance** near the **carboxylic acid group (-COOH)** impede Fe coordination predict a **low Fe/Hf value**.
- **Underlying Property**: Steric hindrance can prevent effective interaction between the modifier and Fe ions.
- **Examples**:
  - **Low Fe/Hf**:
    - **(2S)-6-acetamido-2-aminohexanoic acid** (acetamido group adds steric bulk)

---

**End of Rules**

---

These rules are designed to capture the relationships between molecular modifier structures and the Fe/Hf ratio in the catalyst system. Each rule combines multiple substructures and considers underlying chemical properties to predict whether a modifier will result in a high or low Fe/Hf value. The rules aim for broad coverage of the dataset while balancing simplicity and specificity, in accordance with the given requirements.---------------------------------------------------------------


    Current_Matrix:
    Matrix Generator Message:
Rule 1,Rule 2,Rule 3,Rule 4,Rule 5,Rule 6,Rule 7,Rule 8,Rule 9,Rule 10,Rule 11,Rule 12
0,0,0,0,0,0,0,0,0,0,0,0
0,0,1,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0
0,0,1,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,-1,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0
1,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0
0,0,1,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,-1,0,0,0
0,0,1,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,-1,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0
1,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,-1,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,1,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0
1,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,-1,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,-1,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,-1,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0
0,0,1,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0

---------------------------------------------------------------


    Train Accuracy: 0.6857142857142857; Test Accuracy: 0.0
    Train Support: 0.08571428571428572; Test Support: 0.0
    Train Confidence: 1.0; Test Confidence: 0.5
    Train Lift: 2.020697167755991; Test Lift: NONE
    Train Leverage: 0.04326530612244898; Test Leverage: NONE
    ----------------------------------------------------------------------------------

    Current Rule Code:
def rule2matrix(smiles_list):
    # Define SMARTS patterns for functional groups

    # Carboxylic acid group (-COOH or -COO-)
    carboxylic_acid = ['[CX3](=O)[OX2H1]', '[CX3](=O)[O-]']  # Carboxylic acid or carboxylate anion

    # Thiol group (-SH)
    thiol = '[SX2H]'  # Sulfur (valence 2), with one hydrogen attached (thiol)

    # Thioether group (-S-)
    thioether = '[#16X2]([#6])[#6]'  # Sulfur (valence 2), bonded to two carbons (C-S-C)

    # Rule 1: Modifiers containing sulfur functional groups (thiol or thioether) and carboxylic acid
    rule1_patterns = [
        [thiol, thioether],
        carboxylic_acid
    ]

    # Rule 2: Terminal primary amino group on aliphatic chain of five or more carbons and carboxylic acid
    # Corrected pattern per Suggestion 1
    rule2_pattern = '[CX3](=O)[OX2H1,O-][CH2]{4,}[CH2][NX3;H2]'  # Carboxylic acid connected via 5 or more CH2 to NH2

    # Rule 3: Small alpha-amino acids with short side chains
    # Corrected pattern per Suggestion 2
    rule3_pattern = '[NX3;H2][CH]([#6,H])[CX3](=O)[OX2H1,O-]'  # Alpha amino acid with small side chain

    # Rule 4: Aromatic carboxylic acids with electron-withdrawing substituents
    # Aromatic carboxylic acid
    aromatic_carboxylic_acid = '[c][CX3](=O)[OX2H1,O-]'
    # Electron-withdrawing groups attached to aromatic carbon
    ewg_on_aromatic = [
        '[c][N+](=O)[O-]',   # Nitro group on aromatic ring
        '[c][F,Cl,Br,I]',    # Halogen on aromatic ring
        '[c][C]#[N]',        # Cyano group on aromatic ring
        '[c][SX4](=O)(=O)[OX2H1]',  # Sulfonic acid on aromatic ring
        '[c][CX4](F)(F)F'    # Trifluoromethyl group on aromatic ring
    ]

    # Rule 5: Polyether chains with terminal polar groups and carboxylic acid
    # Polyether chain (at least two ether linkages)
    polyether_chain = '([#6][OX2][#6]){2,}'  # At least two -C-O-C- units
    # Terminal polar groups: amino (-NH2) or methoxy (-OCH3)
    terminal_polar_groups = ['[NX3;H2]', '[OX2][CH3]']

    # Rule 6: Electron-rich aromatic hydroxyl groups (phenolic -OH) and carboxylic acid
    # Pattern refined per Suggestion 5
    phenolic_oh = 'c1ccc(cc1)[OX2H]'  # Hydroxyl directly attached to benzene ring

    # Rule 7: Electron-rich heteroaromatic rings and carboxylic acid
    # Patterns for indole, pyrazole, pyridone
    indole = 'c1cc2c(c1)[nH]c2'  # Indole ring
    pyrazole = 'c1cn[nH]c1'  # Pyrazole ring
    pyridone = 'O=c1ccncc1'  # Pyridone ring

    # Rule 8: Multiple adjacent hydroxyl groups (polyols) and carboxylic acid
    polyol = '[#6][OX2H]([#6][OX2H]){2,}'  # At least two adjacent hydroxyl groups

    # Rule 9: Highly fluorinated aliphatic chains and carboxylic acid
    # Pattern per Suggestion 6
    perfluoro_chain = '[#6]([F])([F])[#6]'  # Carbon bonded to two fluorines and another carbon

    # Rule 10: Straight-chain aliphatic carboxylic acids without additional functional groups
    # Aliphatic chain ending with carboxylic acid
    straight_chain_carboxylic_acid = '[CX4H2][CH2]{0,}[CX3](=O)[OX2H1,O-]'  # Aliphatic chain with carboxylic acid

    # Exclude patterns for Rule 10 (functional groups to exclude), per Suggestion 7
    exclude_patterns_rule10 = [
        thiol,
        thioether,
        '[NX3;!H2]',  # Exclude secondary and tertiary amines
        '[OX2][CH3]',  # Exclude terminal methoxy groups
        '[OX2H;!$([OX2H][CX3](=O)[OX1H0,O-])]',  # Exclude hydroxyls not part of carboxylic acids
        '[#7;!$([NX3;H2])]',  # Exclude other nitrogen atoms except primary amines
        '[#8;H1;!$([OX2H][CX3](=O)[OX1H0,O-])]'  # Exclude hydroxyls not part of carboxylic acids
    ]

    # Rule 11: Modifiers with long aliphatic chains terminated with polar groups and carboxylic acid
    long_chain = '[CH2]{5,}'  # Chains with 5 or more CH2 units
    terminal_polar_group = ['[NX3;H2]', '[OX2H]']  # Amino group or hydroxyl group

    # Rule 12: Steric hindrance near carboxylate group predicts low Fe/Hf
    steric_hindrance = '[#6][C]([C])(C)[CX3](=O)[OX2H1,O-]'  # Tertiary carbon adjacent to carboxylic acid

    # Define rules with their associated patterns
    rules = [
        {
            'number': 1,
            'description': 'Modifiers containing sulfur functional groups (thiol or thioether) and a carboxylic acid',
            'patterns': [
                [thiol, thioether],
                carboxylic_acid
            ],
            'prediction': 1
        },
        {
            'number': 2,
            'description': 'Modifiers with terminal primary amino groups on medium to long aliphatic chains and a carboxylic acid',
            'patterns': [
                [rule2_pattern]
            ],
            'prediction': 1
        },
        {
            'number': 3,
            'description': 'Small alpha-amino acids with short side chains',
            'patterns': [
                [rule3_pattern]
            ],
            'prediction': 1
        },
        {
            'number': 4,
            'description': 'Aromatic carboxylic acids with electron-withdrawing substituents',
            'patterns': [
                [aromatic_carboxylic_acid],
                ewg_on_aromatic
            ],
            'prediction': 1
        },
        {
            'number': 5,
            'description': 'Modifiers with polyether chains and terminal polar groups and carboxylic acid',
            'patterns': [
                [polyether_chain],
                terminal_polar_groups,
                carboxylic_acid
            ],
            'prediction': 1
        },
        {
            'number': 6,
            'description': 'Modifiers with electron-rich aromatic hydroxyl groups and carboxylic acid',
            'patterns': [
                [phenolic_oh],
                carboxylic_acid
            ],
            'prediction': -1
        },
        {
            'number': 7,
            'description': 'Modifiers with electron-rich heteroaromatic rings and carboxylic acid',
            'patterns': [
                [indole, pyrazole, pyridone],
                carboxylic_acid
            ],
            'prediction': -1
        },
        {
            'number': 8,
            'description': 'Modifiers with multiple adjacent hydroxyl groups and carboxylic acid',
            'patterns': [
                [polyol],
                carboxylic_acid
            ],
            'prediction': -1
        },
        {
            'number': 9,
            'description': 'Modifiers with highly fluorinated aliphatic chains and carboxylic acid',
            'patterns': [
                [perfluoro_chain],
                carboxylic_acid
            ],
            'prediction': -1
        },
        {
            'number': 10,
            'description': 'Straight-chain aliphatic carboxylic acids without additional functional groups',
            'patterns': [
                [straight_chain_carboxylic_acid]
            ],
            'exclude_patterns': [
                exclude_patterns_rule10
            ],
            'prediction': -1
        },
        {
            'number': 11,
            'description': 'Modifiers with long aliphatic chains terminated with polar groups and carboxylic acid',
            'patterns': [
                [long_chain],
                terminal_polar_group,
                carboxylic_acid
            ],
            'prediction': 1
        },
        {
            'number': 12,
            'description': 'Modifiers with steric hindrance near the carboxylate group',
            'patterns': [
                [steric_hindrance]
            ],
            'prediction': -1
        }
    ]

    # Compile SMARTS patterns
    for rule in rules:
        compiled_patterns = []
        for group in rule.get('patterns', []):
            compiled_group = [Chem.MolFromSmarts(pat) for pat in group]
            compiled_patterns.append(compiled_group)
        rule['compiled_patterns'] = compiled_patterns
        # Compile exclude patterns if any
        if 'exclude_patterns' in rule:
            compiled_excludes = []
            for group in rule['exclude_patterns']:
                compiled_group = [Chem.MolFromSmarts(pat) for pat in group]
                compiled_excludes.append(compiled_group)
            rule['compiled_exclude_patterns'] = compiled_excludes

    # Initialize results list
    results = []

    # Process each SMILES string
    for smi in smiles_list:
        mol = Chem.MolFromSmiles(smi)
        if mol is None:
            # If the molecule cannot be parsed, append a row of zeros
            results.append([0]*len(rules))
            continue
        row = []
        for rule in rules:
            try:
                match = True
                # Check exclude patterns if any
                if 'exclude_patterns' in rule:
                    for group in rule['compiled_exclude_patterns']:
                        for pat in group:
                            if mol.HasSubstructMatch(pat):
                                match = False
                                break
                        if not match:
                            break
                    if not match:
                        row.append(0)
                        continue
                # Check required patterns
                for compiled_group in rule['compiled_patterns']:
                    group_match = False
                    for pat in compiled_group:
                        if mol.HasSubstructMatch(pat):
                            group_match = True
                            break
                    if not group_match:
                        match = False
                        break
                if match:
                    row.append(rule['prediction'])
                else:
                    row.append(0)
            except Exception as e:
                # In case of any error, append 0
                row.append(0)
        results.append(row)
    # Create DataFrame with results
    df = pd.DataFrame(results, columns=[f'Rule {rule["number"]}' for rule in rules])
    return df

--------------------------------------------------
    Target Name: Fe/Hf
    GPT Model: o1-preview-2024-09-12
    ML Model: ETC
    Current_Rules:
    **Start of Rules**

---

**Rule 1: Modifiers Containing Sulfur Groups and a Carboxylic Acid Predict High Fe/Hf**

- **Description**: Modifiers that possess **sulfur-containing functional groups** such as **thiol (-SH)** or **thioether (-S-)**, in combination with a **carboxylic acid (-COOH)**, predict a **high Fe/Hf value**.
- **Underlying Property**: Sulfur atoms are soft Lewis bases that form strong coordination bonds with Fe(III) ions, enhancing Fe incorporation into the catalyst.
- **Examples**:
  - **High Fe/Hf**:
    - **4-sulfanylbenzoic acid**
    - **3-sulfanylpropanoic acid**
    - **2-[[(2S)-2-amino-4-methylsulfanylbutanoyl]amino]acetic acid**

---

**Rule 2: Modifiers with Terminal Primary Amines on Medium to Long Aliphatic Chains Predict High Fe/Hf**

- **Description**: Modifiers featuring a **terminal primary amino group (-NH₂)** on an **aliphatic chain of five or more carbons**, along with a **carboxylic acid (-COOH)**, predict a **high Fe/Hf value**.
- **Underlying Property**: The amino and carboxylate groups can chelate Fe ions effectively, enhancing their incorporation into the catalyst framework.
- **Examples**:
  - **High Fe/Hf**:
    - **5-aminopentanoic acid**
    - **7-aminoheptanoic acid**
    - **8-aminooctanoic acid**

---

**Rule 3: Aromatic Carboxylic Acids with Electron-Withdrawing Substituents Predict High Fe/Hf**

- **Description**: Modifiers that are **aromatic carboxylic acids** substituted with **electron-withdrawing groups (EWGs)** such as **nitro (-NO₂)**, **bromo (-Br)**, or **pyridyl rings**, predict a **high Fe/Hf value**.
- **Underlying Property**: EWGs increase the acidity of the carboxylic acid, enhancing its ability to coordinate with Fe ions by stabilizing the negative charge on the carboxylate.
- **Examples**:
  - **High Fe/Hf**:
    - **4-nitrobenzoic acid**
    - **4-(bromomethyl)benzoic acid**
    - **4-pyridin-4-ylbenzoic acid**

---

**Rule 4: Modifiers with Polyether Chains and Terminal Polar Groups Predict High Fe/Hf**

- **Description**: Modifiers containing **polyether chains** (multiple **ether linkages (-O-)**) with **terminal polar groups** like **methoxy (-OCH₃)** or **amino (-NH₂)** groups, along with a **carboxylic acid (-COOH)**, predict a **high Fe/Hf value**.
- **Underlying Property**: The ether oxygen atoms and terminal polar groups provide multiple coordination sites for Fe ions, enhancing Fe incorporation through chelation.
- **Examples**:
  - **High Fe/Hf**:
    - **2-[2-(2-methoxyethoxy)ethoxy]acetic acid**
    - **3-[2-(2-aminoethoxy)ethoxy]propanoic acid**

---

**Rule 5: Modifiers with Electron-Rich Aromatic Hydroxyl Groups Predict Low Fe/Hf**

- **Description**: Modifiers that contain **electron-rich aromatic rings** with **hydroxyl groups (-OH)**, particularly **phenolic hydroxyls**, predict a **low Fe/Hf value**.
- **Underlying Property**: Phenolic hydroxyl groups can form strong intramolecular hydrogen bonds or compete with Fe binding sites, reducing the availability of coordination sites for Fe ions.
- **Examples**:
  - **Low Fe/Hf**:
    - **5-(4-hydroxyphenyl)pentanoic acid**
    - **3-(4-hydroxyphenyl)propanoic acid**
    - **2-[(4-hydroxybenzoyl)amino]acetic acid**

---

**Rule 6: Modifiers with Electron-Rich Heteroaromatic Rings Predict Low Fe/Hf**

- **Description**: Modifiers containing **electron-rich heteroaromatic rings** like **indole**, **pyrazole**, or **pyridone**, along with a **carboxylic acid (-COOH)**, predict a **low Fe/Hf value**.
- **Underlying Property**: Electron-rich heterocycles may form competing interactions or exhibit steric hindrance that interferes with effective Fe coordination.
- **Examples**:
  - **Low Fe/Hf**:
    - **(2R)-2-amino-3-(1H-indol-3-yl)propanoic acid** (Tryptophan)
    - **1H-pyrazole-4-carboxylic acid**
    - **2-oxo-1H-pyridine-4-carboxylic acid**

---

**Rule 7: Modifiers with Highly Fluorinated Aliphatic Chains Predict Low Fe/Hf**

- **Description**: Modifiers featuring **highly fluorinated aliphatic chains** with multiple **fluorine atoms (-F)** predict a **low Fe/Hf value**.
- **Underlying Property**: Fluorine's strong electronegativity pulls electron density away from coordinating groups, diminishing their ability to bind Fe ions effectively.
- **Examples**:
  - **Low Fe/Hf**:
    - **2,2,3,3,4,4,5,5,5-nonafluoropentanoic acid**
    - **4-[(2,2,2-trifluoroacetyl)amino]butanoic acid**

---

**Rule 8: Straight-Chain Aliphatic Carboxylic Acids Without Additional Functional Groups Predict Low Fe/Hf**

- **Description**: Modifiers that are **straight-chain aliphatic carboxylic acids** lacking additional polar or coordinating functional groups predict a **low Fe/Hf value**.
- **Underlying Property**: The absence of extra coordination sites limits the molecule's ability to bind Fe ions, resulting in lower Fe incorporation.
- **Examples**:
  - **Low Fe/Hf**:
    - **Octanoic acid**
    - **4-oxoheptanedioic acid**

---

**Rule 9: Modifiers with Multiple Carboxylic Acid Groups Without Additional Coordinating Functionalities Predict Low Fe/Hf**

- **Description**: Modifiers that have multiple **carboxylic acid (-COOH)** groups but lack other strong coordinating functionalities predict a **low Fe/Hf value**.
- **Underlying Property**: Excessive carboxylate groups without complementary coordinating sites may lead to unfavorable interactions or precipitation, reducing Fe incorporation.
- **Examples**:
  - **Low Fe/Hf**:
    - **(2S)-2-aminopentanedioic acid** (Glutamic acid)
    - **(2R,3S,4R,5R)-2,3,4,5,6-pentahydroxyhexanoic acid**

---

**Rule 10: Modifiers with Aliphatic Chains Terminated with Polar Groups Predict High Fe/Hf**

- **Description**: Modifiers featuring **long aliphatic chains** terminated with **polar functional groups** like **hydroxyl (-OH)** or **amino (-NH₂)** groups, in addition to a **carboxylic acid (-COOH)**, predict a **high Fe/Hf value**.
- **Underlying Property**: The flexibility of the aliphatic chain and the presence of terminal polar groups provide multiple coordination sites, enhancing Fe binding through chelation.
- **Examples**:
  - **High Fe/Hf**:
    - **7-hydroxyheptanoic acid**
    - **7-aminoheptanoic acid**
    - **8-aminooctanoic acid**

---

**Rule 11: Modifiers with Sterically Hindered Carboxylic Acid Groups Predict Low Fe/Hf**

- **Description**: Modifiers where the **carboxylic acid group (-COOH)** is adjacent to **bulky substituents** that cause steric hindrance predict a **low Fe/Hf value**.
- **Underlying Property**: Steric hindrance near the coordinating carboxylate group impedes effective interaction with Fe ions, reducing Fe incorporation.
- **Examples**:
  - **Low Fe/Hf**:
    - **(2S)-6-acetamido-2-aminohexanoic acid**

---

**Rule 12: Modifiers with Electron-Withdrawing Groups and Additional Coordination Sites Predict High Fe/Hf**

- **Description**: Modifiers possessing **electron-withdrawing groups (EWGs)** and additional **coordinating functional groups** such as **amino (-NH₂)** or **carbonyl (-C=O)** groups, along with a **carboxylic acid (-COOH)**, predict a **high Fe/Hf value**.
- **Underlying Property**: EWGs increase the acidity of coordinating sites, while additional functional groups provide multiple points for Fe coordination, enhancing Fe incorporation.
- **Examples**:
  - **High Fe/Hf**:
    - **4-pyridin-4-ylbutanoic acid**
    - **4-(3,4-dimethoxyphenyl)-4-oxobutanoic acid**

---

**Rule 13: Modifiers with Multiple Adjacent Hydroxyl Groups Predict Low Fe/Hf**

- **Description**: Modifiers that contain **multiple adjacent hydroxyl groups (-OH)** (as in **polyols** or **sugar acids**), together with a **carboxylic acid (-COOH)**, predict a **low Fe/Hf value**.
- **Underlying Property**: Multiple hydroxyl groups can engage in extensive hydrogen bonding, potentially forming a network that hinders Fe coordination.
- **Examples**:
  - **Low Fe/Hf**:
    - **(2R,3S,4R,5R)-2,3,4,5,6-pentahydroxyhexanoic acid**

---

**End of Rules**

---

These rules are formulated to predict whether a molecular modifier will result in a high or low Fe/Hf value based on the presence and combination of specific substructures and functional groups. Each rule incorporates underlying physical and chemical properties, such as coordination chemistry principles and electronic effects, to explain the observed outcomes. The rules aim to cover a broad range of the dataset while balancing simplicity and specificity, in accordance with the provided requirements.---------------------------------------------------------------


    Current_Matrix:
    Matrix Generator Message:
Rule 1,Rule 2,Rule 3,Rule 4,Rule 5,Rule 6,Rule 7,Rule 8,Rule 9,Rule 10,Rule 11,Rule 12,Rule 13
0,0,1,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,-1,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,-1,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,-1,0,0,0,0,0,0,0,0
0,0,1,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0
1,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,1,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,-1,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,-1,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0
1,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,-1,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,1,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0
1,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,-1,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,-1,0,0,0,0
0,0,0,0,0,0,-1,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,-1,0,0,0,0,0,0,0,0
0,1,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0
0,1,0,0,0,0,0,0,0,0,0,0,0
0,1,0,0,0,0,0,0,0,0,0,0,0

---------------------------------------------------------------


    Train Accuracy: 0.7142857142857143; Test Accuracy: 0.0
    Train Support: 0.07428571428571429; Test Support: 0.0
    Train Confidence: 1.0; Test Confidence: 0.5
    Train Lift: 2.0130718954248366; Test Lift: NONE
    Train Leverage: 0.03722448979591837; Test Leverage: NONE
    ----------------------------------------------------------------------------------

    Current Rule Code:
def rule2matrix(smiles_list):
    # Define SMARTS patterns for functional groups
    # Carboxylic acid group (-COOH)
    carboxylic_acid = '[CX3](=O)[OX2H1]'
    carboxylate_anion = '[CX3](=O)[O-]'
    
    # Thiol group (-SH)
    thiol = '[SX2H]'
    # Thioether group (-S-)
    thioether = '[#16X2][$([#6]);!$(S=[O,N])][$([#6]);!$(S=[O,N])]'  # Excludes sulfoxides and sulfones
    
    # Primary aliphatic amine (-NH2)
    primary_amine = '[NX3;H2][C;!$(C=[O,N,S])][C;!$(C=[O,N,S])][C;!$(C=[O,N,S])][C;!$(C=[O,N,S])][C;!$(C=[O,N,S])]'  # Chain of at least 5 carbons
    
    # Aromatic carboxylic acid
    aromatic_carboxylic_acid = '[c][CX3](=O)[OX2H1]'
    
    # Electron-withdrawing groups (EWGs) on aromatic ring
    nitro_group = '[c][NX3](=O)[O-]'
    bromo_group = '[c][Br]'
    pyridine_ring = 'n1ccccc1'
    
    # Polyether chain (at least two ether linkages)
    ether_linkage = '[#6][OX2][#6]'
    
    # Terminal methoxy group (-OCH3)
    methoxy_group = '[OX2][CH3]'
    
    # Terminal amino group (-NH2)
    terminal_amino = '[NX3;H2]'
    
    # Phenolic hydroxyl group (-OH attached to aromatic ring)
    phenol = '[c][OX2H]'
    
    # Electron-rich heteroaromatic rings
    indole = 'c1ccc2c(c1)[nH]c3c2cccc3'
    pyrazole = 'c1cc[nH]n1'
    pyridone = 'O=C1C=CC=CN1'
    
    # Highly fluorinated aliphatic chain
    fluorinated_chain = '[CX4]([F])([F])([F])'  # Trifluoromethyl group as a marker
    
    # Straight-chain aliphatic carboxylic acids without additional functional groups
    aliphatic_carboxylic_acid = '[CH3][CH2][CH2][CH2][CH2][CH2][CX3](=O)[OX2H1]'  # Octanoic acid example
    
    # Multiple carboxylic acid groups without additional coordinating functionalities
    multiple_carboxylic_acids = '[CX3](=O)[OX2H1].[CX3](=O)[OX2H1]'  # Simplified pattern
    
    # Long aliphatic chain terminated with polar groups
    long_chain_polar_terminal = '[C;!$(C=[O,N,S])]1~[C;!$(C=[O,N,S])]~[C;!$(C=[O,N,S])]~[C;!$(C=[O,N,S])]~[C;!$(C=[O,N,S])]1[OX2H,NX3;H2]'
    
    # Sterically hindered carboxylic acid groups
    steric_hindrance = '[CX3](=O)[OX2H1][C](C)(C)C'  # Tertiary butyl adjacent to COOH
    
    # Multiple adjacent hydroxyl groups
    polyol = '[#6][OX2H][#6][OX2H][#6][OX2H]'  # Three adjacent hydroxyls
    
    # Rules definition
    rules = [
        {
            'number': 1,
            'description': 'Modifiers containing sulfur groups (thiol or thioether) and a carboxylic acid predict high Fe/Hf',
            'patterns': [[thiol, thioether], [carboxylic_acid, carboxylate_anion]],
            'prediction': 1
        },
        {
            'number': 2,
            'description': 'Modifiers with terminal primary amines on medium to long aliphatic chains predict high Fe/Hf',
            'patterns': [[primary_amine], [carboxylic_acid, carboxylate_anion]],
            'prediction': 1
        },
        {
            'number': 3,
            'description': 'Aromatic carboxylic acids with electron-withdrawing substituents predict high Fe/Hf',
            'patterns': [[aromatic_carboxylic_acid], [nitro_group, bromo_group, pyridine_ring]],
            'prediction': 1
        },
        {
            'number': 4,
            'description': 'Modifiers with polyether chains and terminal polar groups predict high Fe/Hf',
            'patterns': [[ether_linkage], [methoxy_group, terminal_amino], [carboxylic_acid, carboxylate_anion]],
            'counts': {ether_linkage: 2},
            'prediction': 1
        },
        {
            'number': 5,
            'description': 'Modifiers with electron-rich aromatic hydroxyl groups predict low Fe/Hf',
            'patterns': [[phenol], [carboxylic_acid, carboxylate_anion]],
            'prediction': -1
        },
        {
            'number': 6,
            'description': 'Modifiers with electron-rich heteroaromatic rings predict low Fe/Hf',
            'patterns': [[indole, pyrazole, pyridone], [carboxylic_acid, carboxylate_anion]],
            'prediction': -1
        },
        {
            'number': 7,
            'description': 'Modifiers with highly fluorinated aliphatic chains predict low Fe/Hf',
            'patterns': [[fluorinated_chain], [carboxylic_acid, carboxylate_anion]],
            'prediction': -1
        },
        {
            'number': 8,
            'description': 'Straight-chain aliphatic carboxylic acids without additional functional groups predict low Fe/Hf',
            'patterns': [[aliphatic_carboxylic_acid]],
            'exclude_patterns': [[thiol, thioether, primary_amine, ether_linkage, phenol]],
            'prediction': -1
        },
        {
            'number': 9,
            'description': 'Modifiers with multiple carboxylic acid groups without additional coordinating functionalities predict low Fe/Hf',
            'patterns': [[multiple_carboxylic_acids]],
            'exclude_patterns': [[thiol, thioether, primary_amine, ether_linkage, phenol]],
            'prediction': -1
        },
        {
            'number': 10,
            'description': 'Modifiers with aliphatic chains terminated with polar groups predict high Fe/Hf',
            'patterns': [[long_chain_polar_terminal], [carboxylic_acid, carboxylate_anion]],
            'prediction': 1
        },
        {
            'number': 11,
            'description': 'Modifiers with sterically hindered carboxylic acid groups predict low Fe/Hf',
            'patterns': [[steric_hindrance]],
            'prediction': -1
        },
        {
            'number': 12,
            'description': 'Modifiers with electron-withdrawing groups and additional coordination sites predict high Fe/Hf',
            'patterns': [[aromatic_carboxylic_acid], [nitro_group, bromo_group, pyridine_ring], [primary_amine, methoxy_group]],
            'prediction': 1
        },
        {
            'number': 13,
            'description': 'Modifiers with multiple adjacent hydroxyl groups predict low Fe/Hf',
            'patterns': [[polyol], [carboxylic_acid, carboxylate_anion]],
            'prediction': -1
        }
    ]
    
    # Compile SMARTS patterns
    for rule in rules:
        compiled_patterns = []
        for group in rule.get('patterns', []):
            compiled_group = [Chem.MolFromSmarts(p) for p in group]
            compiled_patterns.append(compiled_group)
        rule['compiled_patterns'] = compiled_patterns
        # Compile exclude patterns if any
        if 'exclude_patterns' in rule:
            compiled_excludes = []
            for group in rule['exclude_patterns']:
                compiled_group = [Chem.MolFromSmarts(p) for p in group]
                compiled_excludes.append(compiled_group)
            rule['compiled_exclude_patterns'] = compiled_excludes
    
    # Initialize results list
    results = []
    
    # Process each SMILES string
    for smi in smiles_list:
        mol = Chem.MolFromSmiles(smi)
        if mol is None:
            # If the molecule cannot be parsed, append a row of zeros
            results.append([0]*len(rules))
            continue
        row = []
        for rule in rules:
            try:
                match = True
                # Check exclude patterns if any
                if 'exclude_patterns' in rule:
                    for group in rule['compiled_exclude_patterns']:
                        for pat in group:
                            if mol.HasSubstructMatch(pat):
                                match = False
                                break
                        if not match:
                            break
                    if not match:
                        row.append(0)
                        continue
                # Check required patterns
                for idx, compiled_group in enumerate(rule['compiled_patterns']):
                    group_match = False
                    for pat in compiled_group:
                        matches = mol.GetSubstructMatches(pat)
                        if matches:
                            # If a count threshold is specified for this pattern
                            if 'counts' in rule and pat.GetSmarts() in rule['counts']:
                                threshold = rule['counts'][pat.GetSmarts()]
                                if len(matches) >= threshold:
                                    group_match = True
                                    break
                            else:
                                group_match = True
                                break
                    if not group_match:
                        match = False
                        break
                if match:
                    row.append(rule['prediction'])
                else:
                    row.append(0)
            except Exception as e:
                # In case of any error, append 0
                row.append(0)
        results.append(row)
    # Create DataFrame with results
    df = pd.DataFrame(results, columns=[f'Rule {rule['number']}' for rule in rules])
    return df
--------------------------------------------------