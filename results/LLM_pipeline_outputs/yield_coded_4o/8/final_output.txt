
    Target Name: yield
    GPT Model: gpt-4o-2024-08-06
    ML Model: ETC
    Current_Rules:
    **Start of Rules**

- **Rule 1**: Modifiers containing both an amino group (-NH2) and a carboxylic acid group (-COOH) tend to result in a high yield. This is observed in compounds like (2S)-2-aminopentanedioic acid and 5-aminopentanoic acid.

- **Rule 2**: Modifiers with a sulfanyl group (-SH) and a carboxylic acid group (-COOH) tend to result in a high yield. This is seen in compounds like 3-sulfanylpropanoic acid.

- **Rule 3**: Modifiers containing a pyridine ring without additional electron-donating groups tend to result in a low yield. This is observed in compounds like 4-pyridin-4-ylbenzoic acid. However, if an amino group is present, as in pyridine-3-carboxylic acid, the yield is high.

- **Rule 4**: Modifiers with a nitro group (-NO2) tend to result in a high yield. This is seen in compounds like 4-nitrobenzoic acid.

- **Rule 5**: Modifiers containing a formyl group (-CHO) tend to result in a low yield. This is observed in compounds like 5-formyl-2-hydroxybenzoic acid and 4-formylbenzoic acid.

- **Rule 6**: Modifiers with multiple hydroxyl groups (-OH) tend to result in a high yield. This is seen in compounds like (2R,3S,4R,5R)-2,3,4,5,6-pentahydroxyhexanoic acid.

- **Rule 7**: Modifiers with a benzene ring and a methoxy group (-OCH3) tend to result in a low yield. This is observed in compounds like 4-(3,4-dimethoxyphenyl)-4-oxobutanoic acid.

- **Rule 8**: Modifiers with a fluorinated alkyl chain tend to result in a low yield. This is seen in compounds like 2,2,3,3,4,4,5,5,5-nonafluoropentanoic acid.

- **Rule 9**: Modifiers with an indole group tend to result in a high yield. This is observed in compounds like (2R)-2-amino-3-(1H-indol-3-yl)propanoic acid.

- **Rule 10**: Modifiers with a simple alkyl chain and a carboxylic acid group tend to result in a low yield. This is seen in compounds like octanoic acid and 7-aminoheptanoic acid.

- **Rule 11**: Modifiers containing a benzene ring with a sulfanyl group (-SH) tend to result in a low yield. This is observed in compounds like 4-sulfanylbenzoic acid.

- **Rule 12**: Modifiers with a benzene ring and an acetamido group (-NHCOCH3) tend to result in a low yield. This is seen in compounds like (2S)-6-acetamido-2-aminohexanoic acid.

- **Rule 13**: Modifiers with a benzene ring and a hydroxyl group (-OH) tend to result in a low yield unless additional electron-withdrawing groups are present. This is observed in compounds like 3-(4-hydroxyphenyl)propanoic acid.

**End of Rules**---------------------------------------------------------------


    Current_Matrix:
    Matrix Generator Message:
Rule 1,Rule 2,Rule 3,Rule 4,Rule 5,Rule 6,Rule 7,Rule 8,Rule 9,Rule 10,Rule 11,Rule 12,Rule 13
0,0,0,0,0,0,0,0,0,-1,0,0,-1
1,0,0,0,0,0,0,0,0,-1,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0
1,0,0,0,0,0,0,0,0,-1,0,0,0
1,0,0,0,0,0,0,0,0,-1,0,0,0
1,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,-1,0,0,0
1,0,0,0,0,0,0,0,0,-1,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,-1,0,0,0
0,1,0,0,0,0,0,0,0,0,-1,0,0
0,0,0,0,0,0,0,0,0,-1,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0
1,0,0,0,0,0,0,0,0,-1,0,0,0
0,0,0,0,0,0,0,-1,0,-1,0,0,0
1,0,0,0,0,0,0,0,1,-1,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0
0,1,0,0,0,0,0,0,0,-1,0,0,0
0,0,0,0,-1,0,0,0,0,0,0,0,-1
0,0,0,0,-1,0,0,0,0,0,0,0,0
0,0,0,1,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0
1,0,0,0,0,0,0,0,0,-1,0,0,0
0,0,0,0,0,0,0,0,0,-1,0,0,0
0,0,0,0,0,0,-1,0,0,-1,0,0,-1
1,0,0,0,0,0,0,0,0,-1,0,0,-1
0,0,0,0,0,0,0,0,0,-1,0,0,0
1,0,0,0,0,0,0,-1,0,-1,0,0,0
0,0,0,0,0,0,0,0,0,-1,0,0,0
0,0,0,0,0,0,0,0,0,-1,0,0,-1
1,0,0,0,0,0,0,0,0,-1,0,0,0
1,0,0,0,0,0,0,0,0,-1,0,0,0
1,0,0,0,0,0,0,0,0,-1,0,0,0
1,0,0,0,0,0,0,0,0,-1,0,0,0

---------------------------------------------------------------


    Train Accuracy: 0.7428571428571429; Test Accuracy: 0.0
    Train Support: 0.09206349206349207; Test Support: 0.0
    Train Confidence: 0.6937543133195307; Test Confidence: 0.3888888888888889
    Train Lift: 1.3734765242651006; Test Lift: NONE
    Train Leverage: 0.01197278911564627; Test Leverage: NONE
    ----------------------------------------------------------------------------------

    Current Rule Code:
def rule2matrix(smiles_list):
    rules = [
        ['[NX3;H2,H1]', '[CX3](=O)[OX2H1]'],  # Rule 1: Amino and carboxylic acid group
        ['[SX2H]', '[CX3](=O)[OX2H1]'],  # Rule 2: Sulfanyl and carboxylic acid group
        ['c1ccncc1', '[NX3H2]'],  # Rule 3: Pyridine ring with amino group
        ['[NX3+](=O)[O-]'],  # Rule 4: Nitro group
        ['[CX3H]=O'],  # Rule 5: Formyl group
        ['[OX2H][CX4][OX2H]'],  # Rule 6: Multiple hydroxyl groups
        ['c1ccccc1OC'],  # Rule 7: Benzene ring with methoxy group
        ['[CX4](F)(F)F'],  # Rule 8: Fluorinated alkyl chain
        ['c1c[nH]c2c1cccc2'],  # Rule 9: Indole group
        ['[CX4][CX3](=O)[OX2H1]'],  # Rule 10: Simple alkyl chain with carboxylic acid
        ['c1ccccc1', '[SX2H]'],  # Rule 11: Benzene ring with sulfanyl group
        ['c1ccccc1', '[NX3][CX3](=O)[CX3H3]'],  # Rule 12: Benzene ring with acetamido group
        ['c1ccccc1O'],  # Rule 13: Benzene ring with hydroxyl group
    ]
    results = []
    for smi in smiles_list:
        mol = Chem.MolFromSmiles(smi)
        if mol is None:
            results.append([0] * len(rules))
            continue
        row = []
        for i, rule in enumerate(rules):
            try:
                if all(mol.HasSubstructMatch(Chem.MolFromSmarts(r)) for r in rule):
                    if i in [0, 1, 3, 5, 8]:  # Rules predicting high yield
                        row.append(1)
                    else:  # Rules predicting low yield
                        row.append(-1)
                else:
                    row.append(0)
            except:
                row.append(0)
        results.append(row)
    df = pd.DataFrame(results, columns=[f'Rule {i+1}' for i in range(len(rules))])
    return df
--------------------------------------------------
    Target Name: yield
    GPT Model: gpt-4o-2024-08-06
    ML Model: ETC
    Current_Rules:
    **Start of Rules**

- **Rule 1**: Modifiers containing both an amino group (-NH2) and a carboxylic acid group (-COOH) tend to result in a high yield. This is observed in compounds like (2S)-2-aminopentanedioic acid and 5-aminopentanoic acid.

- **Rule 2**: Modifiers with a sulfanyl group (-SH) and a carboxylic acid group (-COOH) tend to result in a high yield. This is seen in compounds like 3-sulfanylpropanoic acid.

- **Rule 3**: Modifiers containing a pyridine ring with an amino group tend to result in a high yield. This is observed in compounds like pyridine-3-carboxylic acid. However, if the pyridine ring lacks additional electron-donating groups, the yield is low, as seen in 4-pyridin-4-ylbenzoic acid.

- **Rule 4**: Modifiers with a nitro group (-NO2) tend to result in a high yield. This is seen in compounds like 4-nitrobenzoic acid.

- **Rule 5**: Modifiers containing a formyl group (-CHO) tend to result in a low yield. This is observed in compounds like 5-formyl-2-hydroxybenzoic acid and 4-formylbenzoic acid.

- **Rule 6**: Modifiers with multiple hydroxyl groups (-OH) tend to result in a high yield. This is seen in compounds like (2R,3S,4R,5R)-2,3,4,5,6-pentahydroxyhexanoic acid.

- **Rule 7**: Modifiers with a benzene ring and a methoxy group (-OCH3) tend to result in a low yield. This is observed in compounds like 4-(3,4-dimethoxyphenyl)-4-oxobutanoic acid.

- **Rule 8**: Modifiers with a fluorinated alkyl chain tend to result in a low yield. This is seen in compounds like 2,2,3,3,4,4,5,5,5-nonafluoropentanoic acid.

- **Rule 9**: Modifiers with an indole group tend to result in a high yield. This is observed in compounds like (2R)-2-amino-3-(1H-indol-3-yl)propanoic acid.

- **Rule 10**: Modifiers with a simple alkyl chain and a carboxylic acid group tend to result in a low yield, especially if the alkyl chain is longer than five carbons. This is seen in compounds like octanoic acid and 7-aminoheptanoic acid.

- **Rule 11**: Modifiers containing a benzene ring with a sulfanyl group (-SH) tend to result in a low yield. This is observed in compounds like 4-sulfanylbenzoic acid.

- **Rule 12**: Modifiers with a benzene ring and an acetamido group (-NHCOCH3) tend to result in a low yield. This is seen in compounds like (2S)-6-acetamido-2-aminohexanoic acid.

- **Rule 13**: Modifiers with a benzene ring and a hydroxyl group (-OH) tend to result in a low yield unless additional electron-withdrawing groups are present. This is observed in compounds like 3-(4-hydroxyphenyl)propanoic acid.

- **Rule 14**: Modifiers with both electron-donating groups (e.g., amino, hydroxyl) and electron-withdrawing groups (e.g., nitro, formyl) on the same aromatic ring tend to result in a high yield due to balanced electronic effects.

- **Rule 15**: Modifiers with an ether linkage (-O-) in combination with a carboxylic acid group tend to result in a low yield. This is seen in compounds like 2-[2-(2-methoxyethoxy)ethoxy]acetic acid.

**End of Rules**---------------------------------------------------------------


    Current_Matrix:
    Matrix Generator Message:
Rule 1,Rule 2,Rule 3,Rule 4,Rule 5,Rule 6,Rule 7,Rule 8,Rule 9,Rule 10,Rule 11,Rule 12,Rule 13,Rule 14,Rule 15
0,0,0,0,0,1,0,0,0,0,0,0,-1,0,0
1,0,0,0,0,1,0,0,0,0,0,0,0,0,0
0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
1,0,0,0,0,1,0,0,0,0,0,0,0,0,0
1,0,0,0,0,1,0,0,0,0,0,0,0,0,0
1,0,0,0,0,1,0,0,0,0,0,0,0,0,0
0,0,0,0,0,1,0,0,0,-1,0,0,0,0,0
0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
0,1,0,0,0,1,0,0,0,0,-1,0,0,0,0
0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
1,0,0,0,0,1,0,0,0,0,0,0,0,0,0
0,0,0,0,0,1,0,-1,0,0,0,0,0,0,0
1,0,0,0,0,1,0,0,1,0,0,0,0,0,0
0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
0,1,0,0,0,1,0,0,0,0,0,0,0,0,0
0,0,0,0,-1,1,0,0,0,0,0,0,-1,0,0
0,0,0,0,-1,1,0,0,0,0,0,0,0,0,0
0,0,0,1,0,1,0,0,0,0,0,0,0,0,0
0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
1,0,0,0,0,1,0,0,0,0,0,0,0,0,0
0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
0,0,0,0,0,1,0,0,0,0,0,0,-1,0,0
0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
0,0,0,0,0,1,0,-1,0,0,0,0,0,0,0
0,0,0,0,0,1,0,0,0,-1,0,0,0,0,0
0,0,0,0,0,1,0,0,0,0,0,0,-1,0,0
1,0,0,0,0,1,0,0,0,-1,0,0,0,0,0
1,0,0,0,0,1,0,0,0,0,0,0,0,0,0
1,0,0,0,0,1,0,0,0,0,0,0,0,0,0
1,0,0,0,0,1,0,0,0,-1,0,0,0,0,0

---------------------------------------------------------------


    Train Accuracy: 0.7142857142857143; Test Accuracy: 0.0
    Train Support: 0.07142857142857142; Test Support: 0.0
    Train Confidence: 0.9375; Test Confidence: 0.375
    Train Lift: 1.822916666666667; Test Lift: NONE
    Train Leverage: 0.03102040816326531; Test Leverage: NONE
    ----------------------------------------------------------------------------------

    Current Rule Code:
def rule2matrix(smiles_list):
    rules = [
        ['[NX3H2]', '[CX3](=O)[OX2H1]'],  # Rule 1: Amino and carboxylic acid group
        ['[SX2H]', '[CX3](=O)[OX2H1]'],  # Rule 2: Sulfanyl and carboxylic acid group
        ['c1ncccc1[NX3H2]'],  # Rule 3: Pyridine ring with amino group
        ['[NX3+](=O)[O-]'],  # Rule 4: Nitro group
        ['[CX3H]=O'],  # Rule 5: Formyl group
        ['[OX2H]'],  # Rule 6: Multiple hydroxyl groups
        ['c1ccccc1[OX2][CX3H3]'],  # Rule 7: Benzene ring with methoxy group
        ['[CX4](F)(F)(F)'],  # Rule 8: Fluorinated alkyl chain
        ['c1c[nH]c2c1cccc2'],  # Rule 9: Indole group
        ['[CX4][CX4][CX4][CX4][CX4][CX4][CX3](=O)[OX2H1]'],  # Rule 10: Long alkyl chain with carboxylic acid
        ['c1ccccc1[SX2H]'],  # Rule 11: Benzene ring with sulfanyl group
        ['c1ccccc1[NX3][CX3](=O)[CX3H3]'],  # Rule 12: Benzene ring with acetamido group
        ['c1ccccc1[OX2H]'],  # Rule 13: Benzene ring with hydroxyl group
        ['c1ccccc1[NX3H2]', '[NX3+](=O)[O-]'],  # Rule 14: Electron-donating and withdrawing groups
        ['[OX2][CX4][OX2]', '[CX3](=O)[OX2H1]']  # Rule 15: Ether linkage with carboxylic acid
    ]
    results = []
    for smi in smiles_list:
        mol = Chem.MolFromSmiles(smi)
        if mol is None:
            results.append([0] * len(rules))
            continue
        row = []
        for i, rule in enumerate(rules):
            try:
                if all(mol.HasSubstructMatch(Chem.MolFromSmarts(r)) for r in rule):
                    if i in [0, 1, 3, 5, 8, 13]:  # Rules predicting high yield
                        row.append(1)
                    else:  # Rules predicting low yield
                        row.append(-1)
                else:
                    row.append(0)
            except:
                row.append(0)
        results.append(row)
    df = pd.DataFrame(results, columns=[f'Rule {i+1}' for i in range(len(rules))])
    return df
--------------------------------------------------
    Target Name: yield
    GPT Model: gpt-4o-2024-08-06
    ML Model: ETC
    Current_Rules:
    **Start of Rules**

- **Rule 1**: Modifiers containing both an amino group (-NH2) and a carboxylic acid group (-COOH) tend to result in a high yield. This is observed in compounds like (2S)-2-aminopentanedioic acid and 5-aminopentanoic acid.

- **Rule 2**: Modifiers with a sulfanyl group (-SH) and a carboxylic acid group (-COOH) tend to result in a high yield. This is seen in compounds like 3-sulfanylpropanoic acid.

- **Rule 3**: Modifiers containing a pyridine ring with an amino group tend to result in a high yield. This is observed in compounds like pyridine-3-carboxylic acid. However, if the pyridine ring lacks additional electron-donating groups, the yield is low, as seen in 4-pyridin-4-ylbenzoic acid.

- **Rule 4**: Modifiers with a nitro group (-NO2) tend to result in a high yield. This is seen in compounds like 4-nitrobenzoic acid.

- **Rule 5**: Modifiers containing a formyl group (-CHO) tend to result in a low yield. This is observed in compounds like 5-formyl-2-hydroxybenzoic acid and 4-formylbenzoic acid.

- **Rule 6**: Modifiers with multiple hydroxyl groups (-OH) tend to result in a high yield. This is seen in compounds like (2R,3S,4R,5R)-2,3,4,5,6-pentahydroxyhexanoic acid.

- **Rule 7**: Modifiers with a benzene ring and a methoxy group (-OCH3) tend to result in a low yield. This is observed in compounds like 4-(3,4-dimethoxyphenyl)-4-oxobutanoic acid.

- **Rule 8**: Modifiers with a fluorinated alkyl chain tend to result in a low yield. This is seen in compounds like 2,2,3,3,4,4,5,5,5-nonafluoropentanoic acid.

- **Rule 9**: Modifiers with an indole group tend to result in a high yield. This is observed in compounds like (2R)-2-amino-3-(1H-indol-3-yl)propanoic acid.

- **Rule 10**: Modifiers with a simple alkyl chain and a carboxylic acid group tend to result in a low yield, especially if the alkyl chain is longer than five carbons. This is seen in compounds like octanoic acid and 7-aminoheptanoic acid.

- **Rule 11**: Modifiers with a benzene ring and a sulfanyl group (-SH) tend to result in a low yield. This is observed in compounds like 4-sulfanylbenzoic acid.

- **Rule 12**: Modifiers with a benzene ring and an acetamido group (-NHCOCH3) tend to result in a low yield. This is seen in compounds like (2S)-6-acetamido-2-aminohexanoic acid.

- **Rule 13**: Modifiers with a benzene ring and a hydroxyl group (-OH) tend to result in a low yield unless additional electron-withdrawing groups are present. This is observed in compounds like 3-(4-hydroxyphenyl)propanoic acid.

- **Rule 14**: Modifiers with both electron-donating groups (e.g., amino, hydroxyl) and electron-withdrawing groups (e.g., nitro, formyl) on the same aromatic ring tend to result in a high yield due to balanced electronic effects.

- **Rule 15**: Modifiers with an ether linkage (-O-) in combination with a carboxylic acid group tend to result in a low yield. This is seen in compounds like 2-[2-(2-methoxyethoxy)ethoxy]acetic acid.

**End of Rules**---------------------------------------------------------------


    Current_Matrix:
    Matrix Generator Message:
Rule 1,Rule 2,Rule 3,Rule 4,Rule 5,Rule 6,Rule 7,Rule 8,Rule 9,Rule 10,Rule 11,Rule 12,Rule 13,Rule 14,Rule 15
0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0
1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0
1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1,0,0,0,0,0,0,0,0,0,0,0,-1,0,0
0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,1,0,0,0,0,0,0,0,0,-1,0,-1,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0
1,0,0,0,0,0,0,0,0,0,0,0,-1,0,0
0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0
1,0,0,0,0,0,0,0,1,0,0,0,-1,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0
0,1,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,-1,0,0,0,0,0,0,0,-1,0,0
0,0,0,0,-1,0,0,0,0,0,0,0,-1,0,0
0,0,0,1,0,0,0,0,0,0,0,0,-1,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0
1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0
0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0
1,0,0,0,0,0,0,0,0,-1,0,0,0,0,0
1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1,0,0,0,0,0,0,0,0,-1,0,0,0,0,0

---------------------------------------------------------------


    Train Accuracy: 0.6571428571428571; Test Accuracy: 1.0
    Train Support: 0.06666666666666667; Test Support: 0.0
    Train Confidence: 0.9166666666666666; Test Confidence: 0.5
    Train Lift: 1.7824074074074077; Test Lift: NONE
    Train Leverage: 0.027482993197278916; Test Leverage: NONE
    ----------------------------------------------------------------------------------

    Current Rule Code:
def rule2matrix(smiles_list):
    rules = [
        ['[NX3H2]', '[CX3](=O)[OX2H1]'],  # Rule 1: Amino and carboxylic acid group
        ['[SX2H]', '[CX3](=O)[OX2H1]'],  # Rule 2: Sulfanyl and carboxylic acid group
        ['c1ccncc1', '[NX3H2]'],  # Rule 3: Pyridine ring with amino group
        ['[NX3+](=O)[O-]'],  # Rule 4: Nitro group
        ['[CX3H]=O'],  # Rule 5: Formyl group
        ['[OX2H][CX4][OX2H]'],  # Rule 6: Multiple hydroxyl groups
        ['c1ccccc1', '[OX2][CX3H3]'],  # Rule 7: Benzene ring and methoxy group
        ['[CX4](F)(F)F'],  # Rule 8: Fluorinated alkyl chain
        ['c1c[nH]c2c1cccc2'],  # Rule 9: Indole group
        ['[CX4][CX4][CX4][CX4][CX4][CX4][CX3](=O)[OX2H1]'],  # Rule 10: Long alkyl chain with carboxylic acid
        ['c1ccccc1', '[SX2H]'],  # Rule 11: Benzene ring and sulfanyl group
        ['c1ccccc1', '[NX3][CX3](=O)[CX3H3]'],  # Rule 12: Benzene ring and acetamido group
        ['c1ccccc1', '[OX2H]'],  # Rule 13: Benzene ring and hydroxyl group
        ['c1ccccc1', '[NX3H2]', '[NX3+](=O)[O-]'],  # Rule 14: Electron-donating and withdrawing groups
        ['[OX2][CX4][OX2H1]'],  # Rule 15: Ether linkage and carboxylic acid
    ]
    results = []
    for smi in smiles_list:
        mol = Chem.MolFromSmiles(smi)
        if mol is None:
            results.append([0] * len(rules))
            continue
        row = []
        for i, rule in enumerate(rules):
            try:
                if all(mol.HasSubstructMatch(Chem.MolFromSmarts(r)) for r in rule):
                    if i in [0, 1, 3, 5, 8, 13]:  # Rules predicting high yield
                        row.append(1)
                    else:  # Rules predicting low yield
                        row.append(-1)
                else:
                    row.append(0)
            except:
                row.append(0)
        results.append(row)
    df = pd.DataFrame(results, columns=[f'Rule {i+1}' for i in range(len(rules))])
    return df
--------------------------------------------------
    Target Name: yield
    GPT Model: gpt-4o-2024-08-06
    ML Model: ETC
    Current_Rules:
    **Start of Rules**

- **Rule 1**: Modifiers containing both an amino group (-NH2) and a carboxylic acid group (-COOH) in the same molecule tend to result in a high yield. This is observed in compounds like (2S)-2-aminopentanedioic acid and 5-aminopentanoic acid. [Refined based on Advice 1]

- **Rule 2**: Modifiers with a sulfanyl group (-SH) and a carboxylic acid group (-COOH) tend to result in a high yield. This is seen in compounds like 3-sulfanylpropanoic acid.

- **Rule 3**: Modifiers containing a pyridine ring with an amino group directly attached tend to result in a high yield. This is observed in compounds like pyridine-3-carboxylic acid. [Refined based on Advice 2]

- **Rule 4**: Modifiers with a nitro group (-NO2) tend to result in a high yield. This is seen in compounds like 4-nitrobenzoic acid.

- **Rule 5**: Modifiers with a formyl group (-CHO) tend to result in a low yield. This is observed in compounds like 5-formyl-2-hydroxybenzoic acid and 4-formylbenzoic acid. [Revised based on Advice 8]

- **Rule 6**: Modifiers with multiple hydroxyl groups (-OH) tend to result in a high yield. This is seen in compounds like (2R,3S,4R,5R)-2,3,4,5,6-pentahydroxyhexanoic acid. [Refined based on Advice 3]

- **Rule 7**: Modifiers with a benzene ring and a methoxy group (-OCH3) directly attached to the ring tend to result in a low yield. This is observed in compounds like 4-(3,4-dimethoxyphenyl)-4-oxobutanoic acid. [Refined based on Advice 4]

- **Rule 8**: Modifiers with a fluorinated alkyl chain tend to result in a low yield. This is seen in compounds like 2,2,3,3,4,4,5,5,5-nonafluoropentanoic acid. [Re-evaluated based on Advice 9]

- **Rule 9**: Modifiers with an indole group tend to result in a high yield. This is observed in compounds like (2R)-2-amino-3-(1H-indol-3-yl)propanoic acid.

- **Rule 10**: Modifiers with an alkyl chain longer than five carbons and a carboxylic acid group tend to result in a low yield, regardless of other functional groups present. This is seen in compounds like octanoic acid and 7-aminoheptanoic acid. [Broadened based on Advice 5]

- **Rule 11**: Modifiers with both electron-donating groups (e.g., amino, hydroxyl) and electron-withdrawing groups (e.g., nitro, formyl) on the same aromatic ring tend to result in a high yield due to balanced electronic effects. [Refined based on Advice 6]

- **Rule 12**: Modifiers with an ether linkage (-O-) in combination with a carboxylic acid group tend to result in a low yield. This is seen in compounds like 2-[2-(2-methoxyethoxy)ethoxy]acetic acid. [Refined based on Advice 7]

**End of Rules**---------------------------------------------------------------


    Current_Matrix:
    Matrix Generator Message:
Rule 1,Rule 2,Rule 3,Rule 4,Rule 5,Rule 6,Rule 7,Rule 8,Rule 9,Rule 10,Rule 11,Rule 12
0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,1,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,1,0,0,0,0,0,0
0,1,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,-1,0,0,0,0
0,0,0,0,0,0,0,0,-1,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0
0,1,0,0,0,0,0,0,0,0,0,0
0,0,0,0,-1,0,0,0,0,0,0,0
0,0,0,0,-1,0,0,0,0,0,0,0
0,0,0,1,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,-1,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,-1,0,0,0,0
0,0,0,0,0,1,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0

---------------------------------------------------------------


    Train Accuracy: 0.6; Test Accuracy: 1.0
    Train Support: 0.05714285714285714; Test Support: 0.0
    Train Confidence: 1.0; Test Confidence: 0.5
    Train Lift: 1.9444444444444446; Test Lift: NONE
    Train Leverage: 0.02775510204081633; Test Leverage: NONE
    ----------------------------------------------------------------------------------

    Current Rule Code:
def rule2matrix(smiles_list):
    rules = [
        ['[$([NX3][CX3](=O)[OX2H1])]'],  # Rule 1: Amino and carboxylic acid group
        ['[SX2H]', '[CX3](=O)[OX2H1]'],  # Rule 2: Sulfanyl and carboxylic acid group
        ['c1ccncc1[NX3H2]'],  # Rule 3: Pyridine ring with amino group
        ['[NX3+](=O)[O-]'],  # Rule 4: Nitro group
        ['[CX3H]=O'],  # Rule 5: Formyl group
        ['[$([OX2H][CX4])]'],  # Rule 6: Multiple hydroxyl groups
        ['c1ccccc1OC'],  # Rule 7: Benzene ring with methoxy group
        ['[CX4](F)(F)(F)'],  # Rule 8: Fluorinated alkyl chain
        ['c1c[nH]c2c1cccc2'],  # Rule 9: Indole group
        ['[$([CX4][CX4][CX4][CX4][CX4][CX4,])[CX3](=O)[OX2H1]]'],  # Rule 10: Long alkyl chain with carboxylic acid
        ['c1cc([NX3H2])[CX3H]=O', '[NX3+](=O)[O-]'],  # Rule 11: Electron-donating and withdrawing groups on aromatic ring
        ['[$([OX2][CX4][OX2H1])]']  # Rule 12: Ether linkage with carboxylic acid
    ]
    results = []
    for smi in smiles_list:
        mol = Chem.MolFromSmiles(smi)
        if mol is None:
            results.append([0] * len(rules))
            continue
        row = []
        for i, rule in enumerate(rules):
            try:
                if all(mol.HasSubstructMatch(Chem.MolFromSmarts(r)) for r in rule):
                    if i in [0, 1, 2, 3, 5, 9, 11]:  # Rules predicting high yield
                        row.append(1)
                    else:  # Rules predicting low yield
                        row.append(-1)
                else:
                    row.append(0)
            except:
                row.append(0)
        results.append(row)
    df = pd.DataFrame(results, columns=[f'Rule {i+1}' for i in range(len(rules))])
    return df
--------------------------------------------------
    Target Name: yield
    GPT Model: gpt-4o-2024-08-06
    ML Model: ETC
    Current_Rules:
    **Start of Rules**

- **Rule 1**: Modifiers containing both an amino group (-NH2) and a carboxylic acid group (-COOH) in the same molecule tend to result in a high yield. This is observed in compounds like (2S)-2-aminopentanedioic acid and 5-aminopentanoic acid.

- **Rule 2**: Modifiers with a sulfanyl group (-SH) and a carboxylic acid group (-COOH) tend to result in a high yield. This is seen in compounds like 3-sulfanylpropanoic acid.

- **Rule 3**: Modifiers containing a pyridine ring with an amino group directly attached tend to result in a high yield. This is observed in compounds like pyridine-3-carboxylic acid.

- **Rule 4**: Modifiers with a nitro group (-NO2) tend to result in a high yield. This is seen in compounds like 4-nitrobenzoic acid.

- **Rule 5**: Modifiers with a formyl group (-CHO) tend to result in a low yield. This is observed in compounds like 5-formyl-2-hydroxybenzoic acid and 4-formylbenzoic acid.

- **Rule 6**: Modifiers with multiple hydroxyl groups (-OH) tend to result in a high yield. This is seen in compounds like (2R,3S,4R,5R)-2,3,4,5,6-pentahydroxyhexanoic acid.

- **Rule 7**: Modifiers with a benzene ring and a methoxy group (-OCH3) directly attached to the ring tend to result in a low yield. This is observed in compounds like 4-(3,4-dimethoxyphenyl)-4-oxobutanoic acid.

- **Rule 8**: Modifiers with a fluorinated alkyl chain tend to result in a low yield. This is seen in compounds like 2,2,3,3,4,4,5,5,5-nonafluoropentanoic acid.

- **Rule 9**: Modifiers with an indole group tend to result in a high yield. This is observed in compounds like (2R)-2-amino-3-(1H-indol-3-yl)propanoic acid.

- **Rule 10**: Modifiers with an alkyl chain longer than five carbons and a carboxylic acid group tend to result in a low yield, regardless of other functional groups present. This is seen in compounds like octanoic acid and 7-aminoheptanoic acid.

- **Rule 11**: Modifiers with both electron-donating groups (e.g., amino, hydroxyl) and electron-withdrawing groups (e.g., nitro, formyl) on the same aromatic ring tend to result in a high yield due to balanced electronic effects.

- **Rule 12**: Modifiers with an ether linkage (-O-) in combination with a carboxylic acid group tend to result in a low yield. This is seen in compounds like 2-[2-(2-methoxyethoxy)ethoxy]acetic acid.

- **Rule 13**: Modifiers with a benzene ring and a sulfanyl group (-SH) directly attached tend to result in a low yield. This is observed in compounds like 4-sulfanylbenzoic acid.

- **Rule 14**: Modifiers with a pyridine ring and a carboxylic acid group tend to result in a high yield. This is seen in compounds like 4-pyridin-4-ylbutanoic acid.

- **Rule 15**: Modifiers with a benzene ring and a formyl group (-CHO) directly attached tend to result in a low yield. This is observed in compounds like 4-formylbenzoic acid.

**End of Rules**---------------------------------------------------------------


    Current_Matrix:
    Matrix Generator Message:
Rule 1,Rule 2,Rule 3,Rule 4,Rule 5,Rule 6,Rule 7,Rule 8,Rule 9,Rule 10,Rule 11,Rule 12,Rule 13,Rule 14,Rule 15
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,1,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,1,0,0,0,0,0,0,0,0,0,0,-1,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,1,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,-1,0,0,0,0,0,0,0,0,0,1
0,0,0,0,-1,0,0,0,0,0,0,0,0,0,1
0,0,0,1,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,1,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,1,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,1,0,0,0,0,0

---------------------------------------------------------------


    Train Accuracy: 0.6857142857142857; Test Accuracy: 1.0
    Train Support: 0.025396825396825397; Test Support: 0.0
    Train Confidence: 0.5277777777777778; Test Confidence: 0.5
    Train Lift: 1.0484749455337692; Test Lift: NONE
    Train Leverage: 9.070294784580607e-05; Test Leverage: NONE
    ----------------------------------------------------------------------------------

    Current Rule Code:
def rule2matrix(smiles_list):
    rules = [
        ['[$([NX3H2])][CX3](=O)[OX2H1]'],  # Rule 1: Amino and carboxylic acid group
        ['[SX2H]', '[CX3](=O)[OX2H1]'],  # Rule 2: Sulfanyl and carboxylic acid group
        ['[n][NX3H2]', '[n][NX3H1]'],  # Rule 3: Pyridine with amino group
        ['[NX3+](=O)[O-]'],  # Rule 4: Nitro group
        ['[$([CX3H]=O)]'],  # Rule 5: Formyl group
        ['[$([OX2H][CX4][OX2H][CX4][OX2H])]'],  # Rule 6: Multiple hydroxyl groups
        ['c[OX2][CH3]'],  # Rule 7: Benzene with methoxy group
        ['[CX4](F)(F)(F)'],  # Rule 8: Fluorinated alkyl chain
        ['c1c[nH]c2c1cccc2'],  # Rule 9: Indole group
        ['[$([CX4][CX4][CX4][CX4][CX4][CX4][CX3](=O)[OX2H1])]'],  # Rule 10: Long alkyl chain with carboxylic acid
        ['[$([c][NX3H2][c][NX3+](=O)[O-])]'],  # Rule 11: Electron-donating and withdrawing groups
        ['[$([OX2][CX3](=O)[OX2H1])]'],  # Rule 12: Ether linkage with carboxylic acid
        ['c[SH]'],  # Rule 13: Benzene with sulfanyl group
        ['n[c][CX3](=O)[OX2H1]'],  # Rule 14: Pyridine with carboxylic acid
        ['c[CX3H]=O']  # Rule 15: Benzene with formyl group
    ]
    results = []
    for smi in smiles_list:
        mol = Chem.MolFromSmiles(smi)
        if mol is None:
            results.append([0] * len(rules))
            continue
        row = []
        for i, rule in enumerate(rules):
            try:
                if all(mol.HasSubstructMatch(Chem.MolFromSmarts(r)) for r in rule):
                    if i in [0, 1, 2, 3, 5, 9, 11, 14]:  # High yield rules
                        row.append(1)
                    else:  # Low yield rules
                        row.append(-1)
                else:
                    row.append(0)
            except:
                row.append(0)
        results.append(row)
    df = pd.DataFrame(results, columns=[f'Rule {i+1}' for i in range(len(rules))])
    return df
--------------------------------------------------
    Target Name: yield
    GPT Model: gpt-4o-2024-08-06
    ML Model: ETC
    Current_Rules:
    **Start of Rules**

- **Rule 1**: Modifiers containing both an amino group (-NH2) and a carboxylic acid group (-COOH) in the same molecule tend to result in a high yield. This is observed in compounds like (2S)-2-aminopentanedioic acid and 5-aminopentanoic acid.

- **Rule 2**: Modifiers with a sulfanyl group (-SH) and a carboxylic acid group (-COOH) tend to result in a high yield. This is seen in compounds like 3-sulfanylpropanoic acid. However, the presence of additional electron-withdrawing groups like nitro (-NO2) can enhance this effect.

- **Rule 3**: Modifiers containing a pyridine ring with an amino group directly attached tend to result in a high yield. This is observed in compounds like pyridine-3-carboxylic acid.

- **Rule 4**: Modifiers with a nitro group (-NO2) tend to result in a high yield, especially when combined with other electron-donating groups such as hydroxyl (-OH) or amino (-NH2).

- **Rule 5**: Modifiers with a formyl group (-CHO) tend to result in a low yield, unless they are part of a larger aromatic system with multiple electron-donating groups that can counteract the electron-withdrawing nature of the formyl group.

- **Rule 6**: Modifiers with multiple hydroxyl groups (-OH) tend to result in a high yield. This is seen in compounds like (2R,3S,4R,5R)-2,3,4,5,6-pentahydroxyhexanoic acid.

- **Rule 7**: Modifiers with a benzene ring and a methoxy group (-OCH3) directly attached to the ring tend to result in a low yield, unless the methoxy group is part of a larger network of electron-donating groups.

- **Rule 8**: Modifiers with a fluorinated alkyl chain tend to result in a low yield, but this effect can be mitigated if the fluorinated chain is part of a larger, complex structure with multiple electron-donating groups.

- **Rule 9**: Modifiers with an indole group tend to result in a high yield. This is observed in compounds like (2R)-2-amino-3-(1H-indol-3-yl)propanoic acid.

- **Rule 10**: Modifiers with an alkyl chain longer than five carbons and a carboxylic acid group tend to result in a low yield, regardless of other functional groups present. This is seen in compounds like octanoic acid and 7-aminoheptanoic acid.

- **Rule 11**: Modifiers with both electron-donating groups (e.g., amino, hydroxyl) and electron-withdrawing groups (e.g., nitro, formyl) on the same aromatic ring tend to result in a high yield due to balanced electronic effects.

- **Rule 12**: Modifiers with an ether linkage (-O-) in combination with a carboxylic acid group tend to result in a low yield. This is seen in compounds like 2-[2-(2-methoxyethoxy)ethoxy]acetic acid.

- **Rule 13**: Modifiers with a benzene ring and a sulfanyl group (-SH) directly attached tend to result in a low yield. This is observed in compounds like 4-sulfanylbenzoic acid.

- **Rule 14**: Modifiers with a pyridine ring and a carboxylic acid group tend to result in a high yield. This is seen in compounds like 4-pyridin-4-ylbutanoic acid.

- **Rule 15**: Modifiers with a benzene ring and a formyl group (-CHO) directly attached tend to result in a low yield. This is observed in compounds like 4-formylbenzoic acid.

**End of Rules**---------------------------------------------------------------


    Current_Matrix:
    Matrix Generator Message:
Rule 1,Rule 2,Rule 3,Rule 4,Rule 5,Rule 6,Rule 7,Rule 8,Rule 9,Rule 10,Rule 11,Rule 12,Rule 13,Rule 14,Rule 15
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,-1,0,0,0,0,0,0,0,0,0,-1
1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1,0,0,0,-1,0,0,0,0,0,0,0,0,0,-1
0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,1,0,0,-1,0,0,0,0,0,0,0,-1,0,-1
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,-1,0,0,0,0,0,0,0,0,0,-1
1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1,0,0,0,0,0,0,0,1,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,-1,0,0,0,0,0,0,0,0,0,-1
0,1,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,-1,0,0,0,0,0,0,0,0,0,-1
0,0,0,0,-1,0,0,0,0,0,0,0,0,0,-1
0,0,0,1,-1,0,0,0,0,0,0,0,0,0,-1
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,-1,0,0,0,0,0,0,0,0,0,-1
1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,-1,0,-1,0,0,0,0,0,0,0,-1
0,0,0,0,-1,0,0,0,0,0,0,0,0,0,-1
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1,0,0,0,0,0,0,0,0,-1,0,0,0,0,0
1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1,0,0,0,0,0,0,0,0,-1,0,0,0,0,0

---------------------------------------------------------------


    Train Accuracy: 0.6857142857142857; Test Accuracy: 1.0
    Train Support: 0.0761904761904762; Test Support: 0.0
    Train Confidence: 0.625; Test Confidence: 0.5
    Train Lift: 1.2620692216280454; Test Lift: NONE
    Train Leverage: 0.0069387755102040885; Test Leverage: NONE
    ----------------------------------------------------------------------------------

    Current Rule Code:
def rule2matrix(smiles_list):
    rules = [
        ['[$([NX3H2])].[CX3](=O)[OX2H1]'],  # Rule 1: Amino and carboxylic acid group
        ['[$([SX2H])].[CX3](=O)[OX2H1]'],  # Rule 2: Sulfanyl and carboxylic acid group
        ['n1cc[nH]cc1'],  # Rule 3: Pyridine with amino group
        ['[NX3+](=O)[O-]'],  # Rule 4: Nitro group
        ['c1ccccc1C=O'],  # Rule 5: Formyl group in aromatic system
        ['[$([OX2H][CX4][OX2H][CX4][OX2H])]'],  # Rule 6: Multiple hydroxyl groups
        ['c1ccccc1OC'],  # Rule 7: Benzene with methoxy group
        ['[CX4](F)(F)F[CX4]'],  # Rule 8: Fluorinated alkyl chain
        ['c1c[nH]c2c1cccc2'],  # Rule 9: Indole group
        ['[$([CX4][CX4][CX4][CX4][CX4][CX4][CX3](=O)[OX2H1])]'],  # Rule 10: Long alkyl chain with carboxylic acid
        ['c1cc([NX3H2])[CX3H]=O'],  # Rule 11: Electron-donating and withdrawing groups on aromatic ring
        ['[OX2][CX3](=O)[OX2H1]'],  # Rule 12: Ether linkage with carboxylic acid
        ['c1ccccc1[SX2H]'],  # Rule 13: Benzene with sulfanyl group
        ['n1ccccc1[CX3](=O)[OX2H1]'],  # Rule 14: Pyridine with carboxylic acid
        ['c1ccccc1C=O']  # Rule 15: Benzene with formyl group
    ]
    results = []
    for smi in smiles_list:
        mol = Chem.MolFromSmiles(smi)
        if mol is None:
            results.append([0] * len(rules))
            continue
        row = []
        for i, rule in enumerate(rules):
            try:
                if all(mol.HasSubstructMatch(Chem.MolFromSmarts(r)) for r in rule):
                    if i in [0, 1, 2, 3, 5, 8, 10, 13]:  # High yield rules
                        row.append(1)
                    else:  # Low yield rules
                        row.append(-1)
                else:
                    row.append(0)
            except:
                row.append(0)
        results.append(row)
    df = pd.DataFrame(results, columns=[f'Rule {i+1}' for i in range(len(rules))])
    return df
--------------------------------------------------
    Target Name: yield
    GPT Model: gpt-4o-2024-08-06
    ML Model: ETC
    Current_Rules:
    **Start of Rules**

- **Rule 1**: Modifiers containing both an amino group (-NH2) and a carboxylic acid group (-COOH) in the same molecule tend to result in a high yield. This is observed in compounds like (2S)-2-aminopentanedioic acid and 5-aminopentanoic acid. (Retained from current rules with advice considered)

- **Rule 2**: Modifiers with a sulfanyl group (-SH) and a carboxylic acid group (-COOH) tend to result in a high yield. This is seen in compounds like 3-sulfanylpropanoic acid. The presence of additional electron-withdrawing groups like nitro (-NO2) can enhance this effect. (Retained from current rules with advice considered)

- **Rule 3**: Modifiers containing a pyridine ring with an amino group directly attached tend to result in a high yield. This is observed in compounds like pyridine-3-carboxylic acid. (Revised based on advice)

- **Rule 4**: Modifiers with a nitro group (-NO2) tend to result in a high yield, especially when combined with other electron-donating groups such as hydroxyl (-OH) or amino (-NH2). (Retained from current rules with advice considered)

- **Rule 5**: Modifiers with a formyl group (-CHO) tend to result in a low yield, unless they are part of a larger aromatic system with multiple electron-donating groups that can counteract the electron-withdrawing nature of the formyl group. (Retained from current rules with advice considered)

- **Rule 6**: Modifiers with multiple hydroxyl groups (-OH) tend to result in a high yield. This is seen in compounds like (2R,3S,4R,5R)-2,3,4,5,6-pentahydroxyhexanoic acid. (Retained from current rules with advice considered)

- **Rule 7**: Modifiers with a benzene ring and a methoxy group (-OCH3) directly attached to the ring tend to result in a low yield, unless the methoxy group is part of a larger network of electron-donating groups. (Retained from current rules with advice considered)

- **Rule 8**: Modifiers with a fluorinated alkyl chain tend to result in a low yield, but this effect can be mitigated if the fluorinated chain is part of a larger, complex structure with multiple electron-donating groups. (Retained from current rules with advice considered)

- **Rule 9**: Modifiers with an indole group tend to result in a high yield. This is observed in compounds like (2R)-2-amino-3-(1H-indol-3-yl)propanoic acid. (Retained from current rules)

- **Rule 10**: Modifiers with an alkyl chain longer than five carbons and a carboxylic acid group tend to result in a low yield, regardless of other functional groups present. This is seen in compounds like octanoic acid and 7-aminoheptanoic acid. (Retained from current rules with advice considered)

- **Rule 11**: Modifiers with both electron-donating groups (e.g., amino, hydroxyl) and electron-withdrawing groups (e.g., nitro, formyl) on the same aromatic ring tend to result in a high yield due to balanced electronic effects. (Retained from current rules with advice considered)

- **Rule 12**: Modifiers with an ether linkage (-O-) in combination with a carboxylic acid group tend to result in a low yield. This is seen in compounds like 2-[2-(2-methoxyethoxy)ethoxy]acetic acid. (Retained from current rules with advice considered)

- **Rule 13**: Modifiers with a benzene ring and a sulfanyl group (-SH) directly attached tend to result in a low yield. This is observed in compounds like 4-sulfanylbenzoic acid. (Retained from current rules with advice considered)

- **Rule 14**: Modifiers with a pyridine ring and a carboxylic acid group tend to result in a high yield. This is seen in compounds like 4-pyridin-4-ylbutanoic acid. (Retained from current rules with advice considered)

- **Rule 15**: Modifiers with a benzene ring and a formyl group (-CHO) directly attached tend to result in a low yield. This is observed in compounds like 4-formylbenzoic acid. (Retained from current rules with advice considered)

**End of Rules**---------------------------------------------------------------


    Current_Matrix:
    Matrix Generator Message:
Rule 1,Rule 2,Rule 3,Rule 4,Rule 5,Rule 6,Rule 7,Rule 8,Rule 9,Rule 10,Rule 11,Rule 12,Rule 13,Rule 14,Rule 15
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,1,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,1,0,0,0,0,0,0,0,0,0,0,-1,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0
1,0,0,0,0,0,0,0,-1,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,1,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,-1,0,0,0,0,0,0,0,0,0,1
0,0,0,0,-1,0,0,0,0,0,0,0,0,0,1
0,0,0,1,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,1,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1,0,0,0,0,0,0,0,0,1,0,0,0,0,0
1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1,0,0,0,0,0,0,0,0,1,0,0,0,0,0

---------------------------------------------------------------


    Train Accuracy: 0.6857142857142857; Test Accuracy: 1.0
    Train Support: 0.04285714285714286; Test Support: 0.0
    Train Confidence: 0.8125; Test Confidence: 0.5
    Train Lift: 1.5870098039215688; Test Lift: NONE
    Train Leverage: 0.010612244897959186; Test Leverage: NONE
    ----------------------------------------------------------------------------------

    Current Rule Code:
def rule2matrix(smiles_list):
    rules = [
        ['[NX3H2]', '[CX3](=O)[OX2H1]'],  # Rule 1: Amino and carboxylic acid group
        ['[SX2H]', '[CX3](=O)[OX2H1]'],  # Rule 2: Sulfanyl and carboxylic acid group
        ['c1ccncc1[NX3H2]'],  # Rule 3: Pyridine with amino group
        ['[NX3+](=O)[O-]'],  # Rule 4: Nitro group
        ['[CX3H]=O'],  # Rule 5: Formyl group
        ['[OX2H][CX4][OX2H]'],  # Rule 6: Multiple hydroxyl groups
        ['c1ccccc1OC'],  # Rule 7: Benzene with methoxy group
        ['[CX4](F)(F)F'],  # Rule 8: Fluorinated alkyl chain
        ['c1c[nH]c2c1cccc2'],  # Rule 9: Indole group
        ['[CX4][CX4][CX4][CX4][CX4][CX4][CX3](=O)[OX2H1]'],  # Rule 10: Long alkyl chain with carboxylic acid
        ['c1cc([NX3H2])[CX3H]=O'],  # Rule 11: Electron-donating and withdrawing groups on aromatic ring
        ['[OX2][CX4][OX2H1]'],  # Rule 12: Ether linkage with carboxylic acid
        ['c1ccccc1[SX2H]'],  # Rule 13: Benzene with sulfanyl group
        ['c1ccncc1[CX3](=O)[OX2H1]'],  # Rule 14: Pyridine with carboxylic acid
        ['c1ccccc1[CX3H]=O']  # Rule 15: Benzene with formyl group
    ]
    results = []
    for smi in smiles_list:
        mol = Chem.MolFromSmiles(smi)
        if mol is None:
            results.append([0] * len(rules))
            continue
        row = []
        for i, rule in enumerate(rules):
            try:
                if all(mol.HasSubstructMatch(Chem.MolFromSmarts(r)) for r in rule):
                    if i in [0, 1, 2, 3, 5, 9, 11, 14]:  # Rules predicting high yield
                        row.append(1)
                    else:  # Rules predicting low yield
                        row.append(-1)
                else:
                    row.append(0)
            except:
                row.append(0)
        results.append(row)
    df = pd.DataFrame(results, columns=[f'Rule {i+1}' for i in range(len(rules))])
    return df
--------------------------------------------------