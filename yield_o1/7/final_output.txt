
    Target Name: yield
    GPT Model: o1-preview-2024-09-12
    ML Model: ETC
    Current_Rules:
    **Start of Rules**

---

- **Rule 1**: Modifiers that are **amino acids with side-chain carboxylate groups** tend to result in **high yield**.
  - *Chemical Features*: A central α-amino acid structure with an additional carboxylic acid functional group on the side chain.
  - *Underlying Physical-Chemical Properties*: The additional carboxylate can coordinate with metal centers, enhancing catalyst stability and reactivity.
  - *Examples*: 
    - (2S)-2-aminobutanedioic acid (Aspartic acid)
    - (2S)-2-aminopentanedioic acid (Glutamic acid)

---

- **Rule 2**: Modifiers that are **amino acids with heteroaromatic side chains** tend to result in **high yield**.
  - *Chemical Features*: An α-amino acid with a heteroaromatic ring (such as indole) in its side chain.
  - *Underlying Physical-Chemical Properties*: The heteroaromatic ring can participate in π-π stacking and coordinate with metal centers, influencing electronic properties.
  - *Example*:
    - (2R)-2-amino-3-(1H-indol-3-yl)propanoic acid (Tryptophan)

---

- **Rule 3**: Modifiers containing a **thiol (-SH) group on an aliphatic chain attached to a carboxylic acid group** tend to result in **high yield**.
  - *Chemical Features*: An aliphatic chain bearing a thiol group and terminating with a carboxylic acid.
  - *Underlying Physical-Chemical Properties*: The thiol group can coordinate with metal centers and affect redox properties, enhancing catalytic activity.
  - *Example*:
    - 3-sulfanylpropanoic acid

---

- **Rule 4**: Modifiers that are **pyridine carboxylic acids**, where the pyridine ring is directly attached to the carboxyl group, tend to result in **high yield**.
  - *Chemical Features*: A pyridine ring substituted directly with a carboxylic acid group.
  - *Underlying Physical-Chemical Properties*: The nitrogen in the pyridine ring can coordinate with metals, and the aromatic system can delocalize electrons.
  - *Examples*:
    - Pyridine-3-carboxylic acid (Nicotinic acid)
    - 2-oxo-1H-pyridine-4-carboxylic acid

---

- **Rule 5**: Modifiers with **aromatic rings containing hydrogen-bonding substituents (e.g., amino, nitro groups) positioned para to a carboxylic acid** tend to result in **high yield**.
  - *Chemical Features*: An aromatic ring with a substituent capable of hydrogen bonding at the para position relative to a carboxylic acid.
  - *Underlying Physical-Chemical Properties*: Hydrogen-bonding groups can interact with the catalyst or substrate, stabilizing transition states.
  - *Examples*:
    - 4-aminobenzoic acid
    - 4-nitrobenzoic acid

---

- **Rule 6**: Modifiers containing a **thiol (-SH) group on an aromatic ring** tend to result in **low yield**.
  - *Chemical Features*: An aromatic ring substituted with a thiol group.
  - *Underlying Physical-Chemical Properties*: Aromatic thiols may bind too strongly to metal centers, deactivating the catalyst or interfering with the reaction pathway.
  - *Example*:
    - 4-sulfanylbenzoic acid

---

- **Rule 7**: Modifiers containing an **aldehyde (-CHO) group attached to an aromatic ring** tend to result in **low yield**.
  - *Chemical Features*: An aromatic ring with an aldehyde substituent.
  - *Underlying Physical-Chemical Properties*: Aldehyde groups can be reactive toward nucleophiles and may participate in side reactions, consuming the catalyst or destabilizing intermediates.
  - *Examples*:
    - 4-formylbenzoic acid
    - 5-formyl-2-hydroxybenzoic acid

---

- **Rule 8**: Modifiers with **heavily fluorinated aliphatic chains** tend to result in **low yield**.
  - *Chemical Features*: Aliphatic chains with multiple fluorine atoms.
  - *Underlying Physical-Chemical Properties*: Fluorination increases electron-withdrawing capacity, which can reduce the ability of the modifier to interact effectively with the catalyst.
  - *Example*:
    - 2,2,3,3,4,4,5,5,5-nonafluoropentanoic acid

---

- **Rule 9**: Modifiers with **long aliphatic chains (more than 6 carbons) containing amino groups** tend to result in **low yield**.
  - *Chemical Features*: Aliphatic chains longer than six carbons with amino substituents.
  - *Underlying Physical-Chemical Properties*: Long chains can cause steric hindrance, and the amino group may interact unfavorably with the catalyst.
  - *Examples*:
    - 7-aminoheptanoic acid
    - 8-aminooctanoic acid

---

- **Rule 10**: Modifiers featuring **multiple ethoxy or methoxyethoxy groups on aliphatic chains** tend to result in **low yield**.
  - *Chemical Features*: Aliphatic chains substituted with several ethoxy or methoxyethoxy groups.
  - *Underlying Physical-Chemical Properties*: These groups increase steric bulk and may interfere with catalyst-substrate interactions.
  - *Examples*:
    - 2-[2-(2-methoxyethoxy)ethoxy]acetic acid
    - 3-[2-(2-aminoethoxy)ethoxy]propanoic acid

---

- **Rule 11**: Modifiers with **aromatic rings containing methyl groups positioned para to carboxylic acids** tend to result in **low yield**.
  - *Chemical Features*: An aromatic ring with a methyl group at the para position relative to a carboxylic acid group.
  - *Underlying Physical-Chemical Properties*: Methyl groups are electron-donating and can affect the electronic distribution of the ring, potentially destabilizing catalyst interactions.
  - *Example*:
    - 4-methylbenzoic acid

---

- **Rule 12**: Modifiers that are **amino acids with non-polar, aliphatic side chains** tend to result in **low yield**.
  - *Chemical Features*: α-Amino acids with side chains that are non-polar and aliphatic, lacking additional functional groups.
  - *Underlying Physical-Chemical Properties*: Lack of functional groups in side chains reduces the ability to interact effectively with the catalyst.
  - *Example*:
    - (2S)-2-amino-3-phenylpropanoic acid (Phenylalanine)

---

- **Rule 13**: Modifiers containing **acylated amino groups**, such as **acetamido groups**, tend to result in **low yield**.
  - *Chemical Features*: Presence of an acetamido group or N-acetylation on an amino group.
  - *Underlying Physical-Chemical Properties*: Acylation can reduce the basicity and coordination ability of amino groups, affecting catalyst interaction.
  - *Example*:
    - (2S)-6-acetamido-2-aminohexanoic acid

---

- **Rule 14**: Modifiers with **aromatic rings containing electron-donating methoxy groups** tend to have variable yields, requiring careful consideration of other functional groups.
  - *Chemical Features*: Aromatic rings substituted with methoxy groups.
  - *Underlying Physical-Chemical Properties*: Methoxy groups are electron-donating, which can enhance or disrupt interactions depending on the overall structure.
  - *Examples*:
    - 4-(3,4-dimethoxyphenyl)-4-oxobutanoic acid (High yield)
    - 3-(4-hydroxyphenyl)propanoic acid (Low yield)

---

- **Rule 15**: Modifiers that have **ketone groups adjacent to carboxylic acids on aliphatic chains** tend to result in **low yield**.
  - *Chemical Features*: A ketone functional group positioned near a carboxylic acid on an aliphatic chain.
  - *Underlying Physical-Chemical Properties*: Ketone groups can engage in undesired side reactions or alter the electronic properties unfavorably.
  - *Example*:
    - 4-oxoheptanedioic acid

---

**End of Rules**

---

These rules have been formulated by analyzing the dataset and identifying patterns between the molecular features of the modifiers and their influence on the reaction yield. Each rule combines multiple sub-structures where possible and considers underlying physical-chemical properties, such as electronic effects, steric hindrance, and coordination abilities with the catalyst.

By applying these rules, one can predict whether a new molecular modifier is likely to result in a high or low yield in the reaction based on its structural features.---------------------------------------------------------------


    Current_Matrix:
    Matrix Generator Message:
Rule 1,Rule 2,Rule 3,Rule 4,Rule 5,Rule 6,Rule 7,Rule 8,Rule 9,Rule 10,Rule 11,Rule 12,Rule 13,Rule 14,Rule 15
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1,0,0,0,0,0,0,0,0,0,0,-1,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,1,0,0,-1,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1,1,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0
0,0,1,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,-1,0,0,0,-1,0,0,0,0
0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1,0,0,0,0,0,0,0,0,0,0,-1,-1,0,0
0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0

---------------------------------------------------------------


    Train Accuracy: 0.6571428571428571; Test Accuracy: 1.0
    Train Support: 0.04285714285714286; Test Support: 0.0
    Train Confidence: 1.0; Test Confidence: 0.5
    Train Lift: 1.9444444444444446; Test Lift: NONE
    Train Leverage: 0.020816326530612248; Test Leverage: NONE
    ----------------------------------------------------------------------------------

    Current Rule Code:
def rule2matrix(smiles_list):
    # Define SMARTS patterns for the rules
    # General patterns
    carboxylic_acid = '[CX3](=O)[OX2H1]'
    amino_acid_backbone = '[NX3][CX4H]([*])[CX3](=O)[OX2H1]'
    aromatic_ring = '[a]'
    thiol_group = '[SX2H]'
    aldehyde_group = '[CX3H1](=O)'
    fluorinated_chain = '[C,F]([F])([F])[F]'
    long_aliphatic_chain = '[CH2][CH2][CH2][CH2][CH2][CH2]'
    amino_group = '[NX3;H2,H1;!$(N=*);!$(N~[#7,#8,#15,#16])]'  # Primary or secondary amine
    ethoxy_group = '[OX2][CX2][CX2][OX2][CX3]'
    methoxy_group = '[OX2][CX4H3]'
    methyl_group = '[CH3]'
    ketone_group = '[CX3](=O)[#6]'
    
    # Rule-specific patterns
    # Rule 1: Amino acids with side-chain carboxylate groups
    rule1_patterns = [amino_acid_backbone, carboxylic_acid]
    
    # Rule 2: Amino acids with heteroaromatic side chains (e.g., tryptophan)
    heteroaromatic_ring = '[n,o,s]1cccc1'
    rule2_patterns = [amino_acid_backbone, heteroaromatic_ring]
    
    # Rule 3: Thiol group on aliphatic chain attached to carboxylic acid
    rule3_patterns = [thiol_group, carboxylic_acid]
    
    # Rule 4: Pyridine carboxylic acids
    pyridine_carboxylic_acid = 'n1ccccc1C(=O)[O,H]'  # Pyridine ring directly attached to COOH
    rule4_patterns = [pyridine_carboxylic_acid]
    
    # Rule 5: Aromatic ring with hydrogen-bonding substituents para to carboxylic acid
    para_amino_or_nitro = '[c][c](Nc)[c][c](C(=O)O)[c]'  # Simplified pattern
    rule5_patterns = [para_amino_or_nitro]
    
    # Rule 6: Thiol group on an aromatic ring
    aromatic_thiol = '[c][c][c][c][c][c][SX2H]'  # Simplified pattern for aromatic thiol
    rule6_patterns = [aromatic_thiol]
    
    # Rule 7: Aldehyde group attached to aromatic ring
    aromatic_aldehyde = '[c][c][c][c][c][c][CX3H](=O)'  # Simplified pattern for aromatic aldehyde
    rule7_patterns = [aromatic_aldehyde]
    
    # Rule 8: Heavily fluorinated aliphatic chains
    rule8_patterns = ['[CF](F)(F)']  # CF3 group as proxy for heavy fluorination
    
    # Rule 9: Long aliphatic chains (>6 carbons) with amino groups
    rule9_patterns = [long_aliphatic_chain, amino_group]
    
    # Rule 10: Multiple ethoxy or methoxyethoxy groups on aliphatic chains
    rule10_patterns = [ethoxy_group, methoxy_group]
    
    # Rule 11: Aromatic rings with methyl groups para to carboxylic acid
    para_methyl = '[c][c](C)[c][c](C(=O)O)[c]'  # Simplified pattern
    rule11_patterns = [para_methyl]
    
    # Rule 12: Amino acids with non-polar, aliphatic side chains
    non_polar_side_chain = '[CX4][CX4][CX4]'  # Simplified pattern for aliphatic chain
    rule12_patterns = [amino_acid_backbone, non_polar_side_chain]
    
    # Rule 13: Acylated amino groups (e.g., acetamido groups)
    acetamido_group = '[NX3][CX3](=O)[CX4H3]'
    rule13_patterns = [acetamido_group]
    
    # Rule 14: Aromatic rings with methoxy groups
    methoxy_on_aromatic = '[c][c](OC)[c][c](C(=O)O)[c]'  # Simplified pattern
    rule14_patterns = [methoxy_on_aromatic]
    
    # Rule 15: Ketone groups adjacent to carboxylic acids on aliphatic chains
    ketone_adjacent_carboxylic = '[CX3](=O)[CX4][CX3](=O)[OX2H1]'
    rule15_patterns = [ketone_adjacent_carboxylic]
    
    # Compile patterns
    compiled_rules = [
        {'number': 1, 'patterns': rule1_patterns, 'prediction': 1},
        {'number': 2, 'patterns': rule2_patterns, 'prediction': 1},
        {'number': 3, 'patterns': rule3_patterns, 'prediction': 1},
        {'number': 4, 'patterns': rule4_patterns, 'prediction': 1},
        {'number': 5, 'patterns': rule5_patterns, 'prediction': 1},
        {'number': 6, 'patterns': rule6_patterns, 'prediction': -1},
        {'number': 7, 'patterns': rule7_patterns, 'prediction': -1},
        {'number': 8, 'patterns': rule8_patterns, 'prediction': -1},
        {'number': 9, 'patterns': rule9_patterns, 'prediction': -1},
        {'number': 10, 'patterns': rule10_patterns, 'prediction': -1},
        {'number': 11, 'patterns': rule11_patterns, 'prediction': -1},
        {'number': 12, 'patterns': rule12_patterns, 'prediction': -1},
        {'number': 13, 'patterns': rule13_patterns, 'prediction': -1},
        {'number': 14, 'patterns': rule14_patterns, 'prediction': 0},  # Variable yield
        {'number': 15, 'patterns': rule15_patterns, 'prediction': -1}
    ]
    
    # Compile SMARTS patterns
    for rule in compiled_rules:
        compiled_patterns = []
        for smarts in rule['patterns']:
            try:
                pat = Chem.MolFromSmarts(smarts)
                compiled_patterns.append(pat)
            except Exception as e:
                compiled_patterns.append(None)
        rule['compiled_patterns'] = compiled_patterns
    
    # Initialize results list
    results = []
    
    # Process each SMILES string
    for smi in smiles_list:
        mol = Chem.MolFromSmiles(smi)
        if mol is None:
            # If the molecule cannot be parsed, append a row of zeros
            results.append([0]*len(compiled_rules))
            continue
        row = []
        for rule in compiled_rules:
            try:
                match = True
                for pat in rule['compiled_patterns']:
                    if pat is None:
                        match = False
                        break
                    if not mol.HasSubstructMatch(pat):
                        match = False
                        break
                if match:
                    row.append(rule['prediction'])
                else:
                    row.append(0)
            except Exception as e:
                # In case of any error, append 0
                row.append(0)
        results.append(row)
    
    # Create DataFrame with results
    df = pd.DataFrame(results, columns=[f'Rule {rule['number']}' for rule in compiled_rules])
    return df

--------------------------------------------------
    Target Name: yield
    GPT Model: o1-preview-2024-09-12
    ML Model: ETC
    Current_Rules:
    **Start of Rules**

---

- **Rule 1**: Modifiers that are **α-amino acids with side chains containing additional carboxylic acid groups or nitrogen-containing heterocycles capable of metal coordination** tend to result in **high yield**.

  - *Chemical Features*: α-Amino acids whose side chains include additional carboxylate groups or heterocyclic rings with nitrogen atoms that can coordinate to metal centers.

  - *Underlying Physical-Chemical Properties*: The extra carboxylate or nitrogen heterocycle enhances coordination with metal centers, improving catalyst stability and reactivity through chelation effects.

  - *Examples*:
    - **(2S)-2-aminobutanedioic acid** (Aspartic acid)
    - **(2S)-2-aminopentanedioic acid** (Glutamic acid)
    - **(2R)-2-amino-3-(1H-indol-3-yl)propanoic acid** (Tryptophan)

---

- **Rule 2**: Modifiers that are **aromatic carboxylic acids with electron-withdrawing substituents (e.g., nitro, halogens) at the para position** tend to result in **high yield**.

  - *Chemical Features*: Aromatic rings bearing a carboxylic acid group and an electron-withdrawing group at the para position relative to the carboxyl group.

  - *Underlying Physical-Chemical Properties*: Electron-withdrawing groups increase the acidity of the carboxylic acid, enhancing its ability to coordinate with metal centers and stabilize the catalyst through stronger metal-ligand interactions.

  - *Examples*:
    - **4-nitrobenzoic acid**
    - **4-(bromomethyl)benzoic acid**

---

- **Rule 3**: Modifiers that are **heteroaromatic carboxylic acids with nitrogen atoms in the ring**, especially when the nitrogen is positioned to coordinate with metals, tend to result in **high yield**.

  - *Chemical Features*: Heteroaromatic compounds (e.g., pyridine, pyrazole) containing nitrogen atoms within the ring and a carboxylic acid substituent.

  - *Underlying Physical-Chemical Properties*: Nitrogen atoms in heteroaromatic rings can act as additional coordination sites, promoting stronger binding with metal centers and enhancing catalytic activity through chelation.

  - *Examples*:
    - **Pyridine-3-carboxylic acid** (Nicotinic acid)
    - **1H-pyrazole-4-carboxylic acid**
    - **2-oxo-1H-pyridine-4-carboxylic acid**

---

- **Rule 4**: Modifiers that are **aliphatic carboxylic acids with amino groups on short chains (≤5 carbons)** tend to result in **high yield**.

  - *Chemical Features*: Short-chain aliphatic acids containing amino groups capable of coordinating to metal centers.

  - *Underlying Physical-Chemical Properties*: The presence of amino groups enhances interaction with metal centers, while the short chain length minimizes steric hindrance, improving catalyst efficiency.

  - *Examples*:
    - **5-aminopentanoic acid**
    - **3-sulfanylpropanoic acid**
    - **4-aminobenzoic acid**

---

- **Rule 5**: Modifiers that are **unsubstituted medium-chain aliphatic carboxylic acids (6–8 carbons)** tend to result in **high yield**.

  - *Chemical Features*: Straight-chain aliphatic carboxylic acids without additional polar substituents.

  - *Underlying Physical-Chemical Properties*: The hydrophobic chain facilitates interactions with the catalyst's non-polar regions, while the carboxylic acid group provides coordination to the metal center, balancing hydrophilic and hydrophobic interactions.

  - *Example*:
    - **Octanoic acid**

---

- **Rule 6**: Modifiers that are **aromatic carboxylic acids with electron-donating groups (e.g., methyl, methoxy, hydroxyl) at the para position** tend to result in **low yield**.

  - *Chemical Features*: Aromatic rings with carboxylic acid groups and electron-donating substituents at the para position.

  - *Underlying Physical-Chemical Properties*: Electron-donating groups decrease the acidity of the carboxylic acid, reducing its ability to coordinate with metal centers and diminishing catalyst effectiveness due to weaker metal-ligand interactions.

  - *Examples*:
    - **4-methylbenzoic acid**
    - **3-(4-hydroxyphenyl)propanoic acid**

---

- **Rule 7**: Modifiers that are **aromatic carboxylic acids with aldehyde (-CHO) groups attached to the ring** tend to result in **low yield**.

  - *Chemical Features*: Aromatic carboxylic acids substituted with aldehyde groups on the ring.

  - *Underlying Physical-Chemical Properties*: Aldehyde groups are electrophilic and can react with nucleophilic sites on the catalyst or participate in side reactions, deactivating the catalyst or consuming reactive intermediates.

  - *Examples*:
    - **4-formylbenzoic acid**
    - **5-formyl-2-hydroxybenzoic acid**

---

- **Rule 8**: Modifiers that are **long-chain aliphatic carboxylic acids (≥7 carbons) with additional polar functional groups (e.g., amino, hydroxyl)** tend to result in **low yield**.

  - *Chemical Features*: Long-chain aliphatic acids bearing polar substituents such as amino or hydroxyl groups.

  - *Underlying Physical-Chemical Properties*: Increased chain length leads to greater steric hindrance and potential aggregation, while polar groups may interfere with catalyst interactions due to unfavorable solvation effects or competing interactions.

  - *Examples*:
    - **7-aminoheptanoic acid**
    - **8-aminooctanoic acid**
    - **7-hydroxyheptanoic acid**

---

- **Rule 9**: Modifiers containing **polyethylene glycol (PEG) chains or ether linkages attached to carboxylic acids** tend to result in **low yield**.

  - *Chemical Features*: Carboxylic acids linked to ethylene glycol units [(–OCH₂CH₂–)ₙ], forming PEG chains or containing ether bonds.

  - *Underlying Physical-Chemical Properties*: PEG chains and ether linkages increase steric bulk and hydrophilicity, potentially hindering effective interaction between the modifier and the catalyst's active sites due to steric hindrance and solvation effects.

  - *Examples*:
    - **2-[2-(2-methoxyethoxy)ethoxy]acetic acid**
    - **3-[2-(2-aminoethoxy)ethoxy]propanoic acid**

---

- **Rule 10**: Modifiers that are **α-amino acids with non-polar aromatic side chains lacking additional coordinating functional groups** tend to result in **low yield**.

  - *Chemical Features*: α-Amino acids whose side chains are simple aromatic rings without functional groups capable of metal coordination.

  - *Underlying Physical-Chemical Properties*: The absence of functional groups that can coordinate with metal centers reduces interaction with the catalyst, diminishing its effectiveness due to weaker binding.

  - *Example*:
    - **(2S)-2-amino-3-phenylpropanoic acid** (Phenylalanine)

---

- **Rule 11**: Modifiers containing **N-acylated amino groups**, such as **N-acetylated amino acids**, tend to result in **low yield**.

  - *Chemical Features*: Compounds where the amino group is modified by an acyl group (e.g., acetyl), thus blocking its coordination ability.

  - *Underlying Physical-Chemical Properties*: Acylation reduces the nucleophilicity and coordination ability of amino groups, limiting their interaction with metal centers in the catalyst and decreasing catalytic activity.

  - *Example*:
    - **(2S)-6-acetamido-2-aminohexanoic acid**

---

- **Rule 12**: Modifiers that are **aliphatic carboxylic acids with extensively fluorinated chains** tend to result in **low yield**.

  - *Chemical Features*: Aliphatic chains heavily substituted with fluorine atoms.

  - *Underlying Physical-Chemical Properties*: Fluorination increases hydrophobicity and electron-withdrawing effects, which can disrupt interactions with the catalyst by causing unfavorable conformations or weakening the modifier's affinity for metal centers due to the strong C–F bond's reluctance to participate in coordination.

  - *Example*:
    - **2,2,3,3,4,4,5,5,5-nonafluoropentanoic acid**

---

- **Rule 13**: Modifiers containing **thiol groups attached directly to aromatic rings** tend to result in **low yield**.

  - *Chemical Features*: Aromatic rings bearing both carboxylic acid and thiol (-SH) groups.

  - *Underlying Physical-Chemical Properties*: Thiol groups may bind too strongly to metal centers, blocking active sites and deactivating the catalyst through irreversible binding or catalyst poisoning.

  - *Example*:
    - **4-sulfanylbenzoic acid**

---

- **Rule 14**: Modifiers that are **dicarboxylic acids with ketone functional groups within the carbon chain** tend to result in **low yield**.

  - *Chemical Features*: Aliphatic dicarboxylic acids containing internal ketone groups within the carbon chain.

  - *Underlying Physical-Chemical Properties*: The presence of ketone groups may interfere with metal coordination or participate in side reactions with the catalyst or reactants, negatively impacting catalyst performance and reaction yield.

  - *Example*:
    - **4-oxoheptanedioic acid**

---

- **Rule 15**: Modifiers that are **aromatic carboxylic acids with bulky substituents adjacent to coordinating functional groups** tend to result in **low yield**.

  - *Chemical Features*: Compounds with bulky groups near functional sites that would normally coordinate with metal centers, leading to steric hindrance.

  - *Underlying Physical-Chemical Properties*: Steric hindrance from bulky groups can prevent effective coordination with the catalyst's active sites, reducing catalytic activity due to limited access or unfavorable spatial arrangement.

  - *Example*:
    - **2-[(4-hydroxybenzoyl)amino]acetic acid**

---

**End of Rules**

---

These rules have been developed by analyzing the provided dataset and identifying patterns between the structural features of the molecular modifiers and their influence on the reaction yield. Each rule combines multiple substructures (functional groups) where applicable and considers underlying physical-chemical properties such as coordination abilities, electronic effects, steric factors, and potential side reactions.

By applying these rules, one can predict whether a new molecular modifier is likely to result in a high or low yield in the radical-mediated remote δ-C(sp³)–H bond functionalization reaction based on its structural features. This systematic approach aids in selecting appropriate modifiers to optimize and control the yield of the reaction.---------------------------------------------------------------


    Current_Matrix:
    Matrix Generator Message:
Rule 1,Rule 2,Rule 3,Rule 4,Rule 5,Rule 6,Rule 7,Rule 8,Rule 9,Rule 10,Rule 11,Rule 12,Rule 13,Rule 14,Rule 15
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0

---------------------------------------------------------------


    Train Accuracy: 0.6; Test Accuracy: 1.0
    Train Support: 0.11428571428571428; Test Support: 0.0
    Train Confidence: 1.0; Test Confidence: 0.5
    Train Lift: 1.9444444444444446; Test Lift: NONE
    Train Leverage: 0.05551020408163266; Test Leverage: NONE
    ----------------------------------------------------------------------------------

    Current Rule Code:
def rule2matrix(smiles_list):
    # Define SMARTS patterns for functional groups and structural features
    
    # Carboxylic acid group (-COOH)
    carboxylic_acid = '[CX3](=O)[OX1H1]'
    
    # Primary amine group (-NH2)
    primary_amine = '[NX3;H2]'
    
    # Secondary amine group (-NH-)
    secondary_amine = '[NX3;H1;!H0]'
    
    # Amino acid backbone (alpha-amino acid)
    amino_acid_backbone = '[NX3;H2][CX4H][CX3](=O)[OX1H1]'
    
    # Additional carboxylic acid group (excluding backbone)
    additional_carboxylic_acid = '[CX3](=O)[OX1H1]'
    
    # Nitrogen-containing heterocycle
    nitrogen_heterocycle = '[#7;r]'
    
    # Aromatic ring with carboxylic acid
    aromatic_carboxylic_acid = '[c][CX3](=O)[OX1H1]'
    
    # Electron-withdrawing groups (EWGs) at para position
    ewg_para = '[c][c][c][c]([$([NX3+](=O)[O-]),$([F,Cl,Br,I])])[c][CX3](=O)[OX1H1]'
    
    # Electron-donating groups (EDGs) at para position
    edg_para = '[c][c][c][c]([$([OX2H]),$([OX2][CH3]),$([CH3])])[c][CX3](=O)[OX1H1]'
    
    # Aldehyde group attached to aromatic ring
    aldehyde_on_aromatic = '[c][CX3H](=O)'
    
    # Long aliphatic chain (≥7 carbons)
    long_aliphatic_chain = '[CH2][CH2][CH2][CH2][CH2][CH2][CH2]'
    
    # Polar functional groups (amino, hydroxyl) in aliphatic chain
    polar_groups = '[#6][OX2H,$(NX3;H2),$(NX3;H1)]'
    
    # PEG chains or ether linkages
    peg_chain = '[OX2][CX2][CX2][OX2]'
    
    # Aromatic ring
    aromatic_ring = '[a]'
    
    # Non-polar aromatic side chain (e.g., phenylalanine)
    non_polar_aromatic_side_chain = '[NX3;H2][CX4H][CX3](=O)[OX1H1][CX4][c]'
    
    # N-acylated amino group
    n_acylated_amino_group = '[NX3][CX3](=O)'
    
    # Fluorinated chains
    fluorinated_chain = '[CX4]([F])[F]'
    
    # Thiol group attached to aromatic ring
    thiol_on_aromatic = '[c][SX2H]'
    
    # Dicarboxylic acid with ketone within the chain
    dicarboxylic_acid_ketone = '[CX3](=O)[CH2][CX3](=O)'
    
    # Bulky substituents adjacent to coordinating functional groups
    bulky_adjacent_substituent = '[c]([CX4,$(Br),$(Cl),$(I)])[CX3](=O)[OX1H1]'
    
    # Compile SMARTS patterns
    patterns = {
        'carboxylic_acid': Chem.MolFromSmarts(carboxylic_acid),
        'primary_amine': Chem.MolFromSmarts(primary_amine),
        'secondary_amine': Chem.MolFromSmarts(secondary_amine),
        'amino_acid_backbone': Chem.MolFromSmarts(amino_acid_backbone),
        'additional_carboxylic_acid': Chem.MolFromSmarts(additional_carboxylic_acid),
        'nitrogen_heterocycle': Chem.MolFromSmarts(nitrogen_heterocycle),
        'aromatic_carboxylic_acid': Chem.MolFromSmarts(aromatic_carboxylic_acid),
        'ewg_para': Chem.MolFromSmarts(ewg_para),
        'edg_para': Chem.MolFromSmarts(edg_para),
        'aldehyde_on_aromatic': Chem.MolFromSmarts(aldehyde_on_aromatic),
        'long_aliphatic_chain': Chem.MolFromSmarts(long_aliphatic_chain),
        'polar_groups': Chem.MolFromSmarts(polar_groups),
        'peg_chain': Chem.MolFromSmarts(peg_chain),
        'aromatic_ring': Chem.MolFromSmarts(aromatic_ring),
        'non_polar_aromatic_side_chain': Chem.MolFromSmarts(non_polar_aromatic_side_chain),
        'n_acylated_amino_group': Chem.MolFromSmarts(n_acylated_amino_group),
        'fluorinated_chain': Chem.MolFromSmarts(fluorinated_chain),
        'thiol_on_aromatic': Chem.MolFromSmarts(thiol_on_aromatic),
        'dicarboxylic_acid_ketone': Chem.MolFromSmarts(dicarboxylic_acid_ketone),
        'bulky_adjacent_substituent': Chem.MolFromSmarts(bulky_adjacent_substituent)
    }
    
    # Define the rules
    rules = [
        {
            'number': 1,
            'description': 'High yield: α-amino acids with side chains containing additional carboxylic acid groups or nitrogen-containing heterocycles.',
            'patterns': [
                patterns['amino_acid_backbone'],
                [patterns['additional_carboxylic_acid'], patterns['nitrogen_heterocycle']]
            ],
            'logic': 'and',  # Requires both the backbone and one of the side chain features
            'prediction': 1
        },
        {
            'number': 2,
            'description': 'High yield: Aromatic carboxylic acids with electron-withdrawing substituents at the para position.',
            'patterns': [
                patterns['ewg_para']
            ],
            'prediction': 1
        },
        {
            'number': 3,
            'description': 'High yield: Heteroaromatic carboxylic acids with nitrogen atoms in the ring.',
            'patterns': [
                patterns['aromatic_carboxylic_acid'],
                patterns['nitrogen_heterocycle']
            ],
            'logic': 'and',
            'prediction': 1
        },
        {
            'number': 4,
            'description': 'High yield: Aliphatic carboxylic acids with amino groups on short chains (≤5 carbons).',
            'patterns': [
                patterns['carboxylic_acid'],
                [patterns['primary_amine'], patterns['secondary_amine']]
            ],
            'chain_length': 5,
            'prediction': 1
        },
        {
            'number': 5,
            'description': 'High yield: Unsubstituted medium-chain aliphatic carboxylic acids (6–8 carbons).',
            'patterns': [
                patterns['carboxylic_acid'],
            ],
            'chain_length_range': (6, 8),
            'exclude_patterns': [patterns['polar_groups']],
            'prediction': 1
        },
        {
            'number': 6,
            'description': 'Low yield: Aromatic carboxylic acids with electron-donating groups at the para position.',
            'patterns': [
                patterns['edg_para']
            ],
            'prediction': -1
        },
        {
            'number': 7,
            'description': 'Low yield: Aromatic carboxylic acids with aldehyde (-CHO) groups attached to the ring.',
            'patterns': [
                patterns['aromatic_carboxylic_acid'],
                patterns['aldehyde_on_aromatic']
            ],
            'logic': 'and',
            'prediction': -1
        },
        {
            'number': 8,
            'description': 'Low yield: Long-chain aliphatic carboxylic acids (≥7 carbons) with additional polar functional groups.',
            'patterns': [
                patterns['carboxylic_acid'],
                patterns['long_aliphatic_chain'],
                patterns['polar_groups']
            ],
            'logic': 'and',
            'prediction': -1
        },
        {
            'number': 9,
            'description': 'Low yield: Modifiers containing PEG chains or ether linkages attached to carboxylic acids.',
            'patterns': [
                patterns['peg_chain'],
                patterns['carboxylic_acid']
            ],
            'logic': 'and',
            'prediction': -1
        },
        {
            'number': 10,
            'description': 'Low yield: α-amino acids with non-polar aromatic side chains lacking additional coordinating functional groups.',
            'patterns': [
                patterns['non_polar_aromatic_side_chain']
            ],
            'prediction': -1
        },
        {
            'number': 11,
            'description': 'Low yield: Modifiers containing N-acylated amino groups.',
            'patterns': [
                patterns['n_acylated_amino_group']
            ],
            'prediction': -1
        },
        {
            'number': 12,
            'description': 'Low yield: Aliphatic carboxylic acids with extensively fluorinated chains.',
            'patterns': [
                patterns['carboxylic_acid'],
                patterns['fluorinated_chain']
            ],
            'logic': 'and',
            'prediction': -1
        },
        {
            'number': 13,
            'description': 'Low yield: Modifiers containing thiol groups attached directly to aromatic rings.',
            'patterns': [
                patterns['thiol_on_aromatic']
            ],
            'prediction': -1
        },
        {
            'number': 14,
            'description': 'Low yield: Dicarboxylic acids with ketone functional groups within the carbon chain.',
            'patterns': [
                patterns['dicarboxylic_acid_ketone']
            ],
            'prediction': -1
        },
        {
            'number': 15,
            'description': 'Low yield: Aromatic carboxylic acids with bulky substituents adjacent to coordinating functional groups.',
            'patterns': [
                patterns['bulky_adjacent_substituent']
            ],
            'prediction': -1
        }
    ]
    
    # Initialize results list
    results = []
    
    # Process each SMILES string
    for smi in smiles_list:
        mol = Chem.MolFromSmiles(smi)
        if mol is None:
            # If the molecule cannot be parsed, append a row of zeros
            results.append([0]*len(rules))
            continue
        row = []
        for rule in rules:
            try:
                match = False
                if 'logic' in rule and rule['logic'] == 'and':
                    sub_matches = []
                    for pat in rule['patterns']:
                        if isinstance(pat, list):
                            # OR logic within the group
                            group_match = False
                            for sub_pat in pat:
                                if mol.HasSubstructMatch(sub_pat):
                                    group_match = True
                                    break
                            sub_matches.append(group_match)
                        else:
                            sub_matches.append(mol.HasSubstructMatch(pat))
                    if all(sub_matches):
                        match = True
                else:
                    # Default logic is OR among patterns
                    for pat in rule['patterns']:
                        if mol.HasSubstructMatch(pat):
                            match = True
                            break
                # Exclude patterns if any
                if match and 'exclude_patterns' in rule:
                    for pat in rule['exclude_patterns']:
                        if mol.HasSubstructMatch(pat):
                            match = False
                            break
                # Chain length conditions
                if match and 'chain_length' in rule:
                    carbon_chain = Chem.MolFromSmarts('[CX4H2][CX4H2][CX4H2][CX4H2][CX4H2]')
                    match = False
                    for bond in mol.GetBonds():
                        atom1 = bond.GetBeginAtom()
                        atom2 = bond.GetEndAtom()
                        if atom1.GetAtomicNum()==6 and atom2.GetAtomicNum()==6:
                            path = Chem.FindAllPathsOfLengthN(mol, rule['chain_length'], useBonds=True)
                            if path:
                                match = True
                                break
                if match and 'chain_length_range' in rule:
                    min_len, max_len = rule['chain_length_range']
                    chain_lengths = []
                    for chain in Chem.GetSymmSSSR(mol):
                        if len(chain) >= min_len and len(chain) <= max_len:
                            chain_lengths.append(len(chain))
                    if not chain_lengths:
                        match = False
                if match:
                    row.append(rule['prediction'])
                else:
                    row.append(0)
            except Exception as e:
                # In case of any error, append 0
                row.append(0)
        results.append(row)
    # Create DataFrame with results
    df = pd.DataFrame(results, columns=[f'Rule {rule['number']}' for rule in rules])
    return df

--------------------------------------------------
    Target Name: yield
    GPT Model: o1-preview-2024-09-12
    ML Model: ETC
    Current_Rules:
    **Start of Rules**

---

- **Rule 1**: Modifiers that contain **functional groups capable of chelating to metal centers**, such as **amino groups**, **pyridine nitrogen atoms**, or **thiol (-SH) groups**, **along with a carboxylic acid group**, tend to result in **high yield**.

  - *Chemical Features*: Presence of donor atoms (N, S) capable of forming chelate complexes with metal ions, combined with carboxylate groups.

  - *Underlying Physical-Chemical Properties*: Chelation enhances the stability and reactivity of metal-ligand complexes, promoting effective catalysis by strengthening metal-ligand interactions.

  - *Examples*:
    - **(2S)-2-aminopentanedioic acid** (Glutamic acid)
    - **(2S)-2-aminobutanedioic acid** (Aspartic acid)
    - **4-aminobenzoic acid**
    - **5-aminopentanoic acid**
    - **3-sulfanylpropanoic acid**

---

- **Rule 2**: Modifiers that are **heteroaromatic carboxylic acids containing nitrogen atoms** (e.g., **pyridine**, **pyrazole**, **pyridone rings**) tend to result in **high yield**.

  - *Chemical Features*: Heteroaromatic rings with nitrogen atoms capable of coordinating with metal centers, along with carboxylic acid groups.

  - *Underlying Physical-Chemical Properties*: Nitrogen atoms in aromatic systems act as additional coordination sites, enhancing binding with metal centers and improving catalytic activity through effective chelation.

  - *Examples*:
    - **Pyridine-3-carboxylic acid** (Nicotinic acid)
    - **1H-pyrazole-4-carboxylic acid**
    - **2-oxo-1H-pyridine-4-carboxylic acid**
    - **4-pyridin-4-ylbutanoic acid**

---

- **Rule 3**: Modifiers that are **aromatic carboxylic acids with strong electron-withdrawing substituents** (e.g., **nitro**, **halomethyl**, **carbonyl groups**) tend to result in **high yield**.

  - *Chemical Features*: Aromatic rings bearing carboxylic acid groups and electron-withdrawing substituents that increase acidity and coordination ability.

  - *Underlying Physical-Chemical Properties*: Electron-withdrawing groups enhance the acidity of the carboxylic acid, strengthening metal-ligand interactions and improving catalyst performance.

  - *Examples*:
    - **4-nitrobenzoic acid**
    - **4-(bromomethyl)benzoic acid**
    - **1,3-dioxo-2-benzofuran-5-carboxylic acid**

---

- **Rule 4**: Modifiers that are **short to medium-chain aliphatic carboxylic acids (3–6 carbons) with additional coordinating groups** (e.g., **amino**, **thiol** groups) tend to result in **high yield**.

  - *Chemical Features*: Aliphatic carboxylic acids containing functional groups capable of metal coordination, within a short to medium carbon chain length.

  - *Underlying Physical-Chemical Properties*: Short chains reduce steric hindrance, and coordinating groups provide additional binding sites to the metal catalyst, enhancing catalytic efficiency.

  - *Examples*:
    - **5-aminopentanoic acid**
    - **3-sulfanylpropanoic acid**

---

- **Rule 5**: Modifiers that are **long-chain aliphatic carboxylic acids (7 or more carbons) with polar substituents at terminal positions** (e.g., **amino**, **hydroxyl groups**) tend to result in **low yield**.

  - *Chemical Features*: Long aliphatic chains with polar functional groups distant from the carboxyl group.

  - *Underlying Physical-Chemical Properties*: Increased chain length introduces steric hindrance and flexibility, reducing effective coordination with metal centers due to spatial separation of coordinating groups.

  - *Examples*:
    - **7-aminoheptanoic acid**
    - **7-hydroxyheptanoic acid**
    - **8-aminooctanoic acid**

---

- **Rule 6**: Modifiers that contain **aldehyde (-CHO) groups in conjunction with carboxylic acid groups** tend to result in **low yield**.

  - *Chemical Features*: Carboxylic acids substituted with aldehyde functional groups.

  - *Underlying Physical-Chemical Properties*: Aldehyde groups may undergo side reactions or bind irreversibly to metal centers, deactivating the catalyst or interfering with the reaction pathway.

  - *Examples*:
    - **4-formylbenzoic acid**
    - **5-formyl-2-hydroxybenzoic acid**

---

- **Rule 7**: Modifiers that are **aromatic carboxylic acids with electron-donating substituents**, such as **hydroxyl (-OH)** or **methoxy (-OCH₃)** groups, display **variable yield** depending on the position and impact of the substituents.

  - *Chemical Features*: Aromatic rings with carboxylic acid groups and electron-donating substituents.

  - *Underlying Physical-Chemical Properties*: Electron-donating groups decrease the acidity of the carboxylic acid, potentially weakening metal-ligand interactions. However, if these groups can participate in coordination or are positioned favorably, they may enhance yield.

  - *Examples*:
    - **High Yield**:
      - **5-(4-hydroxyphenyl)pentanoic acid**
      - **4-(3,4-dimethoxyphenyl)-4-oxobutanoic acid**
    - **Low Yield**:
      - **3-(4-hydroxyphenyl)propanoic acid**
      - **2-[(4-hydroxybenzoyl)amino]acetic acid**

---

- **Rule 8**: Modifiers that contain **polyether chains** or **multiple ether linkages** tend to result in **low yield**.

  - *Chemical Features*: Carboxylic acids with ether bonds or polyether segments (e.g., ethylene glycol units).

  - *Underlying Physical-Chemical Properties*: Ether linkages increase molecular flexibility and solvation, which may hinder effective coordination with metal centers and reduce catalyst efficiency.

  - *Examples*:
    - **2-[2-(2-methoxyethoxy)ethoxy]acetic acid**
    - **3-[2-(2-aminoethoxy)ethoxy]propanoic acid**

---

- **Rule 9**: Modifiers that are **heavily fluorinated aliphatic carboxylic acids** tend to result in **low yield**.

  - *Chemical Features*: Aliphatic chains with multiple fluorine substitutions.

  - *Underlying Physical-Chemical Properties*: Extensive fluorination increases hydrophobicity and the electron-withdrawing effect, which can reduce interaction with metal centers and hinder effective coordination.

  - *Example*:
    - **2,2,3,3,4,4,5,5,5-nonafluoropentanoic acid**

---

- **Rule 10**: Modifiers that are **amino acids with acylated amino groups** (e.g., **N-acetylated amino acids**) tend to result in **low yield**.

  - *Chemical Features*: Amino acids where amino groups are blocked by acylation.

  - *Underlying Physical-Chemical Properties*: Acylation diminishes the amino group's ability to coordinate with metal centers, reducing potential chelation and catalytic enhancement.

  - *Example*:
    - **(2S)-6-acetamido-2-aminohexanoic acid**

---

- **Rule 11**: Modifiers containing **keto groups adjacent to carboxylic acid functionality** (e.g., **β-keto acids**) tend to result in **low yield**.

  - *Chemical Features*: Carboxylic acids with ketone groups near the carboxyl group.

  - *Underlying Physical-Chemical Properties*: Keto groups can interact with metal centers or participate in enolization, potentially disrupting catalyst activity or engaging in side reactions.

  - *Example*:
    - **4-oxoheptanedioic acid**

---

- **Rule 12**: Modifiers that are **aromatic carboxylic acids with substituents causing significant steric hindrance near coordination sites** tend to result in **low yield**.

  - *Chemical Features*: Bulky groups adjacent to functional groups involved in metal coordination (e.g., large alkyl or aromatic substituents).

  - *Underlying Physical-Chemical Properties*: Steric hindrance can obstruct the approach of modifiers to the metal center, preventing effective coordination and reducing catalytic activity.

  - *Example*:
    - **4-pyridin-4-ylbenzoic acid**

---

- **Rule 13**: Modifiers with **multiple functional groups capable of strong, irreversible binding to metal centers** (e.g., **thiol groups on aromatic rings**) may result in **low yield** due to catalyst deactivation.

  - *Chemical Features*: Functional groups that form strong bonds with metal centers, potentially blocking active sites.

  - *Underlying Physical-Chemical Properties*: Overly strong binding can lead to catalyst poisoning, where the metal center becomes inactive for further catalytic cycles.

  - *Example*:
    - **4-sulfanylbenzoic acid**

---

- **Rule 14**: Modifiers that contain **functional groups susceptible to side reactions** (e.g., **aldehydes**, **reactive ketones**) tend to result in **low yield**.

  - *Chemical Features*: Reactive functional groups that may engage in undesired reactions under catalytic conditions.

  - *Underlying Physical-Chemical Properties*: Side reactions can consume the catalyst or intermediates, diverting the reaction pathway and decreasing overall yield.

  - *Examples*:
    - **5-formyl-2-hydroxybenzoic acid**
    - **4-formylbenzoic acid**

---

- **Rule 15**: Modifiers that are **simple aliphatic carboxylic acids without additional coordinating groups** may result in **moderate to high yield**, depending on chain length and absence of interfering substituents.

  - *Chemical Features*: Straight-chain aliphatic carboxylic acids with minimal functionalization.

  - *Underlying Physical-Chemical Properties*: Lack of interfering groups allows for straightforward coordination through the carboxylate, but absence of additional coordinating functionality may limit effectiveness compared to chelating modifiers.

  - *Example*:
    - **Octanoic acid** (High yield)

---

**End of Rules**

---

These rules have been developed by thoroughly analyzing the provided dataset and correlating the structural features of the molecular modifiers with the observed reaction yields. Each rule combines specific substructures (functional groups) and considers underlying physical-chemical properties such as coordination abilities, electronic and steric effects, potential side reactions, and catalyst interactions.

By applying these rules, one can predict whether a new molecular modifier is likely to result in a high or low yield in the radical-mediated remote δ-C(sp³)–H bond functionalization reaction. This systematic approach aids in selecting appropriate modifiers to optimize and control the yield of the reaction, balancing the need for effective coordination with the catalyst and minimizing unfavorable interactions.

The generated rules prioritize coverage of the dataset, balancing simplicity and complexity to provide a comprehensive understanding of how different molecular features influence the reaction outcome. This allows for informed decisions when designing or selecting modifiers for similar catalytic systems.---------------------------------------------------------------


    Current_Matrix:
    Matrix Generator Message:
Rule 1,Rule 2,Rule 3,Rule 4,Rule 5,Rule 6,Rule 7,Rule 8,Rule 9,Rule 10,Rule 11,Rule 12,Rule 13,Rule 14,Rule 15
1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0
1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0
1,1,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1,0,0,0,0,0,0,0,0,0,0,0,-1,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1,1,0,0,0,0,0,0,0,0,0,0,0,0,0
1,0,0,0,0,0,0,0,0,0,0,-1,0,0,0
0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0
1,1,0,0,0,0,0,0,0,0,0,-1,0,0,0
1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,-1,0,0,0,0,0,0,0,-1,0
0,0,0,0,0,-1,0,0,0,0,0,0,0,-1,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1,1,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0
1,0,0,0,0,0,0,0,0,-1,0,0,0,0,0
1,1,0,0,0,0,0,0,0,0,0,-1,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1,0,0,0,0,0,0,0,0,-1,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1,0,0,0,0,0,0,0,-1,-1,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0
1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1,0,0,0,0,0,0,0,0,-1,0,0,0,0,0
1,0,0,0,0,0,0,0,0,0,0,0,0,0,0

---------------------------------------------------------------


    Train Accuracy: 0.7428571428571429; Test Accuracy: 1.0
    Train Support: 0.07346938775510205; Test Support: 0.0
    Train Confidence: 0.889795918367347; Test Confidence: 0.5
    Train Lift: 1.743230625583567; Test Lift: NONE
    Train Leverage: 0.02577259475218659; Test Leverage: NONE
    ----------------------------------------------------------------------------------

    Current Rule Code:
def rule2matrix(smiles_list):
    # Define SMARTS patterns for functional groups
    # Carboxylic acid group (-COOH)
    carboxylic_acid = '[CX3](=O)[OX1H0-,OX2H1]'
    
    # Primary or secondary amine groups (-NH2 or -NH-)
    amino_group = '[NX3;H2,H1][#6]'
    
    # Thiol group (-SH)
    thiol_group = '[SX2H]'
    
    # Pyridine nitrogen atom
    pyridine_nitrogen = '[n]'
    
    # Electron-withdrawing groups (EWGs)
    electron_withdrawing_groups = [
        '[CX3](=O)[OX1H0-,OX2H1]',  # Carboxylic acid
        '[CX3](=O)[#6]',  # Carbonyl group
        '[NX3](=O)=O',  # Nitro group
        '[F,Cl,Br,I]',  # Halogens
        '[CX4][F][F][F]'  # Trifluoromethyl group
    ]
    
    # Electron-donating groups (EDGs) on aromatic ring
    electron_donating_groups_aromatic = [
        '[c][OX2H]',  # Phenol group
        '[c][OX2][CH3]',  # Methoxy group on aromatic ring
    ]
    
    # Aldehyde group (-CHO)
    aldehyde_group = '[CX3H1](=O)[#6]'
    
    # Keto group adjacent to carboxylic acid (beta-keto acids)
    beta_keto_acid = '[#6][CX3](=O)[#6][CX3](=O)[OX1H0-,OX2H1]'
    
    # Long-chain aliphatic carboxylic acids (7 or more carbons)
    long_chain_aliphatic_acid = '[CX3](=O)[OX1H0-,OX2H1][CH2]{5,}'  # Chain of 6 or more CH2
    
    # Polyether chains or multiple ether linkages
    polyether_chain = '[#6][OX2][#6][OX2][#6]'
    
    # Acylated amino group (N-acetylated amino acids)
    acylated_amino_group = '[NX3][CX3](=O)[#6]'
    
    # Aromatic ring with substituents causing steric hindrance
    bulky_substituents = '[c]([CX4R0])[c]'  # Substituent on adjacent carbons
    
    # Define the rules with their associated patterns and predictions
    rules = [
        {
            'number': 1,
            'description': 'High yield: Modifiers containing functional groups capable of chelating to metal centers (amino groups, pyridine nitrogen atoms, or thiol groups), along with a carboxylic acid group.',
            'patterns': [
                [amino_group, pyridine_nitrogen, thiol_group],  # Donor groups
                [carboxylic_acid]  # Carboxylic acid group
            ],
            'prediction': 1
        },
        {
            'number': 2,
            'description': 'High yield: Modifiers that are heteroaromatic carboxylic acids containing nitrogen atoms.',
            'patterns': [
                [
                    '[n][c][c][c][c][c]',  # Pyridine ring with carboxylic acid
                    '[c][n][c][c][c][c]',
                    '[c][c][n][c][c][c]',
                    '[c][c][c][n][c][c]',
                    '[c][c][c][c][n][c]',
                    '[c][c][c][c][c][n]',
                ],
                [carboxylic_acid]
            ],
            'prediction': 1
        },
        {
            'number': 3,
            'description': 'High yield: Modifiers that are aromatic carboxylic acids with strong electron-withdrawing substituents (e.g., nitro, halomethyl, carbonyl groups).',
            'patterns': [
                [
                    '[c][NX3](=O)=O',  # Nitro group on aromatic ring
                    '[c][CH2][Halogen]',  # Halomethyl group
                    '[c][CX3](=O)[#6]'  # Carbonyl group
                ],
                [carboxylic_acid]
            ],
            'prediction': 1
        },
        {
            'number': 4,
            'description': 'High yield: Modifiers that are short to medium-chain aliphatic carboxylic acids (3–6 carbons) with additional coordinating groups (e.g., amino, thiol groups).',
            'patterns': [
                ['[CH2][CH2][CH2][CH2][CX3](=O)[OX1H0-,OX2H1]'],  # 5-carbon chain carboxylic acid
                [amino_group, thiol_group]  # Amino or thiol group
            ],
            'exclude_patterns': [long_chain_aliphatic_acid],
            'prediction': 1
        },
        {
            'number': 5,
            'description': 'Low yield: Modifiers that are long-chain aliphatic carboxylic acids (7 or more carbons) with polar substituents at terminal positions (e.g., amino, hydroxyl groups).',
            'patterns': [
                [long_chain_aliphatic_acid],
                [
                    amino_group,
                    '[OX2H]',  # Hydroxyl group
                ]
            ],
            'prediction': -1
        },
        {
            'number': 6,
            'description': 'Low yield: Modifiers that contain aldehyde (-CHO) groups in conjunction with carboxylic acid groups.',
            'patterns': [
                [aldehyde_group],
                [carboxylic_acid]
            ],
            'prediction': -1
        },
        {
            'number': 7,
            'description': 'Variable yield: Modifiers that are aromatic carboxylic acids with electron-donating substituents (hydroxyl or methoxy groups).',
            'patterns': [
                electron_donating_groups_aromatic,
                [carboxylic_acid]
            ],
            'prediction': 0  # Variable yield represented as 0
        },
        {
            'number': 8,
            'description': 'Low yield: Modifiers that contain polyether chains or multiple ether linkages.',
            'patterns': [
                [polyether_chain],
                [carboxylic_acid]
            ],
            'prediction': -1
        },
        {
            'number': 9,
            'description': 'Low yield: Modifiers that are heavily fluorinated aliphatic carboxylic acids.',
            'patterns': [
                ['[CX4]([F])(F)F'],  # Trifluoromethyl group
                [carboxylic_acid]
            ],
            'prediction': -1
        },
        {
            'number': 10,
            'description': 'Low yield: Modifiers that are amino acids with acylated amino groups (e.g., N-acetylated amino acids).',
            'patterns': [
                [acylated_amino_group],
                [carboxylic_acid]
            ],
            'prediction': -1
        },
        {
            'number': 11,
            'description': 'Low yield: Modifiers containing keto groups adjacent to carboxylic acid functionality (e.g., β-keto acids).',
            'patterns': [
                [beta_keto_acid]
            ],
            'prediction': -1
        },
        {
            'number': 12,
            'description': 'Low yield: Modifiers that are aromatic carboxylic acids with substituents causing significant steric hindrance near coordination sites.',
            'patterns': [
                [bulky_substituents],
                [carboxylic_acid]
            ],
            'prediction': -1
        },
        {
            'number': 13,
            'description': 'Low yield: Modifiers with multiple functional groups capable of strong, irreversible binding to metal centers.',
            'patterns': [
                ['[c][SX2H]'],  # Thiol on aromatic ring
                [carboxylic_acid]
            ],
            'prediction': -1
        },
        {
            'number': 14,
            'description': 'Low yield: Modifiers that contain functional groups susceptible to side reactions (e.g., aldehydes, reactive ketones).',
            'patterns': [
                [aldehyde_group],
                [carboxylic_acid]
            ],
            'prediction': -1
        },
        {
            'number': 15,
            'description': 'Moderate to high yield: Modifiers that are simple aliphatic carboxylic acids without additional coordinating groups.',
            'patterns': [
                [carboxylic_acid],
            ],
            'exclude_patterns': [
                amino_group,
                thiol_group,
                pyridine_nitrogen,
                '[OX2H]',  # Hydroxyl group
                '[n]',  # Any aromatic nitrogen
                '[a]',  # Any aromatic atom
            ],
            'prediction': 1
        }
    ]
    
    # Compile SMARTS patterns
    for rule in rules:
        compiled_patterns = []
        for group in rule.get('patterns', []):
            compiled_group = [Chem.MolFromSmarts(p) for p in group]
            compiled_patterns.append(compiled_group)
        rule['compiled_patterns'] = compiled_patterns
        # Compile exclude patterns if any
        if 'exclude_patterns' in rule:
            exclude_patterns = rule['exclude_patterns']
            if isinstance(exclude_patterns, list):
                compiled_excludes = [Chem.MolFromSmarts(p) for p in exclude_patterns]
                rule['compiled_exclude_patterns'] = compiled_excludes
    # Initialize results list
    results = []
    # Process each SMILES string
    for smi in smiles_list:
        mol = Chem.MolFromSmiles(smi)
        if mol is None:
            # If the molecule cannot be parsed, append a row of zeros
            results.append([0]*len(rules))
            continue
        row = []
        for rule in rules:
            try:
                match = True
                # Check exclude patterns if any
                if 'compiled_exclude_patterns' in rule:
                    for pat in rule['compiled_exclude_patterns']:
                        if mol.HasSubstructMatch(pat):
                            match = False
                            break
                    if not match:
                        row.append(0)
                        continue
                # Check required patterns
                for compiled_group in rule['compiled_patterns']:
                    group_match = False
                    for pat in compiled_group:
                        if mol.HasSubstructMatch(pat):
                            group_match = True
                            break
                    if not group_match:
                        match = False
                        break
                if match:
                    row.append(rule['prediction'])
                else:
                    row.append(0)
            except Exception:
                # In case of any error, append 0
                row.append(0)
        results.append(row)
    # Create DataFrame with results
    df = pd.DataFrame(results, columns=[f'Rule {rule['number']}' for rule in rules])
    return df

--------------------------------------------------
    Target Name: yield
    GPT Model: o1-preview-2024-09-12
    ML Model: ETC
    Current_Rules:
    **Start of Rules**

---

- **Rule 1**: Modifiers that are **aliphatic α-amino acids** containing **both an amino group (-NH₂) and a carboxylic acid group (-COOH) on the same carbon (α-carbon)** tend to result in **high yield**.

  - *Chemical Features*: Simple aliphatic α-amino acids without bulky side chains or additional functional groups.

  - *Underlying Physical-Chemical Properties*: The presence of both amino and carboxylate groups on the same carbon allows for strong bidentate coordination to metal centers, forming stable five-membered chelate rings. This enhances the stability and reactivity of the metal-ligand complex, promoting effective catalysis.

  - *Examples*:
    - **(2S)-2-aminobutanedioic acid** (Aspartic acid)
    - **(2S)-2-aminopentanedioic acid** (Glutamic acid)

---

- **Rule 2**: Modifiers that are **heteroaromatic carboxylic acids containing nitrogen atoms in the ring**, such as **pyridine derivatives**, tend to result in **high yield**.

  - *Chemical Features*: Heteroaromatic rings with nitrogen atoms and a carboxylic acid group, providing multiple coordination sites.

  - *Underlying Physical-Chemical Properties*: Nitrogen atoms in heteroaromatic systems act as Lewis bases, coordinating to metal centers and enhancing catalyst-ligand interactions. The aromatic system can delocalize electron density, stabilizing the metal complex.

  - *Examples*:
    - **Pyridine-3-carboxylic acid** (Nicotinic acid)
    - **1H-pyrazole-4-carboxylic acid**
    - **2-oxo-1H-pyridine-4-carboxylic acid** (4-Pyridone-2-carboxylic acid)
    - **4-pyridin-4-ylbutanoic acid**

---

- **Rule 3**: Modifiers that are **aromatic carboxylic acids with strong electron-withdrawing substituents**, such as **nitro (-NO₂)** or **halogens (e.g., bromo, chloro)**, tend to result in **high yield**.

  - *Chemical Features*: Aromatic rings bearing a carboxylic acid group and electron-withdrawing substituents that increase the acidity of the carboxyl group.

  - *Underlying Physical-Chemical Properties*: Electron-withdrawing groups enhance the acidity of the carboxylic acid, increasing its ability to coordinate with metal ions. This strengthens metal-ligand interactions and promotes catalytic efficiency.

  - *Examples*:
    - **4-nitrobenzoic acid**
    - **4-(bromomethyl)benzoic acid**

---

- **Rule 4**: Modifiers that are **short-chain aliphatic carboxylic acids (up to 6 carbons) with additional coordinating groups**, such as **thiol (-SH)** or **hydroxyl (-OH)** groups, tend to result in **high yield**.

  - *Chemical Features*: Short aliphatic chains with a carboxylic acid group and other functional groups capable of coordinating with metal centers.

  - *Underlying Physical-Chemical Properties*: Additional coordinating groups provide multiple binding sites, enhancing chelation. Short chains reduce steric hindrance, allowing effective interaction with the metal center.

  - *Examples*:
    - **3-sulfanylpropanoic acid** (3-Mercaptopropionic acid)
    - **5-(4-hydroxyphenyl)pentanoic acid**

---

- **Rule 5**: Modifiers that are **amino acids with aromatic side chains containing additional nitrogen heterocycles**, such as **tryptophan derivatives**, tend to result in **high yield**.

  - *Chemical Features*: Amino acids with side chains that include additional nitrogen-containing heterocycles capable of coordinating to metal centers.

  - *Underlying Physical-Chemical Properties*: The indole ring in tryptophan can participate in π-interactions and coordinate with metal centers, enhancing catalyst performance.

  - *Example*:
    - **(2R)-2-amino-3-(1H-indol-3-yl)propanoic acid** (Tryptophan)

---

- **Rule 6**: Modifiers that are **aromatic carboxylic acids with electron-donating substituents**, such as **hydroxyl (-OH)** or **methoxy (-OCH₃)** groups, especially when positioned ortho or para to the carboxyl group, tend to result in **low yield**.

  - *Chemical Features*: Aromatic rings with a carboxylic acid group and electron-donating substituents that decrease the acidity of the carboxyl group.

  - *Underlying Physical-Chemical Properties*: Electron-donating groups reduce the acidity and electron-withdrawing character of the carboxylic acid, weakening its ability to coordinate with metal ions. Steric effects from substituents may also hinder coordination.

  - *Examples*:
    - **3-(4-hydroxyphenyl)propanoic acid**
    - **2-[(4-hydroxybenzoyl)amino]acetic acid**
    - **4-hydroxybenzoic acid**

---

- **Rule 7**: Modifiers that are **long-chain aliphatic carboxylic acids (7 or more carbons) without additional coordinating groups**, tend to result in **low yield**.

  - *Chemical Features*: Straight-chain aliphatic carboxylic acids lacking other polar or coordinating groups.

  - *Underlying Physical-Chemical Properties*: Long hydrophobic chains increase steric hindrance and reduce solubility in the reaction medium, hindering effective interaction with the catalyst.

  - *Examples*:
    - **Octanoic acid**
    - **7-aminoheptanoic acid**
    - **8-aminooctanoic acid**
    - **7-hydroxyheptanoic acid**

---

- **Rule 8**: Modifiers containing **aldehyde (-CHO) or ketone (>C=O) groups adjacent to the carboxylic acid**, such as **formylbenzoic acids** and **β-keto acids**, tend to result in **low yield**.

  - *Chemical Features*: Carboxylic acids with carbonyl groups that can participate in side reactions or coordinate differently with metal centers.

  - *Underlying Physical-Chemical Properties*: Aldehyde and ketone groups may form stable complexes with the metal catalyst or undergo side reactions, reducing catalyst availability and efficiency.

  - *Examples*:
    - **4-formylbenzoic acid**
    - **5-formyl-2-hydroxybenzoic acid**
    - **4-oxoheptanedioic acid**

---

- **Rule 9**: Modifiers that contain **polyether chains** or **multiple ether linkages**, such as **polyethylene glycol (PEG) derivatives**, tend to result in **low yield**.

  - *Chemical Features*: Carboxylic acids incorporating ether bonds or polyether segments in their structure.

  - *Underlying Physical-Chemical Properties*: The ether oxygen atoms may compete with the carboxylate for metal coordination or increase the flexibility and solvation of the molecule, hindering effective interaction with the catalyst.

  - *Examples*:
    - **2-[2-(2-methoxyethoxy)ethoxy]acetic acid**
    - **3-[2-(2-aminoethoxy)ethoxy]propanoic acid**

---

- **Rule 10**: Modifiers that are **heavily fluorinated aliphatic carboxylic acids**, especially those with multiple **fluorine atoms**, tend to result in **low yield**.

  - *Chemical Features*: Aliphatic carboxylic acids with extensive fluorination along the carbon chain.

  - *Underlying Physical-Chemical Properties*: Fluorine's strong electron-withdrawing effect increases the acidity of the carboxylic acid but also enhances hydrophobicity and may disrupt interactions with the catalyst. Fluorinated chains can also decrease solubility in the reaction medium.

  - *Example*:
    - **2,2,3,3,4,4,5,5,5-nonafluoropentanoic acid**

---

- **Rule 11**: Modifiers that are **amino acids with acylated amino groups**, such as **N-acetylated amino acids**, tend to result in **low yield**.

  - *Chemical Features*: Amino acids where the amino group is blocked by an acyl group, reducing the number of available coordination sites.

  - *Underlying Physical-Chemical Properties*: Acylation of the amino group prevents it from participating in metal coordination, reducing chelation and weakening interaction with the catalyst.

  - *Example*:
    - **(2S)-6-acetamido-2-aminohexanoic acid**

---

- **Rule 12**: Modifiers containing **functional groups that may cause catalyst deactivation**, such as **thiol groups on aromatic rings**, tend to result in **low yield**.

  - *Chemical Features*: Aromatic carboxylic acids with strongly coordinating groups capable of irreversibly binding to the metal center.

  - *Underlying Physical-Chemical Properties*: Strongly coordinating groups like thiols can bind tightly to metal ions, potentially poisoning the catalyst by blocking active sites needed for the reaction.

  - *Example*:
    - **4-sulfanylbenzoic acid**

---

- **Rule 13**: Modifiers that have **bulky aromatic side chains**, such as **phenyl or indole groups**, especially when attached to amino acids, tend to result in **low yield**.

  - *Chemical Features*: Amino acids with large, hydrophobic aromatic side chains that can cause steric hindrance.

  - *Underlying Physical-Chemical Properties*: Bulky side chains may interfere with proper coordination to the metal center due to steric crowding, reducing catalyst efficiency.

  - *Examples*:
    - **(2S)-2-amino-3-phenylpropanoic acid** (Phenylalanine)
    - **(2R)-2-amino-3-(1H-indol-3-yl)propanoic acid** (Tryptophan)

---

- **Rule 14**: Modifiers that are **aromatic carboxylic acids with both electron-donating and electron-withdrawing substituents**, where the electron-donating effects dominate, tend to result in **variable or low yield**.

  - *Chemical Features*: Aromatic rings with mixed substituents that may counteract each other's electronic effects, leading to unpredictable coordination behavior.

  - *Underlying Physical-Chemical Properties*: Conflicting electronic effects can make the carboxylic acid's ability to coordinate with the metal center less predictable, affecting the catalyst's performance.

  - *Example*:
    - **1,3-dioxo-2-benzofuran-5-carboxylic acid**

---

- **Rule 15**: Modifiers with **multiple functional groups that may compete for or disrupt binding**, such as **peptide-like structures or complex amino acid derivatives**, tend to result in **low yield**.

  - *Chemical Features*: Molecules with several different functional groups that could interfere with each other's ability to coordinate to the metal.

  - *Underlying Physical-Chemical Properties*: Competing coordination sites or internal interactions (e.g., hydrogen bonding) may reduce the overall availability of the modifier to effectively interact with the catalyst.

  - *Example*:
    - **2-[[(2S)-2-amino-4-methylsulfanylbutanoyl]amino]acetic acid**

---

**End of Rules**

---

These rules have been developed by analyzing the provided dataset and identifying patterns between the structural features of the molecular modifiers and the observed reaction yields. Each rule considers combinations of substructures (functional groups) and their underlying physical-chemical properties, such as coordination abilities, electronic effects, steric factors, and potential side reactions.

By applying these rules, one can predict whether a particular molecular modifier is likely to result in a high or low yield in the radical-mediated remote δ-C(sp³)–H bond functionalization reaction. This approach aids in the rational design and selection of modifiers to optimize and control the reaction outcome.

The rules prioritize coverage of the dataset and maintain a balance between simplicity and complexity. Simple rules with broader coverage help generalize predictions, while more complex rules capture specific nuances that affect the reaction yield. This comprehensive set of rules facilitates a deeper understanding of how different molecular features influence catalytic performance in this chemical transformation.---------------------------------------------------------------


    Current_Matrix:
    Matrix Generator Message:
Rule 1,Rule 2,Rule 3,Rule 4,Rule 5,Rule 6,Rule 7,Rule 8
0,0,0,0,0,0,0,0
1,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0
1,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0
0,0,0,1,0,0,0,0
0,0,0,0,0,-1,0,0
0,0,0,0,0,0,0,0
0,0,1,0,0,0,0,0
0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0
1,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0

---------------------------------------------------------------


    Train Accuracy: 0.5428571428571428; Test Accuracy: 0.0
    Train Support: 0.02857142857142857; Test Support: 0.0
    Train Confidence: 1.0; Test Confidence: 0.5
    Train Lift: 2.058823529411765; Test Lift: NONE
    Train Leverage: 0.014693877551020407; Test Leverage: NONE
    ----------------------------------------------------------------------------------

    Current Rule Code:
def rule2matrix(smiles_list):
    # Define the rules with their associated patterns and predictions
    rules = [
        {
            'number': 1,
            'description': 'High yield: Aliphatic α-amino acids with amino and carboxylic acid groups on the same carbon (α-carbon).',
            'patterns': ['[NX3H2][CX4H][CX3](=O)[OX2H1]'],  # α-amino acid pattern
            'exclude_patterns': ['[a]'],  # Exclude aromatic rings
            'prediction': 1
        },
        {
            'number': 2,
            'description': 'High yield: Heteroaromatic carboxylic acids containing nitrogen atoms in the ring.',
            'patterns': ['[nH0r5]1cccc1[CX3](=O)[OX2H1]', '[nH0r6]1ccccc1[CX3](=O)[OX2H1]'],  # Pyridine derivatives with carboxylic acid
            'prediction': 1
        },
        {
            'number': 3,
            'description': 'High yield: Aromatic carboxylic acids with electron-withdrawing substituents like nitro or halogens.',
            'patterns': ['[c][CX3](=O)[OX2H1]'],  # Aromatic carboxylic acid
            'subpatterns': ['[c][F,Cl,Br,I]', '[c][NX3](=O)[OX1]'],  # Halogen or nitro group on aromatic ring
            'prediction': 1
        },
        {
            'number': 4,
            'description': 'High yield: Short-chain aliphatic carboxylic acids (≤6 carbons) with thiol (-SH) or hydroxyl (-OH) groups.',
            'patterns': ['[CX3](=O)[OX2H1]', '[OX2H]', '[SX2H]'],  # Carboxylic acid, hydroxyl, thiol
            'exclude_patterns': ['[a]'],  # Exclude aromatic rings
            'max_carbons': 6,
            'prediction': 1
        },
        {
            'number': 5,
            'description': 'High yield: Amino acids with aromatic side chains containing additional nitrogen heterocycles.',
            'patterns': ['[NX3H2][CX4H][CX3](=O)[OX2H1]', '[#6][c]1[cH][nH][cH][cH]1'],  # α-amino acid with indole ring
            'prediction': 1
        },
        {
            'number': 6,
            'description': 'Low yield: Aromatic carboxylic acids with electron-donating substituents like hydroxyl (-OH) or methoxy (-OCH₃).',
            'patterns': ['[c][CX3](=O)[OX2H1]'],  # Aromatic carboxylic acid
            'subpatterns': ['[c][OX2H]', '[c][OX2][CH3]'],  # Hydroxyl or methoxy on aromatic ring
            'prediction': -1
        },
        {
            'number': 7,
            'description': 'Low yield: Long-chain aliphatic carboxylic acids (≥7 carbons) without additional coordinating groups.',
            'patterns': ['[CX3](=O)[OX2H1]'],  # Carboxylic acid
            'exclude_patterns': ['[OX2H]', '[NX3]'],  # Exclude hydroxyl and amine groups
            'min_carbons': 7,
            'prediction': -1
        },
        {
            'number': 8,
            'description': 'Low yield: Modifiers with aldehyde (-CHO) or ketone (>C=O) groups adjacent to the carboxylic acid.',
            'patterns': ['[CX3](=O)[CX3H1](=O)', '[CX3](=O)[CX3](=O)'],  # β-keto acids
            'prediction': -1
        },
        # Additional rules can be defined similarly...
    ]

    # Compile SMARTS patterns
    for rule in rules:
        rule['compiled_patterns'] = [Chem.MolFromSmarts(pat) for pat in rule.get('patterns', [])]
        rule['compiled_subpatterns'] = [Chem.MolFromSmarts(pat) for pat in rule.get('subpatterns', [])]
        rule['compiled_exclude_patterns'] = [Chem.MolFromSmarts(pat) for pat in rule.get('exclude_patterns', [])]

    # Initialize results list
    results = []

    # Process each SMILES string
    for smi in smiles_list:
        mol = Chem.MolFromSmiles(smi)
        if mol is None:
            # If the molecule cannot be parsed, append a row of zeros
            results.append([0]*len(rules))
            continue
        row = []
        for rule in rules:
            try:
                match = True
                # Check exclude patterns if any
                for pat in rule.get('compiled_exclude_patterns', []):
                    if mol.HasSubstructMatch(pat):
                        match = False
                        break
                if not match:
                    row.append(0)
                    continue
                # Check required patterns
                for pat in rule['compiled_patterns']:
                    if not mol.HasSubstructMatch(pat):
                        match = False
                        break
                if not match:
                    row.append(0)
                    continue
                # Check subpatterns if any (additional features)
                if 'compiled_subpatterns' in rule and rule['compiled_subpatterns']:
                    submatch = False
                    for subpat in rule['compiled_subpatterns']:
                        if mol.HasSubstructMatch(subpat):
                            submatch = True
                            break
                    if not submatch:
                        match = False
                if not match:
                    row.append(0)
                    continue
                # Check carbon count if specified
                if 'max_carbons' in rule or 'min_carbons' in rule:
                    carbons = len([atom for atom in mol.GetAtoms() if atom.GetAtomicNum() == 6])
                    if 'max_carbons' in rule and carbons > rule['max_carbons']:
                        match = False
                    if 'min_carbons' in rule and carbons < rule['min_carbons']:
                        match = False
                if match:
                    row.append(rule['prediction'])
                else:
                    row.append(0)
            except Exception:
                # In case of any error, append 0
                row.append(0)
        results.append(row)
    # Create DataFrame with results
    df = pd.DataFrame(results, columns=[f'Rule {rule['number']}' for rule in rules])
    return df
--------------------------------------------------
    Target Name: yield
    GPT Model: o1-preview-2024-09-12
    ML Model: ETC
    Current_Rules:
    **Start of Rules**

---

- **Rule 1**: Modifiers that are **α-amino acids with carboxylate side chains**, such as **aspartic acid** and **glutamic acid**, tend to result in **high yield**.

  - **Chemical Features**: Amino acids containing an additional **carboxylic acid group (-COOH)** in the side chain, providing multiple coordination sites to the metal center.

  - **Underlying Physical-Chemical Properties**: The presence of both the amino group and two carboxylate groups allows for **multidentate coordination**, forming stable chelate complexes with the metal catalyst. This enhances the catalyst's stability and reactivity, promoting higher yields.

  - **Examples**:
    - **(2S)-2-aminobutanedioic acid** (Aspartic acid)
    - **(2S)-2-aminopentanedioic acid** (Glutamic acid)

---

- **Rule 2**: Modifiers that are **aromatic carboxylic acids with electron-withdrawing substituents at the para position**, such as **nitro (-NO₂)** or **bromomethyl (-CH₂Br)** groups, tend to result in **high yield**.

  - **Chemical Features**: Aromatic rings bearing a **carboxylic acid group (-COOH)** and an **electron-withdrawing group** at the para position, which **increases the acidity** of the carboxyl group.

  - **Underlying Physical-Chemical Properties**: Electron-withdrawing substituents enhance the carboxylic acid's ability to donate electrons to the metal center, strengthening metal-ligand coordination. This improved interaction increases the catalyst's efficiency.

  - **Examples**:
    - **4-nitrobenzoic acid**
    - **4-(bromomethyl)benzoic acid**

---

- **Rule 3**: Modifiers that are **aromatic carboxylic acids with nitrogen-containing heterocycles directly connected to the ring**, such as **pyridine or pyrazole derivatives**, tend to result in **high yield**.

  - **Chemical Features**: Molecules where the **nitrogen-containing heterocycle** is either part of the aromatic ring or directly attached to it, alongside a **carboxylic acid group (-COOH)**.

  - **Underlying Physical-Chemical Properties**: Nitrogen atoms act as **additional coordination sites**, facilitating stronger binding to the metal center. The aromatic system can delocalize charge, stabilizing the metal-ligand complex and enhancing catalytic activity.

  - **Examples**:
    - **Pyridine-3-carboxylic acid** (Nicotinic acid)
    - **1H-pyrazole-4-carboxylic acid**
    - **2-oxo-1H-pyridine-4-carboxylic acid**

---

- **Rule 4**: Modifiers that are **aliphatic carboxylic acids with thiol groups (-SH) on short chains** tend to result in **high yield**, whereas those that are **aromatic carboxylic acids with thiol groups** tend to result in **low yield**.

  - **Chemical Features**:
    - **High Yield**: Short-chain aliphatic acids with a **thiol group (-SH)**, providing an additional coordination point without significant steric hindrance.
    - **Low Yield**: Aromatic acids with **thiol groups** attached directly to the aromatic ring.

  - **Underlying Physical-Chemical Properties**:
    - **High Yield**: In aliphatic acids, the thiol group can coordinate effectively with the metal without causing deactivation.
    - **Low Yield**: In aromatic acids, thiol groups may bind too strongly to the metal center, potentially **poisoning the catalyst** by blocking active sites.

  - **Examples**:
    - **High Yield**: **3-sulfanylpropanoic acid** (3-Mercaptopropionic acid)
    - **Low Yield**: **4-sulfanylbenzoic acid**

---

- **Rule 5**: Modifiers that are **long-chain aliphatic carboxylic acids without additional polar functional groups**, such as **octanoic acid**, tend to result in **high yield**.

  - **Chemical Features**: **Straight-chain aliphatic acids** with a **carboxylic acid group (-COOH)** and no other functional groups along the chain.

  - **Underlying Physical-Chemical Properties**: The lack of additional polar groups minimizes steric hindrance and undesired interactions, allowing the carboxyl group to coordinate effectively with the metal center. The hydrophobic chain may also aid in catalyst solubility in organic solvents.

  - **Example**:
    - **Octanoic acid**

---

- **Rule 6**: Modifiers that are **long-chain aliphatic carboxylic acids (7 carbons or more) with additional polar functional groups**, such as **hydroxyl (-OH)** or **amino (-NH₂)** groups, tend to result in **low yield**.

  - **Chemical Features**: Long aliphatic chains bearing **polar functional groups** in addition to the **carboxylic acid group (-COOH)**.

  - **Underlying Physical-Chemical Properties**: The presence of polar groups on long chains can cause **steric hindrance** and unfavorable **intramolecular interactions**, hindering the coordination between the carboxyl group and the metal center. It may also affect solubility and catalyst distribution.

  - **Examples**:
    - **7-hydroxyheptanoic acid**
    - **7-aminoheptanoic acid**
    - **8-aminooctanoic acid**

---

- **Rule 7**: Modifiers that contain **aldehyde (-CHO) or ketone (>C=O) groups adjacent to the carboxylic acid**, tend to result in **low yield**.

  - **Chemical Features**: Carboxylic acids with **carbonyl groups** (aldehyde or ketone) near the **carboxyl group (-COOH)**.

  - **Underlying Physical-Chemical Properties**: Carbonyl groups adjacent to the carboxyl group can participate in **side reactions** or form **stable chelate rings** with the metal center that alter the catalyst's activity, thereby decreasing the yield.

  - **Examples**:
    - **4-formylbenzoic acid**
    - **5-formyl-2-hydroxybenzoic acid**
    - **4-oxoheptanedioic acid**

---

- **Rule 8**: Modifiers that are **α-amino acids with aromatic side chains containing nitrogen**, such as **tryptophan**, tend to result in **high yield**, whereas those with **aromatic side chains lacking nitrogen**, such as **phenylalanine**, tend to result in **low yield**.

  - **Chemical Features**:
    - **High Yield**: Amino acids with **nitrogenous aromatic side chains** (e.g., indole ring in tryptophan).
    - **Low Yield**: Amino acids with **non-nitrogenous aromatic side chains** (e.g., benzene ring in phenylalanine).

  - **Underlying Physical-Chemical Properties**:
    - **High Yield**: Nitrogen in the side chain can provide an extra **coordination site**, enhancing metal binding.
    - **Low Yield**: Lack of additional coordination sites results in less effective metal-ligand interactions.

  - **Examples**:
    - **High Yield**: **(2R)-2-amino-3-(1H-indol-3-yl)propanoic acid** (Tryptophan)
    - **Low Yield**: **(2S)-2-amino-3-phenylpropanoic acid** (Phenylalanine)

---

- **Rule 9**: Modifiers that are **aromatic carboxylic acids with electron-donating substituents**, such as **hydroxyl (-OH)** or **methoxy (-OCH₃)** groups, tend to result in **low yield**.

  - **Chemical Features**: Aromatic rings with a **carboxylic acid group (-COOH)** and **electron-donating groups** that decrease the acidity of the carboxyl group.

  - **Underlying Physical-Chemical Properties**: Electron-donating substituents reduce the ability of the carboxyl group to coordinate with the metal center, weakening the metal-ligand interaction and decreasing catalytic efficiency.

  - **Examples**:
    - **3-(4-hydroxyphenyl)propanoic acid**
    - **4-methylbenzoic acid**

---

- **Rule 10**: Modifiers containing **polyether chains** or **multiple ether linkages** tend to result in **low yield**.

  - **Chemical Features**: Carboxylic acids with **ether bonds (-O-)** in their structure, creating **flexible polyether chains**.

  - **Underlying Physical-Chemical Properties**: The ether oxygen atoms may interfere with the coordination between the carboxyl group and the metal center. The increased flexibility and solvation can reduce effective interactions with the catalyst.

  - **Examples**:
    - **2-[2-(2-methoxyethoxy)ethoxy]acetic acid**
    - **3-[2-(2-aminoethoxy)ethoxy]propanoic acid**

---

- **Rule 11**: Modifiers that are **N-acetylated amino acids** or have **blocked amino groups** tend to result in **low yield**.

  - **Chemical Features**: Amino acids where the **amino group is acylated or modified**, such as forming an **amide bond**, reducing the number of available coordination sites.

  - **Underlying Physical-Chemical Properties**: Blocking the amino group prevents it from coordinating with the metal center, diminishing chelation and weakening the metal-ligand interaction necessary for effective catalysis.

  - **Examples**:
    - **(2S)-6-acetamido-2-aminohexanoic acid**
    - **2-[[(2S)-2-amino-4-methylsulfanylbutanoyl]amino]acetic acid**

---

- **Rule 12**: Modifiers that are **heavily fluorinated aliphatic carboxylic acids**, especially those with multiple **fluorine atoms**, tend to result in **low yield**.

  - **Chemical Features**: Aliphatic carboxylic acids with a high degree of **fluorination** along the carbon chain.

  - **Underlying Physical-Chemical Properties**: Fluorine's strong electron-withdrawing effect increases the acidity of the carboxylic acid but can also enhance hydrophobicity and decrease solubility in the reaction medium. The altered electronic properties may disrupt effective coordination with the metal catalyst.

  - **Example**:
    - **2,2,3,3,4,4,5,5,5-nonafluoropentanoic acid**

---

- **Rule 13**: Modifiers with **complex peptide-like structures** or **multiple amide bonds** tend to result in **low yield** due to competing interactions.

  - **Chemical Features**: Molecules that resemble peptides, containing **multiple amide linkages** and potentially **multiple functional groups**.

  - **Underlying Physical-Chemical Properties**: Complex structures may lead to **intramolecular hydrogen bonding** or **conformational constraints** that reduce the availability of coordination sites. Multiple functional groups might compete for metal binding, disrupting effective catalyst-modifier interactions.

  - **Example**:
    - **2-[[(2S)-2-amino-4-methylsulfanylbutanoyl]amino]acetic acid**

---

**End of Rules**

---

These rules have been developed by closely analyzing the provided dataset and identifying patterns between the structural features of the molecular modifiers and the observed reaction yields. Each rule combines multiple substructures (functional groups) and considers their underlying physical-chemical properties, such as coordination abilities, electronic effects, steric factors, and potential side reactions.

By applying these rules, one can predict whether a particular molecular modifier is likely to result in a **high** or **low yield** in the radical-mediated remote δ-C(sp³)–H bond functionalization reaction. This approach aids in the rational design and selection of modifiers to optimize and control the reaction outcome.

The rules prioritize coverage of the dataset and maintain a balance between simplicity and complexity. Simple rules with broader coverage help generalize predictions, while more complex rules capture specific nuances that affect the reaction yield. This comprehensive set of rules facilitates a deeper understanding of how different molecular features influence catalytic performance in this chemical transformation.

------------------------------------------------------------------


    Current_Matrix:
    Matrix Generator Message:
Rule 1,Rule 2,Rule 3,Rule 4,Rule 4.1,Rule 5,Rule 6,Rule 7,Rule 8,Rule 8.1,Rule 9,Rule 10,Rule 11,Rule 12,Rule 13
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0
0,1,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0
0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,1,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,-1,0,0,0,0,0,-1,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0
0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0
0,0,0,0,0,0,-1,0,0,0,0,0,-1,0,0
0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0

---------------------------------------------------------------


    Train Accuracy: 0.5714285714285714; Test Accuracy: 1.0
    Train Support: 0.08571428571428572; Test Support: 0.0
    Train Confidence: 1.0; Test Confidence: 0.5
    Train Lift: 1.9444444444444446; Test Lift: NONE
    Train Leverage: 0.041632653061224496; Test Leverage: NONE
    ----------------------------------------------------------------------------------

    Current Rule Code:
def rule2matrix(smiles_list):
    # Define the rules
    rules = [
        {
            'number': 1,
            'description': 'Modifiers that are α-amino acids with carboxylate side chains (e.g., aspartic acid, glutamic acid). High yield.',
            'patterns': [
                '[N;X3;H2][C;X4]([C;X4](=O)[O;H1])[C;X4][C;X4](=O)[O;H1]',
            ],
            'prediction': 1,
            'match_type': 'all'
        },
        {
            'number': 2,
            'description': 'Aromatic carboxylic acids with electron-withdrawing substituents at the para position (e.g., nitro or bromomethyl). High yield.',
            'patterns': [
                'c1cc([NX3+](=O)[O-])ccc1C(=O)[O;H1]',
                'c1cc(CBr)ccc1C(=O)[O;H1]',
            ],
            'prediction': 1,
            'match_type': 'any'
        },
        {
            'number': 3,
            'description': 'Aromatic carboxylic acids with nitrogen-containing heterocycles directly connected to the ring. High yield.',
            'patterns': [
                'n1cccc1C(=O)[O;H1]',  # Pyridine carboxylic acid
                'n1nccc1C(=O)[O;H1]',  # Pyrazole carboxylic acid
            ],
            'prediction': 1,
            'match_type': 'any'
        },
        {
            'number': 4,
            'description': 'High yield aliphatic carboxylic acids with thiol groups on short chains (e.g., 3-mercaptopropionic acid).',
            'patterns': [
                'C(=O)[O;H1][C;X4][C;X4][S;X2H]',  # Aliphatic acid with thiol group
            ],
            'prediction': 1,
            'match_type': 'all'
        },
        {
            'number': 4.1,
            'description': 'Low yield aromatic carboxylic acids with thiol groups (e.g., 4-mercaptobenzoic acid).',
            'patterns': [
                'c1cc(S[H])ccc1C(=O)[O;H1]',  # Aromatic acid with thiol group
            ],
            'prediction': -1,
            'match_type': 'all'
        },
        {
            'number': 5,
            'description': 'Long-chain aliphatic carboxylic acids without additional polar functional groups (7C+). High yield.',
            'patterns': [
                'C(=O)[O;H1][C;X4]{7,}',  # Carboxylic acid with 7 or more carbons
            ],
            'exclude_patterns': [
                '[C][OH]',  # Exclude molecules with hydroxyl groups
                '[C][NH2]',  # Exclude molecules with amino groups
                '[C]=[O]',  # Exclude molecules with carbonyl groups along chain
            ],
            'prediction': 1,
            'match_type': 'all'
        },
        {
            'number': 6,
            'description': 'Long-chain aliphatic carboxylic acids (7C+) with additional polar functional groups (hydroxyl or amino). Low yield.',
            'patterns': [
                'C(=O)[O;H1][C;X4]{7,}',  # Carboxylic acid with 7 or more carbons
            ],
            'additional_patterns': [
                '[C][OH]',  # Hydroxyl group
                '[C][NH2]',  # Amino group
            ],
            'prediction': -1,
            'match_type': 'all'
        },
        {
            'number': 7,
            'description': 'Modifiers containing aldehyde or ketone groups adjacent to the carboxylic acid. Low yield.',
            'patterns': [
                '[CX3](=O)[CX3](=O)[O;H1]',  # Ketone adjacent to carboxylic acid
                '[CX3H1](=O)[C;X4](=O)[O;H1]',  # Aldehyde adjacent to carboxylic acid
            ],
            'prediction': -1,
            'match_type': 'any'
        },
        {
            'number': 8,
            'description': 'α-Amino acids with nitrogen-containing aromatic side chains (e.g., tryptophan). High yield.',
            'patterns': [
                '[N;X3;H2][C;X4][C;X4](=O)[O;H1]',  # α-Amino acid backbone
                '[C;X4][c][n]',  # Side chain with nitrogen-containing aromatic ring
            ],
            'prediction': 1,
            'match_type': 'all'
        },
        {
            'number': 8.1,
            'description': 'α-Amino acids with aromatic side chains lacking nitrogen (e.g., phenylalanine). Low yield.',
            'patterns': [
                '[N;X3;H2][C;X4][C;X4](=O)[O;H1]',  # α-Amino acid backbone
                '[C;X4][c]1ccccc1',  # Side chain with benzene ring
            ],
            'prediction': -1,
            'match_type': 'all'
        },
        {
            'number': 9,
            'description': 'Aromatic carboxylic acids with electron-donating substituents (e.g., hydroxyl or methoxy). Low yield.',
            'patterns': [
                'c1cc([OX2H])ccc1C(=O)[O;H1]',  # Hydroxyl group on aromatic ring
                'c1cc([OX2][CH3])ccc1C(=O)[O;H1]',  # Methoxy group on aromatic ring
            ],
            'prediction': -1,
            'match_type': 'any'
        },
        {
            'number': 10,
            'description': 'Modifiers containing polyether chains or multiple ether linkages. Low yield.',
            'patterns': [
                '[OX2][CX4][CX4][OX2][CX4][CX4][OX2]',  # Polyether chain
            ],
            'prediction': -1,
            'match_type': 'all'
        },
        {
            'number': 11,
            'description': 'Modifiers that are N-acetylated amino acids or have blocked amino groups. Low yield.',
            'patterns': [
                '[N;X3][C;X3](=O)[C;X4]',  # N-acetylated amino group
            ],
            'prediction': -1,
            'match_type': 'all'
        },
        {
            'number': 12,
            'description': 'Modifiers that are heavily fluorinated aliphatic carboxylic acids. Low yield.',
            'patterns': [
                'C(=O)[O;H1][C;X4]([F])([F])[F]',  # Trifluoromethyl group
            ],
            'prediction': -1,
            'match_type': 'all'
        },
        {
            'number': 13,
            'description': 'Modifiers with complex peptide-like structures or multiple amide bonds. Low yield.',
            'patterns': [
                '[C;X3](=O)[N;X3][C;X3](=O)[N;X3]',  # Multiple amide bonds
            ],
            'prediction': -1,
            'match_type': 'all'
        },
    ]

    # Compile SMARTS patterns
    for rule in rules:
        compiled_patterns = []
        for smarts in rule.get('patterns', []):
            try:
                mol = Chem.MolFromSmarts(smarts)
                if mol is not None:
                    compiled_patterns.append(mol)
            except:
                compiled_patterns.append(None)
        rule['compiled_patterns'] = compiled_patterns

        # Compile additional patterns if any (used in Rule 6)
        if 'additional_patterns' in rule:
            compiled_additional = []
            for smarts in rule['additional_patterns']:
                try:
                    mol = Chem.MolFromSmarts(smarts)
                    if mol is not None:
                        compiled_additional.append(mol)
                except:
                    compiled_additional.append(None)
            rule['compiled_additional'] = compiled_additional
        else:
            rule['compiled_additional'] = []

        # Compile exclude patterns if any
        if 'exclude_patterns' in rule:
            compiled_exclude = []
            for smarts in rule['exclude_patterns']:
                try:
                    mol = Chem.MolFromSmarts(smarts)
                    if mol is not None:
                        compiled_exclude.append(mol)
                except:
                    compiled_exclude.append(None)
            rule['compiled_exclude'] = compiled_exclude
        else:
            rule['compiled_exclude'] = []

    # Initialize the result matrix
    result_matrix = []

    # Process each SMILES string
    for smi in smiles_list:
        mol = Chem.MolFromSmiles(smi)
        if mol is None:
            # If the molecule cannot be parsed, append a row of zeros
            result_matrix.append([0]*len(rules))
            continue
        row = []
        for rule in rules:
            try:
                match = True
                # Check exclude patterns
                for patt in rule['compiled_exclude']:
                    if patt is not None and mol.HasSubstructMatch(patt):
                        match = False
                        break
                if not match:
                    row.append(0)
                    continue
                if rule['match_type'] == 'all':
                    # All patterns must match
                    for patt in rule['compiled_patterns']:
                        if patt is None or not mol.HasSubstructMatch(patt):
                            match = False
                            break
                    # For additional patterns (used in Rule 6)
                    if 'compiled_additional' in rule and rule['compiled_additional']:
                        for patt in rule['compiled_additional']:
                            if patt is None or not mol.HasSubstructMatch(patt):
                                match = False
                                break
                    if match:
                        row.append(rule['prediction'])
                    else:
                        row.append(0)
                elif rule['match_type'] == 'any':
                    # At least one pattern must match
                    pattern_matched = False
                    for patt in rule['compiled_patterns']:
                        if patt is not None and mol.HasSubstructMatch(patt):
                            pattern_matched = True
                            break
                    if pattern_matched:
                        row.append(rule['prediction'])
                    else:
                        row.append(0)
                else:
                    # Default to no match
                    row.append(0)
            except Exception:
                # In case of any error, append 0
                row.append(0)
        result_matrix.append(row)

    # Create DataFrame with results
    df = pd.DataFrame(result_matrix, columns=[f'Rule {rule['number']}' for rule in rules])
    return df

--------------------------------------------------
    Target Name: yield
    GPT Model: o1-preview-2024-09-12
    ML Model: ETC
    Current_Rules:
    **Start of Rules**

---

- **Rule 1**: Modifiers that are **α-amino acids with additional carboxylate groups in their side chains**, such as **aspartic acid** and **glutamic acid**, tend to result in **high yield**.

  - **Chemical Features**: Amino acids containing an **amino group (-NH₂)** and two **carboxylic acid groups (-COOH)**—one on the α-carbon and one on the side chain.

  - **Underlying Physical-Chemical Properties**: The presence of multiple carboxylate groups allows for **multidentate coordination** with the metal center, enhancing catalyst stabilization and activity, leading to higher yields.

  - **Examples**:
    - **(2S)-2-aminobutanedioic acid** (Aspartic acid)
    - **(2S)-2-aminopentanedioic acid** (Glutamic acid)

---

- **Rule 2**: Modifiers that are **aromatic carboxylic acids with an amino group (-NH₂) at the para position**, such as **4-aminobenzoic acid**, tend to result in **high yield**.

  - **Chemical Features**: A benzene ring with a **carboxylic acid group (-COOH)** and an **amino group (-NH₂)** directly opposite (para) to it.

  - **Underlying Physical-Chemical Properties**: The amino group can act as an additional **coordination site**, enhancing metal-ligand interactions and stabilizing the catalyst.

  - **Example**:
    - **4-aminobenzoic acid**

---

- **Rule 3**: Modifiers that are **aromatic carboxylic acids with electron-withdrawing groups at the para position**, such as **nitro (-NO₂)** or **bromomethyl (-CH₂Br)** groups, tend to result in **high yield**.

  - **Chemical Features**: Aromatic rings bearing a **carboxylic acid group (-COOH)** and an **electron-withdrawing group** at the para position.

  - **Underlying Physical-Chemical Properties**: Electron-withdrawing substituents increase the **acidity** of the carboxyl group, enhancing its ability to coordinate with the metal center, thereby improving catalytic efficiency.

  - **Examples**:
    - **4-nitrobenzoic acid**
    - **4-(bromomethyl)benzoic acid**

---

- **Rule 4**: Modifiers that are **aromatic carboxylic acids with electron-donating groups at the para position**, such as **methyl (-CH₃)** or **hydroxy (-OH)** groups, tend to result in **low yield**.

  - **Chemical Features**: Aromatic rings with a **carboxylic acid group (-COOH)** and an **electron-donating group** at the para position.

  - **Underlying Physical-Chemical Properties**: Electron-donating substituents decrease the **acidity** of the carboxyl group, weakening its ability to coordinate with the metal center, which reduces catalyst effectiveness.

  - **Examples**:
    - **4-methylbenzoic acid**
    - **3-(4-hydroxyphenyl)propanoic acid**

---

- **Rule 5**: Modifiers that are **nitrogen-containing heteroaromatic carboxylic acids**, such as **pyridinecarboxylic acids** and **pyrazolecarboxylic acids**, tend to result in **high yield**.

  - **Chemical Features**: Heteroaromatic rings with one or more **nitrogen atoms** and a **carboxylic acid group (-COOH)**.

  - **Underlying Physical-Chemical Properties**: Nitrogen atoms provide additional **coordination sites** for metal binding, enhancing metal-ligand interactions and stabilizing the catalyst's active form.

  - **Examples**:
    - **Pyridine-3-carboxylic acid** (Nicotinic acid)
    - **1H-pyrazole-4-carboxylic acid**
    - **4-pyridin-4-ylbenzoic acid**

---

- **Rule 6**: Modifiers with **thiol groups (-SH) on aliphatic chains** tend to result in **high yield**, while those with **thiol groups directly attached to aromatic rings** tend to result in **low yield**.

  - **Chemical Features**:
    - **High Yield**: Aliphatic carboxylic acids with a **thiol group (-SH)** on the side chain.
    - **Low Yield**: Aromatic carboxylic acids with a **thiol group (-SH)** attached directly to the aromatic ring.

  - **Underlying Physical-Chemical Properties**:
    - **High Yield**: Thiol groups on aliphatic chains can coordinate effectively with the metal without causing catalyst poisoning.
    - **Low Yield**: Thiol groups on aromatic rings may bind too strongly to the metal center, **blocking active sites** and reducing catalytic activity.

  - **Examples**:
    - **High Yield**: **3-sulfanylpropanoic acid**
    - **Low Yield**: **4-sulfanylbenzoic acid**

---

- **Rule 7**: Modifiers that are **long-chain aliphatic carboxylic acids without additional functional groups**, such as **octanoic acid**, tend to result in **high yield**.

  - **Chemical Features**: Straight-chain aliphatic acids containing only a **carboxylic acid group (-COOH)**.

  - **Underlying Physical-Chemical Properties**: The absence of additional functional groups reduces **steric hindrance** and avoids competing interactions, allowing the carboxyl group to coordinate effectively with the metal center.

  - **Example**:
    - **Octanoic acid**

---

- **Rule 8**: Modifiers that are **long-chain aliphatic carboxylic acids with additional polar functional groups**, such as **hydroxyl (-OH)** or **amino (-NH₂)** groups, tend to result in **low yield**.

  - **Chemical Features**: Aliphatic chains of seven carbons or more with **polar functional groups** besides the **carboxylic acid group (-COOH)**.

  - **Underlying Physical-Chemical Properties**: Additional polar groups can cause **steric hindrance** and **unfavorable intramolecular interactions**, hindering effective coordination between the carboxyl group and the metal center.

  - **Examples**:
    - **7-hydroxyheptanoic acid**
    - **7-aminoheptanoic acid**
    - **8-aminooctanoic acid**

---

- **Rule 9**: Modifiers containing **aldehyde (-CHO)** or **ketone (>C=O)** groups adjacent to the carboxylic acid tend to result in **low yield**.

  - **Chemical Features**: Carboxylic acids with **carbonyl groups** (aldehyde or ketone) near the **carboxyl group (-COOH)**.

  - **Underlying Physical-Chemical Properties**: Proximity of additional carbonyl groups may lead to **unwanted side reactions** or formation of **stable chelate rings** with the metal center, altering the catalyst's activity and decreasing the yield.

  - **Examples**:
    - **4-formylbenzoic acid**
    - **5-formyl-2-hydroxybenzoic acid**
    - **4-oxoheptanedioic acid**

---

- **Rule 10**: Modifiers with **multiple ether linkages (-O-)** or **polyether chains** tend to result in **low yield**.

  - **Chemical Features**: Carboxylic acids with **ether bonds** in their structure, creating flexible, **polar polyether chains**.

  - **Underlying Physical-Chemical Properties**: Ether oxygen atoms may interfere with coordination between the carboxyl group and the metal center. Increased flexibility and polarity can reduce effective interactions with the catalyst.

  - **Examples**:
    - **2-[2-(2-methoxyethoxy)ethoxy]acetic acid**
    - **3-[2-(2-aminoethoxy)ethoxy]propanoic acid**

---

- **Rule 11**: Modifiers that are **α-amino acids with nitrogen-containing aromatic side chains**, such as **tryptophan**, tend to result in **high yield**, whereas those with **non-nitrogenous aromatic side chains**, such as **phenylalanine**, tend to result in **low yield**.

  - **Chemical Features**:
    - **High Yield**: Amino acids with side chains containing **nitrogenous aromatic rings** (e.g., indole ring).
    - **Low Yield**: Amino acids with side chains containing **non-nitrogenous aromatic rings** (e.g., benzene ring).

  - **Underlying Physical-Chemical Properties**:
    - **High Yield**: Nitrogen atoms in the side chain provide additional **coordination sites**, enhancing metal binding and catalyst activity.
    - **Low Yield**: Lack of extra coordination sites results in weaker metal-ligand interactions.

  - **Examples**:
    - **High Yield**: **(2R)-2-amino-3-(1H-indol-3-yl)propanoic acid** (Tryptophan)
    - **Low Yield**: **(2S)-2-amino-3-phenylpropanoic acid** (Phenylalanine)

---

- **Rule 12**: Modifiers with **N-acetylated amino groups** or **blocked amino groups** tend to result in **low yield**.

  - **Chemical Features**: Amino acids where the **amino group is acylated or modified**, forming an **amide bond**.

  - **Underlying Physical-Chemical Properties**: Blocking the amino group reduces the number of available **coordination sites**, weakening the metal-ligand interaction necessary for effective catalysis.

  - **Example**:
    - **(2S)-6-acetamido-2-aminohexanoic acid**

---

- **Rule 13**: Modifiers that are **heavily fluorinated aliphatic carboxylic acids**, particularly those with multiple **fluorine atoms**, tend to result in **low yield**.

  - **Chemical Features**: Aliphatic carboxylic acids with a high degree of **fluorination** along the carbon chain.

  - **Underlying Physical-Chemical Properties**: The strong electron-withdrawing effect of fluorine increases the acidity of the carboxylic acid but may also enhance **hydrophobicity** and decrease **solubility** in the reaction medium. Altered electronic properties can disrupt effective coordination with the metal catalyst.

  - **Example**:
    - **2,2,3,3,4,4,5,5,5-nonafluoropentanoic acid**

---

- **Rule 14**: Modifiers with **multiple hydroxyl groups (-OH) on aliphatic chains** tend to result in **high yield** due to enhanced coordination.

  - **Chemical Features**: Aliphatic acids containing several **hydroxyl groups** in addition to the **carboxylic acid group (-COOH)**.

  - **Underlying Physical-Chemical Properties**: Multiple hydroxyl groups offer additional **hydrogen bonding** and potential **coordination sites**, improving metal-ligand interactions and stabilizing the catalyst.

  - **Example**:
    - **(2R,3S,4R,5R)-2,3,4,5,6-pentahydroxyhexanoic acid**

---

- **Rule 15**: Modifiers with **amide linkages** or **peptide-like structures** tend to result in **low yield** due to competing interactions and reduced coordination.

  - **Chemical Features**: Compounds containing **amide bonds** or resembling **peptides**, with **multiple functional groups**.

  - **Underlying Physical-Chemical Properties**: **Intramolecular hydrogen bonding** and **conformational constraints** from amide linkages may reduce the availability of coordination sites. Multiple functional groups might compete for metal binding, disrupting effective catalyst-modifier interactions.

  - **Example**:
    - **2-[[(2S)-2-amino-4-methylsulfanylbutanoyl]amino]acetic acid**

---

**End of Rules**

---

These rules have been developed by analyzing the provided dataset and identifying patterns between the structural features of the molecular modifiers and the observed reaction yields. Each rule combines multiple functional groups and considers their underlying physical-chemical properties, such as coordination abilities, electronic effects, steric factors, and potential side reactions.

By applying these rules, one can predict whether a particular molecular modifier is likely to result in a **high** or **low yield** in the radical-mediated remote δ-C(sp³)–H bond functionalization reaction. This approach aids in the rational design and selection of modifiers to optimize and control the reaction outcome.

The rules prioritize coverage of the dataset and maintain a balance between simplicity and complexity. Simple rules with broader coverage help generalize predictions, while more complex rules capture specific nuances that affect the reaction yield. This comprehensive set of rules facilitates a deeper understanding of how different molecular features influence catalytic performance in this chemical transformation.---------------------------------------------------------------


    Current_Matrix:
    Matrix Generator Message:
Rule 1,Rule 2,Rule 3,Rule 4,Rule 5,Rule 6,Rule 7,Rule 8,Rule 9,Rule 10,Rule 11,Rule 12,Rule 13,Rule 14,Rule 15
0,0,0,0,0,0,0,0,0,0,0,0,0,1,0
0,0,0,0,0,0,0,0,0,0,0,0,0,1,0
0,0,0,0,0,0,0,0,0,0,0,0,0,1,0
0,0,0,0,0,0,0,0,0,0,0,0,0,1,0
0,0,0,0,0,0,0,0,0,0,0,0,0,1,0
0,1,0,0,0,0,0,0,0,0,0,0,0,1,0
0,0,0,0,0,0,0,-1,0,0,0,0,0,1,0
0,0,0,0,0,0,0,0,0,0,0,0,0,1,0
0,0,0,0,1,0,0,0,0,0,0,0,0,1,0
0,0,0,0,0,0,0,0,0,0,0,0,0,1,0
0,0,0,0,0,0,0,0,0,0,0,0,0,1,0
0,0,0,0,0,0,0,0,0,-1,0,0,0,1,0
0,0,0,0,1,0,0,0,0,0,0,0,0,1,0
0,0,0,0,0,0,0,0,0,0,0,0,0,1,0
0,0,0,0,0,0,0,0,0,0,0,0,-1,1,0
0,0,0,0,1,0,0,0,0,0,1,0,0,1,0
0,0,0,0,0,0,0,0,0,0,0,0,0,1,0
0,0,0,0,0,0,0,0,0,-1,0,0,0,1,0
0,0,0,0,0,1,0,0,0,0,0,0,0,1,0
0,0,0,0,0,0,0,0,-1,0,0,0,0,1,0
0,0,0,0,0,0,0,0,-1,0,0,0,0,1,0
0,1,1,0,0,0,0,0,0,0,0,0,0,1,0
0,0,0,0,1,0,0,0,0,0,0,0,0,1,0
0,0,0,-1,0,0,0,0,0,0,0,0,0,1,0
0,0,0,0,0,0,0,0,0,0,0,-1,0,1,-1
0,0,0,0,1,0,0,0,0,0,0,0,0,1,0
0,0,0,-1,0,0,0,0,-1,-1,0,0,0,1,0
0,0,0,0,0,0,0,0,0,0,0,-1,0,1,-1
0,0,0,0,0,0,0,-1,-1,0,0,0,0,1,0
0,0,0,0,0,0,0,0,0,0,0,-1,-1,1,-1
0,0,0,0,0,0,0,-1,0,0,0,0,0,1,0
0,0,0,0,0,0,0,0,0,0,0,0,0,1,0
0,0,0,0,0,0,0,-1,0,0,0,0,0,1,0
0,0,0,0,0,0,0,0,0,-1,0,0,0,1,0
0,0,0,0,0,0,0,0,0,0,0,-1,0,1,-1
0,0,0,0,0,0,0,-1,0,0,0,0,0,1,0

---------------------------------------------------------------


    Train Accuracy: 0.8285714285714286; Test Accuracy: 1.0
    Train Support: 0.08163265306122448; Test Support: 0.0
    Train Confidence: 0.7928571428571428; Test Confidence: 0.5
    Train Lift: 1.5416666666666667; Test Lift: NONE
    Train Leverage: 0.029154518950437323; Test Leverage: NONE
    ----------------------------------------------------------------------------------

    Current Rule Code:
def rule2matrix(smiles_list):
    # Define SMARTS patterns for common functional groups
    carboxylic_acid = '[CX3](=O)[OX1H0-,OX2H1]'
    amino_group = '[NX3][CX4]'
    aromatic_ring = '[a]'
    thiol_group = '[SX2H]'
    ether_linkage = '[#6][OX2][#6]'
    hydroxyl_group = '[OX2H]'
    halogens = '[F,Cl,Br,I]'
    nitro_group = '[NX3](=O)[OX1-]'
    carbonyl_group = '[CX3]=[OX1]'
    aldehyde_group = '[CX3H1](=O)'
    ketone_group = '[#6][CX3](=O)[#6]'
    fluorine_atoms = '[F]'
    amide_group = '[NX3][CX3](=O)[#6]'
    aromatic_amino_group = '[c][NX3H2]'
    amide_bond = '[NX3][CX3](=O)'
    # Define rules with their associated patterns and predictions
    rules = [
        {   # Rule 1
            'number': 1,
            'description': 'High yield: α-amino acids with additional carboxylate groups in their side chains.',
            'patterns': [
                [amino_group],  # Amino group attached to carbon
                [carboxylic_acid],  # Carboxylic acid group
            ],
            'counts': {
                carboxylic_acid: 2  # At least two carboxylic acid groups
            },
            'prediction': 1
        },
        {   # Rule 2
            'number': 2,
            'description': 'High yield: Aromatic carboxylic acids with an amino group (-NH2) at the para position.',
            'patterns': [
                ['c1ccc(N)cc1'],  # Aromatic ring with amino group at para position
                [carboxylic_acid],  # Carboxylic acid group
            ],
            'prediction': 1
        },
        {   # Rule 3
            'number': 3,
            'description': 'High yield: Aromatic carboxylic acids with electron-withdrawing groups at the para position.',
            'patterns': [
                ['c1ccc([NX3](=O)[OX1-])cc1', 'c1ccc([F,Cl,Br,I])cc1'],  # Nitro group or halogen at para position
                [carboxylic_acid],  # Carboxylic acid group
            ],
            'prediction': 1
        },
        {   # Rule 4
            'number': 4,
            'description': 'Low yield: Aromatic carboxylic acids with electron-donating groups at the para position.',
            'patterns': [
                ['c1ccc([OX2H,OX2][#6])cc1', 'c1ccc([CH3])cc1'],  # Hydroxyl or methyl group at para position
                [carboxylic_acid],  # Carboxylic acid group
            ],
            'prediction': -1
        },
        {   # Rule 5
            'number': 5,
            'description': 'High yield: Nitrogen-containing heteroaromatic carboxylic acids.',
            'patterns': [
                ['[nH]1cccc1', 'n1ccccc1'],  # Pyridine ring
                [carboxylic_acid],  # Carboxylic acid group
            ],
            'prediction': 1
        },
        {   # Rule 6
            'number': 6,
            'description': 'High yield if thiol group (-SH) on aliphatic chain; Low yield if thiol group attached to aromatic ring.',
            'patterns': [
                [thiol_group],  # Thiol group
                [carboxylic_acid],  # Carboxylic acid group
            ],
            'exclude_patterns': [
                [aromatic_ring],  # Exclude if thiol is attached to aromatic ring
            ],
            'prediction': 1
        },
        {   # Rule 7
            'number': 7,
            'description': 'High yield: Long-chain aliphatic carboxylic acids without additional functional groups.',
            'patterns': [
                ['C' * 7],  # Aliphatic chain of at least 7 carbons
                [carboxylic_acid],  # Carboxylic acid group
            ],
            'exclude_patterns': [
                [hydroxyl_group, amino_group, ether_linkage],  # Exclude additional polar groups
            ],
            'prediction': 1
        },
        {   # Rule 8
            'number': 8,
            'description': 'Low yield: Long-chain aliphatic carboxylic acids with additional polar functional groups.',
            'patterns': [
                ['C' * 7],  # Aliphatic chain of at least 7 carbons
                [carboxylic_acid],  # Carboxylic acid group
                [hydroxyl_group, amino_group, ether_linkage],  # Additional polar groups
            ],
            'prediction': -1
        },
        {   # Rule 9
            'number': 9,
            'description': 'Low yield: Modifiers containing aldehyde (-CHO) or ketone (>C=O) groups adjacent to the carboxylic acid.',
            'patterns': [
                [aldehyde_group, ketone_group],  # Aldehyde or ketone group
                [carboxylic_acid],  # Carboxylic acid group
            ],
            'prediction': -1
        },
        {   # Rule 10
            'number': 10,
            'description': 'Low yield: Modifiers with multiple ether linkages (-O-) or polyether chains.',
            'patterns': [
                [ether_linkage],  # Ether linkage
                [carboxylic_acid],  # Carboxylic acid group
            ],
            'count_thresholds': {
                ether_linkage: 2  # At least two ether linkages
            },
            'prediction': -1
        },
        {   # Rule 11
            'number': 11,
            'description': 'High yield if α-amino acids with nitrogen-containing aromatic side chains; Low yield if with non-nitrogenous aromatic side chains.',
            'patterns': [
                [amino_group],  # Amino group attached to alpha carbon
                ['[c][n]'],  # Nitrogen-containing aromatic ring
                [carboxylic_acid],  # Carboxylic acid group
            ],
            'prediction': 1
        },
        {   # Rule 12
            'number': 12,
            'description': 'Low yield: Modifiers with N-acetylated amino groups or blocked amino groups.',
            'patterns': [
                ['[NX3][CX3](=O)'],  # Amide bond (blocked amino group)
            ],
            'prediction': -1
        },
        {   # Rule 13
            'number': 13,
            'description': 'Low yield: Heavily fluorinated aliphatic carboxylic acids.',
            'patterns': [
                [fluorine_atoms],  # Multiple fluorine atoms
                [carboxylic_acid],  # Carboxylic acid group
            ],
            'count_thresholds': {
                fluorine_atoms: 3  # At least three fluorine atoms
            },
            'prediction': -1
        },
        {   # Rule 14
            'number': 14,
            'description': 'High yield: Modifiers with multiple hydroxyl groups (-OH) on aliphatic chains.',
            'patterns': [
                [hydroxyl_group],  # Hydroxyl group
                [carboxylic_acid],  # Carboxylic acid group
            ],
            'count_thresholds': {
                hydroxyl_group: 2  # At least two hydroxyl groups
            },
            'prediction': 1
        },
        {   # Rule 15
            'number': 15,
            'description': 'Low yield: Modifiers with amide linkages or peptide-like structures.',
            'patterns': [
                [amide_group],  # Amide group
            ],
            'prediction': -1
        }
    ]
    # Compile SMARTS patterns
    for rule in rules:
        compiled_patterns = []
        for group in rule.get('patterns', []):
            compiled_group = [Chem.MolFromSmarts(p) for p in group]
            compiled_patterns.append(compiled_group)
        rule['compiled_patterns'] = compiled_patterns
        # Compile exclude patterns if any
        if 'exclude_patterns' in rule:
            compiled_excludes = []
            for group in rule['exclude_patterns']:
                compiled_group = [Chem.MolFromSmarts(p) for p in group]
                compiled_excludes.append(compiled_group)
            rule['compiled_exclude_patterns'] = compiled_excludes
    # Process each SMILES string
    results = []
    for smi in smiles_list:
        mol = Chem.MolFromSmiles(smi)
        if mol is None:
            # If the molecule cannot be parsed, append a row of zeros
            results.append([0]*len(rules))
            continue
        row = []
        for rule in rules:
            try:
                match = True
                # Check exclude patterns if any
                if 'exclude_patterns' in rule:
                    for group in rule['compiled_exclude_patterns']:
                        for pat in group:
                            if mol.HasSubstructMatch(pat):
                                match = False
                                break
                        if not match:
                            break
                    if not match:
                        row.append(0)
                        continue
                # Check required patterns
                for compiled_group in rule['compiled_patterns']:
                    group_match = False
                    for pat in compiled_group:
                        matches = mol.GetSubstructMatches(pat)
                        if matches:
                            # If a count threshold is specified for this pattern
                            if 'counts' in rule and pat.GetSmarts() in rule['counts']:
                                threshold = rule['counts'][pat.GetSmarts()]
                                if len(matches) >= threshold:
                                    group_match = True
                                    break
                            else:
                                group_match = True
                                break
                    if not group_match:
                        match = False
                        break
                if match:
                    row.append(rule['prediction'])
                else:
                    row.append(0)
            except Exception:
                # In case of any error, append 0
                row.append(0)
        results.append(row)
    # Create DataFrame with results
    df = pd.DataFrame(results, columns=[f'Rule {rule['number']}' for rule in rules])
    return df

--------------------------------------------------
    Target Name: yield
    GPT Model: o1-preview-2024-09-12
    ML Model: ETC
    Current_Rules:
    **Start of Rules**

---

- **Rule 1**: Modifiers that are **α-amino acids with side chains containing additional carboxyl groups (-COOH)**, such as **aspartic acid** and **glutamic acid**, tend to result in **high yield**.

  - **Chemical Features**: Amino acids with an **amino group (-NH₂)**, a **carboxyl group (-COOH)** on the α-carbon, and an additional **carboxyl group** in the side chain.

  - **Underlying Physical-Chemical Properties**: Multiple carboxyl groups act as **multidentate ligands**, enhancing coordination with the metal center. This strengthens the catalyst's stability and activity, leading to higher yields.

  - **Examples**:
    - **(2S)-2-aminobutanedioic acid** (Aspartic acid)
    - **(2S)-2-aminopentanedioic acid** (Glutamic acid)

---

- **Rule 2**: Modifiers that are **aromatic carboxylic acids with electron-withdrawing groups at the para position**, such as **nitro (-NO₂)** or **bromomethyl (-CH₂Br)**, tend to result in **high yield**.

  - **Chemical Features**: Aromatic rings bearing a **carboxyl group (-COOH)** and an **electron-withdrawing group** at the para position.

  - **Underlying Physical-Chemical Properties**: Electron-withdrawing groups increase the **acidity** of the carboxyl group, enhancing its ability to coordinate with the metal center. This improved coordination strengthens the catalyst's effectiveness.

  - **Examples**:
    - **4-nitrobenzoic acid**
    - **4-(bromomethyl)benzoic acid**

---

- **Rule 3**: Modifiers that are **aromatic carboxylic acids with electron-donating groups at the para position**, such as **methyl (-CH₃)** or **hydroxy (-OH)** groups, tend to result in **low yield**.

  - **Chemical Features**: Aromatic rings with a **carboxyl group (-COOH)** and an **electron-donating group** at the para position.

  - **Underlying Physical-Chemical Properties**: Electron-donating groups decrease the **acidity** of the carboxyl group, weakening its ability to coordinate with the metal center. This leads to reduced catalyst effectiveness and lower yields.

  - **Examples**:
    - **4-methylbenzoic acid**
    - **3-(4-hydroxyphenyl)propanoic acid**

---

- **Rule 4**: Modifiers that are **heteroaromatic carboxylic acids containing nitrogen atoms**, such as **pyridinecarboxylic acids** and **pyrazolecarboxylic acids**, tend to result in **high yield**.

  - **Chemical Features**: Aromatic rings containing **nitrogen atoms** (heteroatoms) and bearing a **carboxyl group (-COOH)**.

  - **Underlying Physical-Chemical Properties**: Nitrogen atoms offer additional **coordination sites** for metal binding, enhancing metal-ligand interactions and stabilizing the catalyst.

  - **Examples**:
    - **Pyridine-3-carboxylic acid** (Nicotinic acid)
    - **1H-pyrazole-4-carboxylic acid**

---

- **Rule 5**: Modifiers that are **carboxylic acids with thiol groups (-SH) on aliphatic chains** tend to result in **high yield**, while those with thiol groups attached directly to aromatic rings tend to result in **low yield**.

  - **Chemical Features**:
    - **High Yield**: Aliphatic carboxylic acids with a **thiol group (-SH)** on the side chain.
    - **Low Yield**: Aromatic carboxylic acids with a **thiol group (-SH)** attached directly to the aromatic ring.

  - **Underlying Physical-Chemical Properties**:
    - **High Yield**: Thiol groups on aliphatic chains can coordinate effectively without causing catalyst poisoning.
    - **Low Yield**: Thiol groups on aromatic rings may bind too strongly to the metal center, **blocking active sites** and reducing catalytic activity.

  - **Examples**:
    - **High Yield**: **3-sulfanylpropanoic acid**
    - **Low Yield**: **4-sulfanylbenzoic acid**

---

- **Rule 6**: Modifiers that are **long-chain aliphatic carboxylic acids without additional functional groups** tend to result in **high yield**, whereas those with additional polar functional groups tend to result in **low yield**.

  - **Chemical Features**:
    - **High Yield**: Straight-chain aliphatic acids containing only a **carboxyl group (-COOH)**.
    - **Low Yield**: Aliphatic chains with additional **polar functional groups** like **hydroxyl (-OH)** or **amino (-NH₂)** groups.

  - **Underlying Physical-Chemical Properties**:
    - **High Yield**: Minimal steric hindrance allows effective coordination with the metal center.
    - **Low Yield**: Additional polar groups introduce **steric hindrance** and competing interactions, hindering coordination and reducing catalyst efficiency.

  - **Examples**:
    - **High Yield**: **Octanoic acid**
    - **Low Yield**:
      - **7-hydroxyheptanoic acid**
      - **7-aminoheptanoic acid**
      - **8-aminooctanoic acid**

---

- **Rule 7**: Modifiers that are **amino acids with nitrogen-containing aromatic side chains**, such as **tryptophan**, tend to result in **high yield**, whereas those with non-nitrogenous aromatic side chains, such as **phenylalanine**, tend to result in **low yield**.

  - **Chemical Features**:
    - **High Yield**: Amino acids with side chains containing **nitrogenous aromatic rings** (e.g., indole ring).
    - **Low Yield**: Amino acids with side chains containing **non-nitrogenous aromatic rings** (e.g., benzene ring).

  - **Underlying Physical-Chemical Properties**:
    - **High Yield**: Nitrogen atoms provide extra **coordination sites**, enhancing metal binding and catalyst activity.
    - **Low Yield**: Lack of additional coordination sites results in weaker metal-ligand interactions.

  - **Examples**:
    - **High Yield**: **(2R)-2-amino-3-(1H-indol-3-yl)propanoic acid** (Tryptophan)
    - **Low Yield**: **(2S)-2-amino-3-phenylpropanoic acid** (Phenylalanine)

---

- **Rule 8**: Modifiers that are **carboxylic acids with aldehyde (-CHO) or ketone (>C=O) groups adjacent to the carboxyl group** tend to result in **low yield**.

  - **Chemical Features**: Carboxylic acids possessing **carbonyl groups** near the **carboxyl group (-COOH)**.

  - **Underlying Physical-Chemical Properties**: Additional carbonyl groups may lead to **unwanted side reactions** or form **stable chelate rings** with the metal center, altering catalyst activity and decreasing yield.

  - **Examples**:
    - **4-formylbenzoic acid**
    - **5-formyl-2-hydroxybenzoic acid**
    - **4-oxoheptanedioic acid**

---

- **Rule 9**: Modifiers with **multiple ether linkages (-O-) or polyether chains** tend to result in **low yield**.

  - **Chemical Features**: Carboxylic acids with one or more **ether bonds** in their structure, creating flexible, polar chains.

  - **Underlying Physical-Chemical Properties**: Ether oxygen atoms may disrupt coordination between the carboxyl group and the metal center. Increased flexibility and polarity can reduce effective interactions with the catalyst.

  - **Examples**:
    - **2-[2-(2-methoxyethoxy)ethoxy]acetic acid**
    - **3-[2-(2-aminoethoxy)ethoxy]propanoic acid**

---

- **Rule 10**: Modifiers that are **heavily fluorinated aliphatic carboxylic acids** tend to result in **low yield**.

  - **Chemical Features**: Aliphatic carboxylic acids with multiple **fluorine atoms** along the carbon chain.

  - **Underlying Physical-Chemical Properties**: The strong electron-withdrawing effect of fluorine increases the **acidity** but may also enhance **hydrophobicity** and decrease **solubility**. Altered electronic properties can disrupt effective coordination with the metal catalyst.

  - **Example**:
    - **2,2,3,3,4,4,5,5,5-nonafluoropentanoic acid**

---

- **Rule 11**: Modifiers with **blocked or acylated amino groups**, forming **amide linkages**, tend to result in **low yield**.

  - **Chemical Features**: Amino acids where the **amino group is acylated or modified**, creating an **amide bond**.

  - **Underlying Physical-Chemical Properties**: Blocking the amino group reduces available **coordination sites**, weakening metal-ligand interactions necessary for effective catalysis.

  - **Example**:
    - **(2S)-6-acetamido-2-aminohexanoic acid**

---

- **Rule 12**: Modifiers that are **aromatic carboxylic acids with hydroxyl groups at positions other than para**, or with multiple functional groups, tend to result in **low yield**.

  - **Chemical Features**: Aromatic carboxylic acids with **hydroxyl (-OH)** or other groups not optimally positioned for coordination.

  - **Underlying Physical-Chemical Properties**: Misplaced functional groups may cause **steric hindrance** or form **intramolecular hydrogen bonds**, interfering with metal coordination.

  - **Examples**:
    - **2-[(4-hydroxybenzoyl)amino]acetic acid**
    - **5-formyl-2-hydroxybenzoic acid**

---

- **Rule 13**: Modifiers with **multiple hydroxyl groups on aliphatic chains**, such as **sugar acids**, tend to result in **high yield**.

  - **Chemical Features**: Aliphatic chains with several **hydroxyl groups** and a **carboxyl group (-COOH)**.

  - **Underlying Physical-Chemical Properties**: Multiple hydroxyl groups offer additional **hydrogen bonding** and potential **coordination sites**, improving metal-ligand interactions and stabilizing the catalyst.

  - **Example**:
    - **(2R,3S,4R,5R)-2,3,4,5,6-pentahydroxyhexanoic acid**

---

- **Rule 14**: Modifiers with **bulky substituents or multiple heteroatoms** may have varying effects on yield depending on their ability to coordinate effectively.

  - **Chemical Features**: Compounds with complex structures, including multiple rings or heteroatoms, and **carboxyl groups (-COOH)**.

  - **Underlying Physical-Chemical Properties**: Bulky groups may introduce **steric hindrance**, but additional heteroatoms can provide more **coordination sites**. The net effect depends on the balance between these factors.

  - **Examples**:
    - **High Yield**:
      - **1,3-dioxo-2-benzofuran-5-carboxylic acid**
      - **2-oxo-1H-pyridine-4-carboxylic acid**
    - **Low Yield**:
      - **4-pyridin-4-ylbenzoic acid**

---

- **Rule 15**: Modifiers containing **ketone groups within aliphatic chains** can result in **high yield** if other coordinating groups are present.

  - **Chemical Features**: Aliphatic carboxylic acids with **ketone (>C=O)** groups not adjacent to the carboxyl group and additional functional groups that facilitate coordination.

  - **Underlying Physical-Chemical Properties**: The ketone group may not interfere with coordination, and additional coordinating features can enhance catalyst activity.

  - **Example**:
    - **4-(3,4-dimethoxyphenyl)-4-oxobutanoic acid**

---

**End of Rules**

---

These rules have been developed by thoroughly analyzing the provided dataset and identifying patterns between the structural features of the molecular modifiers and the observed reaction yields. Each rule combines multiple sub-structures (functional groups) and considers their underlying physical-chemical properties, such as coordination abilities, electronic effects, steric factors, and potential side reactions.

By applying these rules, one can predict whether a particular molecular modifier is likely to result in a **high** or **low yield** in the radical-mediated remote δ-C(sp³)–H bond functionalization reaction. This approach aids in the rational design and selection of modifiers to optimize and control the reaction outcome.

The rules prioritize coverage of the dataset and maintain a balance between simplicity and complexity. Simple rules with broader coverage help generalize predictions, while more complex rules capture specific nuances that affect the reaction yield. This comprehensive set of rules facilitates a deeper understanding of how different molecular features influence catalytic performance in this chemical transformation.---------------------------------------------------------------


    Current_Matrix:
    Matrix Generator Message:
Rule 1,Rule 2,Rule 3,Rule 4,Rule 5,Rule 5.1,Rule 6,Rule 6.1,Rule 7,Rule 7.1,Rule 8,Rule 9,Rule 10,Rule 11,Rule 12,Rule 13,Rule 14,Rule 15
0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0
1,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0
1,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,1
0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,-1,0,-1,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,-1,0,-1,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,-1,0,-1,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,1
0,0,0,0,1,0,0,-1,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,-1,0,0,0,0,0,-1,0,0,0,0
0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,1
0,0,0,0,0,0,0,-1,0,0,0,0,0,-1,0,0,0,0
0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,1
0,0,0,0,0,0,0,-1,0,0,0,0,0,-1,0,0,0,0
0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,-1,0,0,0,0,0,-1,0,0,0,0
0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0

---------------------------------------------------------------


    Train Accuracy: 0.6; Test Accuracy: 1.0
    Train Support: 0.11428571428571428; Test Support: 0.0
    Train Confidence: 1.0; Test Confidence: 0.5
    Train Lift: 1.9444444444444446; Test Lift: NONE
    Train Leverage: 0.05551020408163266; Test Leverage: NONE
    ----------------------------------------------------------------------------------

    Current Rule Code:
def rule2matrix(smiles_list):

    # Define SMARTS patterns for functional groups based on the rules
    # Carboxylic acid group (-COOH), including both protonated and deprotonated forms
    carboxylic_acid_smarts = '[CX3](=O)[O-,OX1H0-,OX2H1]'
    carboxylic_acid_mol = Chem.MolFromSmarts(carboxylic_acid_smarts)
    
    # Rule 1: High yield for alpha-amino acids with side chains containing additional carboxyl groups (-COOH)
    alpha_amino_acid_smarts = '[NX3;H2][CX4H]([*])[CX3](=O)[O-,OX1H0-,OX2H1]'
    alpha_amino_acid_mol = Chem.MolFromSmarts(alpha_amino_acid_smarts)
    
    # Electron-withdrawing groups at para position (Rule 2)
    ewg_list = '[F,Cl,Br,I,N+](=O)[O-],C#N,S(=O)(=O)[O-,OX1H0-,OX2H1]'
    ewg_para_smarts = f'c1cc([CX3](=O)[O-,OX1H0-,OX2H1])ccc1[{ewg_list}]'
    ewg_para_mol = Chem.MolFromSmarts(ewg_para_smarts)
    
    # Electron-donating groups at para position (Rule 3)
    edg_list = '[O,N,S][H0,H1,H2]'
    edg_para_smarts = f'c1cc([CX3](=O)[O-,OX1H0-,OX2H1])ccc1[{edg_list}]'
    edg_para_mol = Chem.MolFromSmarts(edg_para_smarts)
    
    # Heteroaromatic carboxylic acids containing nitrogen (Rule 4)
    heteroaromatic_nitrogen_carboxylic_acid_smarts = '[n][a][a][a][a][a][CX3](=O)[O-,OX1H0-,OX2H1]'
    heteroaromatic_nitrogen_carboxylic_acid_mol = Chem.MolFromSmarts(heteroaromatic_nitrogen_carboxylic_acid_smarts)

    # Thiol groups on aliphatic chains (Rule 5)
    thiol_aliphatic_smarts = '[CX4][CH2][SX2H]'
    thiol_aliphatic_mol = Chem.MolFromSmarts(thiol_aliphatic_smarts)

    # Thiol groups attached directly to aromatic rings (Rule 5.1)
    thiol_aromatic_smarts = 'c[SX2H]'
    thiol_aromatic_mol = Chem.MolFromSmarts(thiol_aromatic_smarts)

    # Long-chain aliphatic carboxylic acids without additional functional groups (Rule 6)
    long_chain_acid_smarts = '[CX3](=O)[O-,OX1H0-,OX2H1][CH2]{4,}[CH3]'
    long_chain_acid_mol = Chem.MolFromSmarts(long_chain_acid_smarts)

    # Polar functional groups to exclude in Rule 6
    polar_functional_groups_smarts = '[OX2H,NX3H2,SX2H,PX3H2]'
    polar_functional_groups_mol = Chem.MolFromSmarts(polar_functional_groups_smarts)

    # Amino acids with nitrogen-containing aromatic side chains (Rule 7)
    amino_acid_n_aromatic_smarts = '[NX3;H2][CX4H]([CX3](=O)[O-,OX1H0-,OX2H1])[CX4][c][n][c]'
    amino_acid_n_aromatic_mol = Chem.MolFromSmarts(amino_acid_n_aromatic_smarts)

    # Amino acids with non-nitrogenous aromatic side chains (Rule 7.1)
    amino_acid_aromatic_smarts = '[NX3;H2][CX4H]([CX3](=O)[O-,OX1H0-,OX2H1])[CX4][c][c][c]'
    amino_acid_aromatic_mol = Chem.MolFromSmarts(amino_acid_aromatic_smarts)

    # Carboxylic acids with aldehyde or ketone groups adjacent to carboxyl group (Rule 8)
    adjacent_carbonyl_smarts = '[CX3](=O)[CX3](=O)'
    adjacent_carbonyl_mol = Chem.MolFromSmarts(adjacent_carbonyl_smarts)

    # Modifiers with multiple ether linkages or polyether chains (Rule 9)
    multiple_ethers_smarts = '[#6][OX2][#6][OX2][#6]'
    multiple_ethers_mol = Chem.MolFromSmarts(multiple_ethers_smarts)

    # Heavily fluorinated aliphatic carboxylic acids (Rule 10)
    fluorinated_chain_smarts = '[CX4]([F])([F])([F])[CX4]([F])([F])([F])'
    fluorinated_chain_mol = Chem.MolFromSmarts(fluorinated_chain_smarts)

    # Blocked or acylated amino groups forming amide linkages (Rule 11)
    acylated_amino_smarts = '[NX3][CX3](=O)'
    acylated_amino_mol = Chem.MolFromSmarts(acylated_amino_smarts)

    # Modifiers with hydroxyl groups at positions other than para (Rules 12)
    hydroxyl_ortho_smarts = 'c1c(O)ccccc1[CX3](=O)[O-,OX1H0-,OX2H1]'
    hydroxyl_meta_smarts = 'c1cc(O)cccc1[CX3](=O)[O-,OX1H0-,OX2H1]'
    hydroxyl_ortho_mol = Chem.MolFromSmarts(hydroxyl_ortho_smarts)
    hydroxyl_meta_mol = Chem.MolFromSmarts(hydroxyl_meta_smarts)

    # Modifiers with multiple hydroxyl groups on aliphatic chains (Rule 13)
    multiple_hydroxyls_smarts = '[CX3](=O)[O-,OX1H0-,OX2H1][CH2][CH](O)[CH](O)[CH](O)'
    multiple_hydroxyls_mol = Chem.MolFromSmarts(multiple_hydroxyls_smarts)

    # Modifiers with bulky substituents or multiple heteroatoms (Rule 14)
    multiple_heteroatoms_smarts = '[!#6;!#1][!#6;!#1]'
    multiple_heteroatoms_mol = Chem.MolFromSmarts(multiple_heteroatoms_smarts)

    # Modifiers containing ketone groups within aliphatic chains (Rule 15)
    ketone_in_chain_smarts = '[CX3](=O)[#6][#6][CX3](=O)'
    ketone_in_chain_mol = Chem.MolFromSmarts(ketone_in_chain_smarts)

    # Define the rules with their associated patterns and predictions
    rules = [
        {
            'number': 1,
            'description': 'High yield: α-amino acids with side chains containing additional carboxyl groups (-COOH).',
            'patterns': [alpha_amino_acid_mol],
            'pattern_counts': {carboxylic_acid_mol: 2},  # At least two carboxyl groups
            'prediction': 1
        },
        {
            'number': 2,
            'description': 'High yield: Aromatic carboxylic acids with electron-withdrawing groups at the para position.',
            'patterns': [ewg_para_mol],
            'prediction': 1
        },
        {
            'number': 3,
            'description': 'Low yield: Aromatic carboxylic acids with electron-donating groups at the para position.',
            'patterns': [edg_para_mol],
            'prediction': -1
        },
        {
            'number': 4,
            'description': 'High yield: Heteroaromatic carboxylic acids containing nitrogen.',
            'patterns': [heteroaromatic_nitrogen_carboxylic_acid_mol],
            'prediction': 1
        },
        {
            'number': 5,
            'description': 'High yield: Carboxylic acids with thiol groups (-SH) on aliphatic chains.',
            'patterns': [thiol_aliphatic_mol],
            'prediction': 1
        },
        {
            'number': 5.1,
            'description': 'Low yield: Carboxylic acids with thiol groups (-SH) attached directly to aromatic rings.',
            'patterns': [thiol_aromatic_mol],
            'prediction': -1
        },
        {
            'number': 6,
            'description': 'High yield: Long-chain aliphatic carboxylic acids without additional functional groups.',
            'patterns': [long_chain_acid_mol],
            'exclude_patterns': [polar_functional_groups_mol],
            'prediction': 1
        },
        {
            'number': 6.1,
            'description': 'Low yield: Long-chain aliphatic carboxylic acids with additional polar functional groups.',
            'patterns': [polar_functional_groups_mol],
            'prediction': -1
        },
        {
            'number': 7,
            'description': 'High yield: Amino acids with nitrogen-containing aromatic side chains.',
            'patterns': [amino_acid_n_aromatic_mol],
            'prediction': 1
        },
        {
            'number': 7.1,
            'description': 'Low yield: Amino acids with non-nitrogenous aromatic side chains.',
            'patterns': [amino_acid_aromatic_mol],
            'prediction': -1
        },
        {
            'number': 8,
            'description': 'Low yield: Carboxylic acids with aldehyde (-CHO) or ketone (>C=O) groups adjacent to carboxyl group.',
            'patterns': [adjacent_carbonyl_mol],
            'prediction': -1
        },
        {
            'number': 9,
            'description': 'Low yield: Modifiers with multiple ether linkages (-O-) or polyether chains.',
            'patterns': [multiple_ethers_mol],
            'prediction': -1
        },
        {
            'number': 10,
            'description': 'Low yield: Heavily fluorinated aliphatic carboxylic acids.',
            'patterns': [fluorinated_chain_mol],
            'prediction': -1
        },
        {
            'number': 11,
            'description': 'Low yield: Modifiers with blocked or acylated amino groups forming amide linkages.',
            'patterns': [acylated_amino_mol],
            'prediction': -1
        },
        {
            'number': 12,
            'description': 'Low yield: Modifiers with hydroxyl groups at positions other than para, or with multiple functional groups.',
            'patterns': [hydroxyl_ortho_mol, hydroxyl_meta_mol],
            'prediction': -1
        },
        {
            'number': 13,
            'description': 'High yield: Modifiers with multiple hydroxyl groups on aliphatic chains (e.g., sugar acids).',
            'patterns': [multiple_hydroxyls_mol],
            'prediction': 1
        },
        {
            'number': 14,
            'description': 'Modifiers with bulky substituents or multiple heteroatoms with varying effects.',
            'patterns': [multiple_heteroatoms_mol],
            'prediction': 0
        },
        {
            'number': 15,
            'description': 'High yield: Modifiers containing ketone groups within aliphatic chains if other coordinating groups are present.',
            'patterns': [ketone_in_chain_mol],
            'prediction': 1
        }
    ]

    # Initialize results list
    results = []

    # Process each SMILES string
    for smi in smiles_list:
        mol = Chem.MolFromSmiles(smi)
        if mol is None:
            # If the molecule cannot be parsed, append a row of zeros
            results.append([0]*len(rules))
            continue
        row = []
        for rule in rules:
            try:
                match = True
                # Check exclude patterns if any
                if 'exclude_patterns' in rule:
                    for exclude_pat in rule['exclude_patterns']:
                        if mol.HasSubstructMatch(exclude_pat):
                            match = False
                            break
                    if not match:
                        row.append(0)
                        continue
                # Check required patterns
                for pat in rule.get('patterns', []):
                    if not mol.HasSubstructMatch(pat):
                        match = False
                        break
                # Check pattern counts if specified
                if 'pattern_counts' in rule:
                    for pat, min_count in rule['pattern_counts'].items():
                        matches = mol.GetSubstructMatches(pat)
                        if len(matches) < min_count:
                            match = False
                            break
                if match:
                    row.append(rule['prediction'])
                else:
                    row.append(0)
            except Exception:
                # In case of any error, append 0
                row.append(0)
        results.append(row)
    # Create DataFrame with results
    df = pd.DataFrame(results, columns=[f"Rule {rule['number']}" for rule in rules])
    return df

--------------------------------------------------
    Target Name: yield
    GPT Model: o1-preview-2024-09-12
    ML Model: ETC
    Current_Rules:
    **Start of Rules**

---

- **Rule 1**: Modifiers that are **α-amino acids with side-chain carboxyl groups (-COOH)**, such as **aspartic acid** and **glutamic acid**, tend to result in **high yield**.

  - **Chemical Features**: Molecules featuring an **α-amino group (-NH₂)** and a **side-chain carboxyl group (-COOH)**.

  - **Underlying Physical-Chemical Properties**: The presence of multiple carboxyl groups allows for **multidentate coordination** with metal centers, enhancing catalyst stability and activity through stronger metal-ligand interactions.

  - **Examples**:
    - **(2S)-2-aminobutanedioic acid** (Aspartic acid)
    - **(2S)-2-aminopentanedioic acid** (Glutamic acid)

---

- **Rule 2**: Modifiers that are **aromatic carboxylic acids with electron-withdrawing groups (e.g., nitro **(-NO₂)**, halogens **(-Br)**) at the para position** tend to result in **high yield**.

  - **Chemical Features**: An aromatic ring with a **carboxyl group (-COOH)** and an **electron-withdrawing substituent** at the para position.

  - **Underlying Physical-Chemical Properties**: Electron-withdrawing groups increase the **acidity** of the carboxyl group, enhancing its ability to **coordinate with metal ions**. This strengthens metal-ligand interactions, improving catalyst effectiveness.

  - **Examples**:
    - **4-nitrobenzoic acid**
    - **4-(bromomethyl)benzoic acid**

---

- **Rule 3**: Modifiers that are **aromatic carboxylic acids with aldehyde groups (-CHO) at ortho or para positions** tend to result in **low yield**.

  - **Chemical Features**: An aromatic ring bearing a **carboxyl group (-COOH)** and an **aldehyde group (-CHO)** at the ortho or para position.

  - **Underlying Physical-Chemical Properties**: Aldehyde groups may engage in **side reactions** or interfere with metal coordination, disrupting optimal metal-ligand interactions and decreasing catalyst efficiency.

  - **Examples**:
    - **4-formylbenzoic acid**
    - **5-formyl-2-hydroxybenzoic acid**

---

- **Rule 4**: Modifiers that are **aromatic carboxylic acids with amino groups (-NH₂) at the para position** tend to result in **high yield**.

  - **Chemical Features**: An aromatic ring with a **carboxyl group (-COOH)** and an **amino group (-NH₂)** at the para position.

  - **Underlying Physical-Chemical Properties**: The amino group can act as an additional **coordination site** for metal ions, enhancing metal-ligand binding and stabilizing the catalyst, which leads to higher yields.

  - **Example**:
    - **4-aminobenzoic acid**

---

- **Rule 5**: Modifiers that are **α-amino acids with nitrogen-containing aromatic side chains**, such as **tryptophan**, tend to result in **high yield**, whereas those with non-nitrogenous aromatic side chains, like **phenylalanine**, tend to result in **low yield**.

  - **Chemical Features**:
    - **High Yield**: Amino acids whose side chains contain **nitrogenous aromatic rings** (e.g., indole group).
    - **Low Yield**: Amino acids with **non-nitrogenous aromatic rings** (e.g., phenyl group) in their side chains.

  - **Underlying Physical-Chemical Properties**:
    - **High Yield**: Nitrogen atoms in the side chain provide **additional coordination sites**, enhancing metal binding and catalyst performance.
    - **Low Yield**: Lack of extra coordination sites results in weaker metal-ligand interactions.

  - **Examples**:
    - **High Yield**: **(2R)-2-amino-3-(1H-indol-3-yl)propanoic acid** (Tryptophan)
    - **Low Yield**: **(2S)-2-amino-3-phenylpropanoic acid** (Phenylalanine)

---

- **Rule 6**: Modifiers that are **carboxylic acids with ether linkages (-O-) in aliphatic chains** tend to result in **low yield**.

  - **Chemical Features**: Molecules containing **ether linkages (-O-)** along the aliphatic chain, alongside a **carboxyl group (-COOH)**.

  - **Underlying Physical-Chemical Properties**: Ether oxygen atoms can **chelate metal ions**, potentially leading to **undesirable coordination complexes** that interfere with the intended catalytic activity.

  - **Example**:
    - **2-[2-(2-methoxyethoxy)ethoxy]acetic acid**

---

- **Rule 7**: Modifiers that are **long-chain aliphatic carboxylic acids without additional polar functional groups** tend to result in **high yield**.

  - **Chemical Features**: Straight-chain aliphatic acids containing only a **terminal carboxyl group (-COOH)** without other functional groups.

  - **Underlying Physical-Chemical Properties**: Simple, unbranched chains allow for **efficient packing** and minimal steric hindrance, facilitating effective coordination with the metal center.

  - **Example**:
    - **Octanoic acid**

---

- **Rule 8**: Modifiers that are **long-chain aliphatic carboxylic acids with polar functional groups (e.g., hydroxyl **(-OH)**, amino **(-NH₂)**) along the chain** tend to result in **low yield**.

  - **Chemical Features**: Aliphatic chains bearing a **carboxyl group (-COOH)** and additional **polar functional groups** along the chain.

  - **Underlying Physical-Chemical Properties**: Additional polar groups can introduce **steric hindrance** and **competing coordination**, disrupting optimal metal-ligand interactions and decreasing catalyst efficiency.

  - **Examples**:
    - **7-hydroxyheptanoic acid**
    - **7-aminoheptanoic acid**
    - **8-aminooctanoic acid**

---

- **Rule 9**: Modifiers that are **aromatic carboxylic acids with thiol groups (-SH) directly attached to the aromatic ring** tend to result in **low yield**.

  - **Chemical Features**: An aromatic ring with a **carboxyl group (-COOH)** and a **thiol group (-SH)** directly attached to the ring.

  - **Underlying Physical-Chemical Properties**: Thiol groups on aromatic rings may bind too strongly to metal centers, **blocking active sites** and reducing catalytic activity.

  - **Example**:
    - **4-sulfanylbenzoic acid**

---

- **Rule 10**: Modifiers that are **aliphatic carboxylic acids with thiol groups (-SH) on the aliphatic chain** tend to result in **high yield**.

  - **Chemical Features**: Aliphatic chains with both a **carboxyl group (-COOH)** and a **thiol group (-SH)** along the chain.

  - **Underlying Physical-Chemical Properties**: Thiol groups on aliphatic chains can coordinate with metal centers without causing significant catalyst poisoning, enhancing catalytic activity.

  - **Example**:
    - **3-sulfanylpropanoic acid**

---

- **Rule 11**: Modifiers that are **aromatic carboxylic acids with nitrogen-containing heterocycles**, such as **pyridine** or **pyrazole**, tend to result in **high yield**.

  - **Chemical Features**: Aromatic rings incorporating **nitrogen atoms** along with a **carboxyl group (-COOH)**.

  - **Underlying Physical-Chemical Properties**: Nitrogen atoms act as additional **coordination sites** for metal ions, enhancing metal-ligand binding and stabilizing the catalyst, leading to higher yields.

  - **Examples**:
    - **Pyridine-3-carboxylic acid** (Nicotinic acid)
    - **1H-pyrazole-4-carboxylic acid**
    - **2-oxo-1H-pyridine-4-carboxylic acid**

---

- **Rule 12**: Modifiers that are **polyhydroxy carboxylic acids (sugar acids) with multiple hydroxyl groups (-OH)** tend to result in **high yield**.

  - **Chemical Features**: Molecules with an aliphatic chain bearing multiple **hydroxyl groups (-OH)** and a **carboxyl group (-COOH)**.

  - **Underlying Physical-Chemical Properties**: Multiple hydroxyl groups can form extensive **hydrogen-bonding networks** and offer **additional coordination sites**, enhancing metal binding and catalyst stability.

  - **Example**:
    - **(2R,3S,4R,5R)-2,3,4,5,6-pentahydroxyhexanoic acid** (Gluconic acid)

---

- **Rule 13**: Modifiers that are **heavily fluorinated aliphatic carboxylic acids** tend to result in **low yield**.

  - **Chemical Features**: Aliphatic chains where multiple hydrogen atoms are replaced with **fluorine atoms**, alongside a **carboxyl group (-COOH)**.

  - **Underlying Physical-Chemical Properties**: Fluorination increases **hydrophobicity** and can alter the **electronic environment** of the carboxyl group, potentially reducing effective metal coordination due to mismatched polarity.

  - **Example**:
    - **2,2,3,3,4,4,5,5,5-nonafluoropentanoic acid**

---

- **Rule 14**: Modifiers that are **amino acids with acylated or blocked amino groups (forming amide bonds)** tend to result in **low yield**.

  - **Chemical Features**: Amino acids where the **amino group (-NH₂)** is modified to form an **amide linkage (-CONH-)**.

  - **Underlying Physical-Chemical Properties**: Acylation reduces the number of **available coordination sites**, weakening the interaction between the modifier and the metal center.

  - **Examples**:
    - **(2S)-6-acetamido-2-aminohexanoic acid**
    - **2-[[(2S)-2-amino-4-methylsulfanylbutanoyl]amino]acetic acid**

---

- **Rule 15**: Modifiers that are **aromatic carboxylic acids with methoxy groups (-OCH₃) on the aromatic ring or aliphatic chain** can result in **variable yields**, but presence of multiple methoxy groups may lead to **high yield** due to enhanced electron-donating effects.

  - **Chemical Features**: Aromatic rings with **carboxyl group (-COOH)** and one or more **methoxy groups (-OCH₃)**.

  - **Underlying Physical-Chemical Properties**: Methoxy groups are electron-donating and can influence the **electron density** of the aromatic system, potentially enhancing metal coordination.

  - **Example**:
    - **4-(3,4-dimethoxyphenyl)-4-oxobutanoic acid**

---

**End of Rules**

---

These rules have been carefully developed by analyzing the provided dataset and identifying consistent patterns between the structural features of the molecular modifiers and the observed reaction yields in the radical-mediated remote δ-C(sp³)–H bond functionalization of aliphatic alcohols. Each rule combines multiple sub-structures (functional groups) and incorporates underlying physical-chemical properties, such as coordination abilities, electronic effects, steric factors, and potential side reactions.

By applying these rules, one can predict whether a particular molecular modifier is likely to result in a **high** or **low yield** for any given structure that fits the descriptions. This systematic approach facilitates the rational design and selection of modifiers to optimize and control the reaction outcome.

The rules prioritize broader coverage of the dataset while maintaining a balance between simplicity and complexity. Simple rules with higher coverage generalize predictions effectively, whereas more complex rules capture specific nuances that significantly impact the reaction yield. This comprehensive set of rules enhances understanding of how different molecular features influence catalytic performance, aiding in the advancement of this chemical transformation.---------------------------------------------------------------


    Current_Matrix:
    Matrix Generator Message:
Rule 1,Rule 2,Rule 3,Rule 4,Rule 5,Rule 6,Rule 7,Rule 8,Rule 9,Rule 10,Rule 11,Rule 12,Rule 13,Rule 14,Rule 15
0,0,0,0,0,0,0,0,0,0,0,1,0,0,0
1,0,0,0,0,0,0,0,0,0,0,1,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1,0,0,0,0,0,0,0,0,0,0,1,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,1,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,1,0,0,0
0,0,0,0,0,0,0,0,0,0,1,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,1,0,0,0
0,0,0,0,0,0,0,0,-1,1,0,0,0,0,0
0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,1,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0
0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,1,0,0,0,0
0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,1,0,0,0,0,0
0,0,-1,0,0,0,0,0,0,0,0,1,0,0,0
0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0
0,1,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,1,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,1,0,0,0
0,0,0,0,0,0,0,0,0,0,0,1,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0
0,0,0,0,0,0,0,0,0,0,0,1,0,0,0
0,0,0,0,0,0,0,0,0,0,0,1,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0

---------------------------------------------------------------


    Train Accuracy: 0.7428571428571429; Test Accuracy: 0.0
    Train Support: 0.04935064935064935; Test Support: 0.09090909090909091
    Train Confidence: 0.8813131313131314; Test Confidence: 0.5454545454545454
    Train Lift: 1.7728758169934642; Test Lift: NONE
    Train Leverage: 0.016103896103896106; Test Leverage: NONE
    ----------------------------------------------------------------------------------

    Current Rule Code:
def rule2matrix(smiles_list):
    # Define the rules with their associated patterns and predictions
    rules = [
        {
            'number': 1,
            'description': 'High Yield: α-amino acids with side-chain carboxyl groups (-COOH).',
            'patterns': [
                '[NX3][CX4H]',  # α-amino group
            ],
            'counts': {
                '[CX3](=O)[OX2H1]': 2  # At least two carboxylic acid groups
            },
            'prediction': 1
        },
        {
            'number': 2,
            'description': 'High Yield: Aromatic carboxylic acids with electron-withdrawing groups (e.g., nitro (-NO₂), halogens (-Br)) on the aromatic ring.',
            'patterns': [
                '[c][CX3](=O)[OX2H1]',  # Aromatic carboxylic acid
                '[c][F,Cl,Br,I,NX3+](=O)[O-]',  # Halogen or nitro group attached to aromatic ring
            ],
            'prediction': 1
        },
        {
            'number': 3,
            'description': 'Low Yield: Aromatic carboxylic acids with aldehyde groups (-CHO) on the aromatic ring.',
            'patterns': [
                '[c][CX3](=O)[OX2H1]',  # Aromatic carboxylic acid
                '[c][CX3H](=O)',  # Aldehyde group attached to aromatic ring
            ],
            'prediction': -1
        },
        {
            'number': 4,
            'description': 'High Yield: Aromatic carboxylic acids with amino groups (-NH₂) on the aromatic ring.',
            'patterns': [
                '[c][CX3](=O)[OX2H1]',  # Aromatic carboxylic acid
                '[c][NX3H2]',  # Amino group attached to aromatic ring
            ],
            'prediction': 1
        },
        {
            'number': 5,
            'description': 'High Yield: α-amino acids with nitrogen-containing aromatic side chains.',
            'patterns': [
                '[NX3][CX4H][CX3](=O)[OX2H1]',  # α-amino acid backbone
                '[n]',  # Nitrogen-containing aromatic ring
            ],
            'prediction': 1
        },
        {
            'number': 6,
            'description': 'Low Yield: Carboxylic acids with ether linkages (-O-) in aliphatic chains.',
            'patterns': [
                '[CX3](=O)[OX2H1]',  # Carboxylic acid
                '[#6][OX2][#6]',  # Ether linkage in aliphatic chain
            ],
            'prediction': -1
        },
        {
            'number':7,
            'description': 'High Yield: Long-chain aliphatic carboxylic acids without additional polar functional groups.',
            'patterns': [
                '[CX3](=O)[OX2H1]',  # Carboxylic acid
                '[CH2][CH2][CH2][CH2][CH3]',  # Long aliphatic chain
            ],
            'exclude_patterns': ['[NX3]', '[OX2]', '[SX2]'],  # Exclude polar functional groups
            'prediction':1
        },
        {
            'number':8,
            'description': 'Low Yield: Long-chain aliphatic carboxylic acids with polar functional groups along the chain.',
            'patterns': [
                '[CX3](=O)[OX2H1]',  # Carboxylic acid
                '[OX2H]',  # Hydroxyl group
                '[NX3H2]',  # Amino group
                '[SX2H]',  # Thiol group
            ],
            'prediction': -1
        },
        {
            'number':9,
            'description': 'Low Yield: Aromatic carboxylic acids with thiol groups (-SH) directly attached to the aromatic ring.',
            'patterns': [
                '[c][CX3](=O)[OX2H1]',  # Aromatic carboxylic acid
                '[c][SX2H]',  # Thiol group on aromatic ring
            ],
            'prediction': -1
        },
        {
            'number':10,
            'description': 'High Yield: Aliphatic carboxylic acids with thiol groups (-SH) on the aliphatic chain.',
            'patterns': [
                '[CX3](=O)[OX2H1]',  # Carboxylic acid
                '[#6][SX2H]',  # Thiol group in aliphatic chain
            ],
            'prediction': 1
        },
        {
            'number':11,
            'description': 'High Yield: Aromatic carboxylic acids with nitrogen-containing heterocycles.',
            'patterns': [
                '[c][CX3](=O)[OX2H1]',  # Aromatic carboxylic acid
                '[n]',  # Nitrogen atom in ring
            ],
            'prediction': 1
        },
        {
            'number':12,
            'description': 'High Yield: Polyhydroxy carboxylic acids (sugar acids) with multiple hydroxyl groups (-OH).',
            'patterns': [
                '[CX3](=O)[OX2H1]',  # Carboxylic acid
            ],
            'counts': {
                '[OX2H]': 2  # At least two hydroxyl groups
            },
            'prediction': 1
        },
        {
            'number':13,
            'description': 'Low Yield: Heavily fluorinated aliphatic carboxylic acids.',
            'patterns': [
                '[CX3](=O)[OX2H1]',  # Carboxylic acid
            ],
            'counts': {
                '[F]': 3  # At least three fluorine atoms
            },
            'prediction': -1
        },
        {
            'number':14,
            'description': 'Low Yield: Amino acids with acylated or blocked amino groups (forming amide bonds).',
            'patterns': [
                '[NX3][CX3](=O)[#6]',  # Amide bond
                '[NX3][CX4H][CX3](=O)[OX2H1]',  # Amino acid backbone
            ],
            'prediction': -1
        },
        {
            'number':15,
            'description': 'High Yield: Aromatic carboxylic acids with multiple methoxy groups (-OCH₃) on the aromatic ring.',
            'patterns': [
                '[c][CX3](=O)[OX2H1]',  # Aromatic carboxylic acid
            ],
            'counts': {
                '[c][OX2][CH3]': 2  # At least two methoxy groups on aromatic ring
            },
            'prediction': 1
        },
    ]

    # Compile SMARTS patterns
    for rule in rules:
        compiled_patterns = []
        for smarts in rule.get('patterns', []):
            pat = Chem.MolFromSmarts(smarts)
            if pat is None:
                # If the pattern cannot be compiled, skip it
                continue
            compiled_patterns.append(pat)
        rule['compiled_patterns'] = compiled_patterns

        # Compile exclude patterns if any
        exclude_patterns = rule.get('exclude_patterns', [])
        compiled_exclude_patterns = []
        for smarts in exclude_patterns:
            pat = Chem.MolFromSmarts(smarts)
            if pat is None:
                continue
            compiled_exclude_patterns.append(pat)
        rule['compiled_exclude_patterns'] = compiled_exclude_patterns

    # Initialize results list
    results = []

    # Process each SMILES string
    for smi in smiles_list:
        mol = Chem.MolFromSmiles(smi)
        if mol is None:
            # If the molecule cannot be parsed, append a row of zeros
            results.append([0]*len(rules))
            continue
        row = []
        for rule in rules:
            try:
                match = True
                # Check exclude patterns if any
                for pat in rule.get('compiled_exclude_patterns', []):
                    if mol.HasSubstructMatch(pat):
                        match = False
                        break
                if not match:
                    row.append(0)
                    continue
                # Check required patterns
                for pat in rule['compiled_patterns']:
                    if not mol.HasSubstructMatch(pat):
                        match = False
                        break
                if not match:
                    row.append(0)
                    continue
                # Check counts if any
                counts = rule.get('counts', {})
                for smarts, threshold in counts.items():
                    pat = Chem.MolFromSmarts(smarts)
                    if pat is None:
                        continue
                    num_matches = len(mol.GetSubstructMatches(pat))
                    if num_matches < threshold:
                        match = False
                        break
                if match:
                    row.append(rule['prediction'])
                else:
                    row.append(0)
            except:
                # In case of any error, append 0
                row.append(0)
        results.append(row)

    # Create DataFrame with results
    df = pd.DataFrame(results, columns=[f'Rule {rule['number']}' for rule in rules])
    return df

--------------------------------------------------
    Target Name: yield
    GPT Model: o1-preview-2024-09-12
    ML Model: ETC
    Current_Rules:
    **Start of Rules**

---

- **Rule 1**: Modifiers that are **α-amino acids with side-chain carboxyl groups (-COOH)**, such as **aspartic acid** and **glutamic acid**, tend to result in **high yield**.

  - **Chemical Features**: Molecules featuring an **α-amino group (-NH₂)** and a **side-chain carboxyl group (-COOH)**.

  - **Underlying Physical-Chemical Properties**: The additional carboxyl group allows for **bidentate coordination** with metal centers, enhancing catalyst stability and activity through stronger metal-ligand interactions.

  - **Examples**:
    - **(2S)-2-aminobutanedioic acid** (Aspartic acid)
    - **(2S)-2-aminopentanedioic acid** (Glutamic acid)

---

- **Rule 2**: Modifiers that are **aromatic carboxylic acids with electron-withdrawing groups (e.g., nitro **(-NO₂)**, bromo **(-Br)**) at the para position** tend to result in **high yield**.

  - **Chemical Features**: An aromatic ring with a **carboxyl group (-COOH)** and an **electron-withdrawing substituent** at the para position.

  - **Underlying Physical-Chemical Properties**: Electron-withdrawing groups increase the **acidity** of the carboxyl group, enhancing its ability to **coordinate with metal ions** by making the carboxylate more electron-rich for bonding.

  - **Examples**:
    - **4-nitrobenzoic acid**
    - **4-(bromomethyl)benzoic acid**

---

- **Rule 3**: Modifiers that are **aromatic carboxylic acids with electron-donating groups (e.g., methyl **(-CH₃)**, methoxy **(-OCH₃)**) at the para position** tend to result in **low yield**.

  - **Chemical Features**: An aromatic ring with a **carboxyl group (-COOH)** and an **electron-donating substituent** at the para position.

  - **Underlying Physical-Chemical Properties**: Electron-donating groups decrease the **acidity** of the carboxyl group, reducing its ability to effectively **coordinate with metal ions**, leading to weaker metal-ligand interactions.

  - **Examples**:
    - **4-methylbenzoic acid** (p-Toluic acid)
    - **3-(4-hydroxyphenyl)propanoic acid**

---

- **Rule 4**: Modifiers that are **α-amino acids with nitrogen-containing aromatic side chains**, such as **tryptophan**, tend to result in **high yield**, whereas those with non-nitrogenous aromatic side chains, like **phenylalanine**, tend to result in **low yield**.

  - **Chemical Features**:
    - **High Yield**: Amino acids with side chains containing **nitrogenous aromatic rings** (e.g., indole group).
    - **Low Yield**: Amino acids with **non-nitrogenous aromatic rings** (e.g., phenyl group).

  - **Underlying Physical-Chemical Properties**:
    - **High Yield**: Nitrogen atoms offer additional **coordination sites** for metal ions, enhancing catalyst performance.
    - **Low Yield**: Lack of extra coordination sites leads to weaker metal-ligand interactions.

  - **Examples**:
    - **High Yield**: **(2R)-2-amino-3-(1H-indol-3-yl)propanoic acid** (Tryptophan)
    - **Low Yield**: **(2S)-2-amino-3-phenylpropanoic acid** (Phenylalanine)

---

- **Rule 5**: Modifiers that are **aromatic carboxylic acids with aldehyde groups (-CHO) at the ortho or para positions** tend to result in **low yield**.

  - **Chemical Features**: An aromatic ring bearing a **carboxyl group (-COOH)** and an **aldehyde group (-CHO)** at the ortho or para position.

  - **Underlying Physical-Chemical Properties**: Aldehyde groups may engage in **side reactions** or interfere with metal coordination, disrupting optimal metal-ligand interactions and decreasing catalyst efficiency.

  - **Examples**:
    - **4-formylbenzoic acid**
    - **5-formyl-2-hydroxybenzoic acid**

---

- **Rule 6**: Modifiers that are **aliphatic carboxylic acids with ether linkages (-O-) along the chain** tend to result in **low yield**.

  - **Chemical Features**: Molecules containing **ether linkages (-O-)** within the aliphatic chain and a **carboxyl group (-COOH)**.

  - **Underlying Physical-Chemical Properties**: Ether oxygen atoms may form **unintended coordination** with metal ions, leading to complexes that interfere with catalytic activity.

  - **Example**:
    - **2-[2-(2-methoxyethoxy)ethoxy]acetic acid**

---

- **Rule 7**: Modifiers that are **long-chain aliphatic carboxylic acids without additional polar functional groups** tend to result in **high yield**.

  - **Chemical Features**: Straight-chain aliphatic acids with a **terminal carboxyl group (-COOH)** and no other functional groups along the chain.

  - **Underlying Physical-Chemical Properties**: These chains provide minimal steric hindrance, allowing efficient **metal-ligand coordination** and enhancing catalytic activity.

  - **Example**:
    - **Octanoic acid**

---

- **Rule 8**: Modifiers that are **long-chain aliphatic carboxylic acids with additional polar functional groups (e.g., hydroxyl **(-OH)**, amino **(-NH₂)**) along the chain** tend to result in **low yield**.

  - **Chemical Features**: Aliphatic acids with a **carboxyl group (-COOH)** and extra **polar groups** on the chain.

  - **Underlying Physical-Chemical Properties**: Additional polar groups can cause **steric hindrance** or form **competing interactions** with metal ions, reducing catalytic efficiency.

  - **Examples**:
    - **7-hydroxyheptanoic acid**
    - **7-aminoheptanoic acid**
    - **8-aminooctanoic acid**

---

- **Rule 9**: Modifiers that are **aromatic carboxylic acids with thiol groups (-SH) directly attached to the aromatic ring** tend to result in **low yield**, while those with thiol groups on aliphatic chains tend to result in **high yield**.

  - **Chemical Features**:
    - **Low Yield**: Aromatic rings with **-SH** directly attached.
    - **High Yield**: Aliphatic chains with **-SH** groups.

  - **Underlying Physical-Chemical Properties**:
    - **Low Yield**: Aromatic thiols may strongly bind to metal centers, causing **catalyst poisoning**.
    - **High Yield**: Aliphatic thiols can enhance **metal coordination** without inhibiting active sites.

  - **Examples**:
    - **Low Yield**: **4-sulfanylbenzoic acid**
    - **High Yield**: **3-sulfanylpropanoic acid**

---

- **Rule 10**: Modifiers that are **aromatic carboxylic acids with nitrogen-containing heterocycles**, such as **pyridine or pyrazole rings**, tend to result in **high yield**.

  - **Chemical Features**: Aromatic systems incorporating **nitrogen heterocycles** and a **carboxyl group (-COOH)**.

  - **Underlying Physical-Chemical Properties**: Nitrogen atoms act as additional **coordination sites**, enhancing metal-ligand interactions and catalyst stability.

  - **Examples**:
    - **Pyridine-3-carboxylic acid** (Nicotinic acid)
    - **1H-pyrazole-4-carboxylic acid**
    - **2-oxo-1H-pyridine-4-carboxylic acid**

---

- **Rule 11**: Modifiers that are **polyhydroxy carboxylic acids (sugar acids) with multiple hydroxyl groups (-OH)** tend to result in **high yield**.

  - **Chemical Features**: Aliphatic acids with several **hydroxyl groups (-OH)** and a **carboxyl group (-COOH)**.

  - **Underlying Physical-Chemical Properties**: Multiple hydroxyl groups provide additional **hydrogen bonding** and potential **coordination sites**, stabilizing metal complexes.

  - **Example**:
    - **(2R,3S,4R,5R)-2,3,4,5,6-pentahydroxyhexanoic acid** (Gluconic acid)

---

- **Rule 12**: Modifiers that are **heavily fluorinated aliphatic carboxylic acids** tend to result in **low yield**.

  - **Chemical Features**: Aliphatic chains where many hydrogen atoms are replaced with **fluorine atoms**, along with a **carboxyl group (-COOH)**.

  - **Underlying Physical-Chemical Properties**: Fluorination increases **hydrophobicity** and can reduce effective **metal-ligand coordination** due to altered electronic properties.

  - **Example**:
    - **2,2,3,3,4,4,5,5,5-nonafluoropentanoic acid**

---

- **Rule 13**: Modifiers that are **amino acids with acylated or blocked amino groups (forming amide bonds)** tend to result in **low yield**.

  - **Chemical Features**: Amino acids where the **amino group (-NH₂)** is modified to form an **amide linkage (-CONH-)**.

  - **Underlying Physical-Chemical Properties**: Acylation reduces available **coordination sites**, weakening interactions with metal centers and decreasing catalytic effectiveness.

  - **Examples**:
    - **(2S)-6-acetamido-2-aminohexanoic acid**
    - **2-[[(2S)-2-amino-4-methylsulfanylbutanoyl]amino]acetic acid**

---

- **Rule 14**: Modifiers that are **aromatic carboxylic acids with multiple methoxy groups (-OCH₃) on the aromatic ring** tend to result in **high yield**, while those with single methoxy groups may result in **variable yields**.

  - **Chemical Features**: Aromatic rings with a **carboxyl group (-COOH)** and one or more **methoxy groups (-OCH₃)**.

  - **Underlying Physical-Chemical Properties**: Multiple methoxy groups can enhance **electron donation**, potentially increasing **metal coordination** if properly positioned.

  - **Examples**:
    - **High Yield**: **4-(3,4-dimethoxyphenyl)-4-oxobutanoic acid**
    - **Variable Yield**: Compounds with fewer methoxy groups

---

- **Rule 15**: Modifiers that are **aromatic carboxylic acids with fused nitrogen-containing rings** may result in **low yield** due to **steric hindrance** affecting metal coordination.

  - **Chemical Features**: Complex fused aromatic systems with **nitrogen atoms** and a **carboxyl group (-COOH)**.

  - **Underlying Physical-Chemical Properties**: Bulky structures can hinder effective **metal-ligand interactions**, reducing catalytic performance.

  - **Example**:
    - **4-pyridin-4-ylbenzoic acid**

---

**End of Rules**---------------------------------------------------------------


    Current_Matrix:
    Matrix Generator Message:
Rule 1,Rule 2,Rule 3,Rule 4,Rule 5,Rule 6,Rule 7,Rule 8,Rule 9,Rule 10,Rule 11,Rule 12,Rule 13,Rule 14,Rule 15
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0

---------------------------------------------------------------


    Train Accuracy: 0.5428571428571428; Test Accuracy: 0.0
    Train Support: 0.05714285714285714; Test Support: 0.0
    Train Confidence: 1.0; Test Confidence: 0.5
    Train Lift: 2.0016339869281046; Test Lift: NONE
    Train Leverage: 0.028571428571428574; Test Leverage: NONE
    ----------------------------------------------------------------------------------

    Current Rule Code:
def rule2matrix(smiles_list):
    # Define SMARTS patterns
    patterns = {
        'carboxylic_acid': Chem.MolFromSmarts('[CX3](=O)[OX1H1]'),
        'amino_acid_backbone': Chem.MolFromSmarts('[NX3;H2][CX4H]([#6])[CX3](=O)[OX1H1]'),
        'side_chain_carboxylic_acid': Chem.MolFromSmarts('[CX3](=O)[OX1H1]'),
        'nitrogen_aromatic_ring': Chem.MolFromSmarts('[n]1cccc1'),
        'aromatic_ring': Chem.MolFromSmarts('c1ccccc1'),
        # Adjusted patterns as per suggestions
        'ewg_para_benzene': Chem.MolFromSmarts('c1cc([F,Cl,Br,I,N+](=O)[O-])ccc1C(=O)[OX1H1]'),
        'edg_para_benzene': Chem.MolFromSmarts('c1cc([CH3,OCH3,OH])ccc1C(=O)[OX1H1]'),
        'aldehyde_ortho_para': Chem.MolFromSmarts('c1c([CX3H1](=O))ccc1C(=O)[OX1H1]'),
        'ether_linkage_aliphatic_chain': Chem.MolFromSmarts('[CX4][OX2][CX4]'),
        'long_aliphatic_chain': Chem.MolFromSmarts('[CX4H2][CX4H2][CX4H2][CX4H2][CX4H2]'),
        'polar_groups_aliphatic_chain': Chem.MolFromSmarts('[CX4][OX2H,NX3H2]'),
        'thiol_aromatic': Chem.MolFromSmarts('[c][SX2H]'),
        'thiol_aliphatic': Chem.MolFromSmarts('[CX4][SX2H]'),
        'nitrogen_heterocycle_carboxylic_acid': Chem.MolFromSmarts('[n][c]C(=O)[OX1H1]'),
        'polyhydroxy_acid': Chem.MolFromSmarts('[CX4]([OX2H])[CX4]([OX2H])[CX4](C(=O)[OX1H1])'),
        'heavily_fluorinated_chain': Chem.MolFromSmarts('[CX4](F)(F)(F)[CX4](F)(F)(F)[CX3](=O)[OX1H1]'),
        'acylated_amino_group': Chem.MolFromSmarts('[NX3][CX3](=O)[#6]'),
        'multiple_methoxy_groups': Chem.MolFromSmarts('c1(c(c(c(c(c1OC)OC)OC)OC)OC)C(=O)[OX1H1]'),
        'fused_nitrogen_rings': Chem.MolFromSmarts('[n][c]1ccccc1C(=O)[OX1H1]'),
    }

    # Initialize rules list
    rules = []

    # Rule 1: High Yield (1)
    def rule1(mol):
        # Check for amino acid backbone with side-chain carboxylic acid
        matches = mol.GetSubstructMatches(patterns['amino_acid_backbone'])
        if matches:
            for match in matches:
                backbone_atoms = set(match)
                alpha_carbon_idx = match[1]
                alpha_carbon = mol.GetAtomWithIdx(alpha_carbon_idx)
                side_chain_atoms = set()
                visited = set()
                to_visit = [alpha_carbon]
                while to_visit:
                    atom = to_visit.pop()
                    if atom.GetIdx() not in backbone_atoms and atom.GetIdx() not in visited:
                        visited.add(atom.GetIdx())
                        side_chain_atoms.add(atom.GetIdx())
                        neighbors = atom.GetNeighbors()
                        to_visit.extend(neighbors)
                if side_chain_atoms:
                    side_chain_submol = Chem.PathToSubmol(mol, list(side_chain_atoms))
                    if side_chain_submol.HasSubstructMatch(patterns['carboxylic_acid']):
                        return 1
        return 0
    rules.append({'number': 1, 'function': rule1})

    # Rule 2: High Yield (1)
    def rule2(mol):
        if mol.HasSubstructMatch(patterns['ewg_para_benzene']):
            return 1
        return 0
    rules.append({'number': 2, 'function': rule2})

    # Rule 3: Low Yield (-1)
    def rule3(mol):
        if mol.HasSubstructMatch(patterns['edg_para_benzene']):
            return -1
        return 0
    rules.append({'number': 3, 'function': rule3})

    # Rule 4: High Yield (1) or Low Yield (-1)
    def rule4(mol):
        matches = mol.GetSubstructMatches(patterns['amino_acid_backbone'])
        if matches:
            for match in matches:
                backbone_atoms = set(match)
                alpha_carbon_idx = match[1]
                alpha_carbon = mol.GetAtomWithIdx(alpha_carbon_idx)
                side_chain_atoms = set()
                visited = set()
                to_visit = [alpha_carbon]
                while to_visit:
                    atom = to_visit.pop()
                    if atom.GetIdx() not in backbone_atoms and atom.GetIdx() not in visited:
                        visited.add(atom.GetIdx())
                        side_chain_atoms.add(atom.GetIdx())
                        neighbors = atom.GetNeighbors()
                        to_visit.extend(neighbors)
                if side_chain_atoms:
                    side_chain_submol = Chem.PathToSubmol(mol, list(side_chain_atoms))
                    if side_chain_submol.HasSubstructMatch(patterns['nitrogen_aromatic_ring']):
                        return 1  # High yield
                    elif side_chain_submol.HasSubstructMatch(patterns['aromatic_ring']):
                        return -1  # Low yield
        return 0
    rules.append({'number': 4, 'function': rule4})

    # Rule 5: Low Yield (-1)
    def rule5(mol):
        if mol.HasSubstructMatch(patterns['aldehyde_ortho_para']):
            return -1
        return 0
    rules.append({'number': 5, 'function': rule5})

    # Rule 6: Low Yield (-1)
    def rule6(mol):
        if mol.HasSubstructMatch(patterns['ether_linkage_aliphatic_chain']) and mol.HasSubstructMatch(patterns['carboxylic_acid']):
            return -1
        return 0
    rules.append({'number': 6, 'function': rule6})

    # Rule 7: High Yield (1)
    def rule7(mol):
        if mol.HasSubstructMatch(patterns['long_aliphatic_chain']) and mol.HasSubstructMatch(patterns['carboxylic_acid']):
            if not mol.HasSubstructMatch(patterns['polar_groups_aliphatic_chain']):
                return 1
        return 0
    rules.append({'number': 7, 'function': rule7})

    # Rule 8: Low Yield (-1)
    def rule8(mol):
        if mol.HasSubstructMatch(patterns['long_aliphatic_chain']) and mol.HasSubstructMatch(patterns['carboxylic_acid']):
            if mol.HasSubstructMatch(patterns['polar_groups_aliphatic_chain']):
                return -1
        return 0
    rules.append({'number': 8, 'function': rule8})

    # Rule 9: High Yield (1) or Low Yield (-1)
    def rule9(mol):
        if mol.HasSubstructMatch(patterns['thiol_aromatic']):
            return -1  # Low yield
        elif mol.HasSubstructMatch(patterns['thiol_aliphatic']):
            return 1  # High yield
        return 0
    rules.append({'number': 9, 'function': rule9})

    # Rule 10: High Yield (1)
    def rule10(mol):
        if mol.HasSubstructMatch(patterns['nitrogen_heterocycle_carboxylic_acid']):
            return 1
        return 0
    rules.append({'number': 10, 'function': rule10})

    # Rule 11: High Yield (1)
    def rule11(mol):
        if mol.HasSubstructMatch(patterns['polyhydroxy_acid']):
            return 1
        return 0
    rules.append({'number': 11, 'function': rule11})

    # Rule 12: Low Yield (-1)
    def rule12(mol):
        if mol.HasSubstructMatch(patterns['heavily_fluorinated_chain']):
            return -1
        return 0
    rules.append({'number': 12, 'function': rule12})

    # Rule 13: Low Yield (-1)
    def rule13(mol):
        if mol.HasSubstructMatch(patterns['amino_acid_backbone']) and mol.HasSubstructMatch(patterns['acylated_amino_group']):
            return -1
        return 0
    rules.append({'number': 13, 'function': rule13})

    # Rule 14: High Yield (1)
    def rule14(mol):
        if mol.HasSubstructMatch(patterns['multiple_methoxy_groups']):
            return 1
        else:
            return 0
    rules.append({'number': 14, 'function': rule14})

    # Rule 15: Low Yield (-1)
    def rule15(mol):
        if mol.HasSubstructMatch(patterns['fused_nitrogen_rings']):
            return -1
        return 0
    rules.append({'number': 15, 'function': rule15})

    # Initialize results list
    results = []

    # Process each SMILES string
    for smi in smiles_list:
        mol = Chem.MolFromSmiles(smi)
        if mol is None:
            # If the molecule cannot be parsed, append a row of zeros
            results.append([0] * len(rules))
            continue
        row = []
        for rule in rules:
            try:
                result = rule['function'](mol)
                row.append(result)
            except Exception:
                # In case of any error, append 0
                row.append(0)
        results.append(row)

    # Create DataFrame with results
    df = pd.DataFrame(results, columns=[f'Rule {rule['number']}' for rule in rules])

    return df
--------------------------------------------------
    Target Name: yield
    GPT Model: o1-preview-2024-09-12
    ML Model: ETC
    Current_Rules:
    **Start of Rules**

---

- **Rule 1**: Modifiers that are **α-amino acids with an additional side-chain carboxyl group (-COOH)**, such as **aspartic acid** and **glutamic acid**, result in **high yield**.

  - **Chemical Features**: Molecules containing an **α-amino group (-NH₂)** and a **β- or γ-carboxyl group (-COOH)** on the side chain.

  - **Underlying Physical-Chemical Properties**: The presence of two carboxyl groups allows for **chelation** with metal ions, forming stable five- or six-membered rings. This enhances the catalyst's stability and activity through strong metal-ligand coordination.

  - **Examples**:
    - **(2S)-2-aminobutanedioic acid** (Aspartic acid)
    - **(2S)-2-aminopentanedioic acid** (Glutamic acid)

---

- **Rule 2**: Modifiers that are **long-chain aliphatic carboxylic acids without additional functional groups** result in **high yield**; those with additional polar functional groups along the chain result in **low yield**.

  - **Chemical Features**:
    - **High Yield**: Straight-chain aliphatic acids with a **terminal carboxyl group (-COOH)** and no other substituents.
    - **Low Yield**: Aliphatic acids with **hydroxyl (-OH)** or **amino (-NH₂)** groups along the chain.

  - **Underlying Physical-Chemical Properties**:
    - **High Yield**: Minimal steric hindrance and hydrophobic chains allow effective **metal-ligand coordination**.
    - **Low Yield**: Additional polar groups may introduce **steric hindrance** or compete with the carboxyl group for metal binding, disrupting catalytic activity.

  - **Examples**:
    - **High Yield**: **Octanoic acid**
    - **Low Yield**: **7-hydroxyheptanoic acid**, **7-aminoheptanoic acid**, **8-aminooctanoic acid**

---

- **Rule 3**: Modifiers that are **aromatic carboxylic acids with electron-withdrawing groups (EWGs) other than aldehydes at the para position** result in **high yield**, while those with electron-donating groups (EDGs) result in **low yield**.

  - **Chemical Features**:
    - **High Yield**: An aromatic ring with a **carboxyl group (-COOH)** and a **strong EWG** (e.g., **nitro (-NO₂)**, **halogens**) at the para position.
    - **Low Yield**: An aromatic ring with a **carboxyl group** and an **EDG** (e.g., **methyl (-CH₃)**, **hydroxyl (-OH)**) at the para position.

  - **Underlying Physical-Chemical Properties**:
    - **High Yield**: Electron-withdrawing substituents increase the **acidity** of the carboxyl group, enhancing its ability to **coordinate** with metal ions. This leads to stronger metal-ligand interactions and improved catalytic activity.
    - **Low Yield**: Electron-donating substituents decrease the acidity of the carboxyl group, weakening metal-ligand coordination and reducing catalyst efficiency.

  - **Examples**:
    - **High Yield**:
      - **4-nitrobenzoic acid**
      - **4-(bromomethyl)benzoic acid**
    - **Low Yield**:
      - **4-methylbenzoic acid**
      - **3-(4-hydroxyphenyl)propanoic acid**

---

- **Rule 4**: Modifiers that are **aromatic carboxylic acids with aldehyde groups (-CHO) at the ortho or para positions** result in **low yield**.

  - **Chemical Features**: An aromatic ring bearing a **carboxyl group (-COOH)** and an **aldehyde group (-CHO)** at the ortho or para position.

  - **Underlying Physical-Chemical Properties**: Aldehyde groups are susceptible to **oxidation** and may form unstable complexes with metal ions or undergo **side reactions**, interfering with optimal metal-ligand coordination and reducing catalyst effectiveness.

  - **Examples**:
    - **4-formylbenzoic acid**
    - **5-formyl-2-hydroxybenzoic acid**

---

- **Rule 5**: Modifiers that are **small, nitrogen-containing heterocyclic carboxylic acids** result in **high yield**, whereas those with additional bulky aromatic groups result in **low yield**.

  - **Chemical Features**:
    - **High Yield**: Molecules featuring a **mono-cyclic nitrogenous heteroaromatic ring** (e.g., **pyridine**, **pyrazole**) with a **carboxyl group (-COOH)**.
    - **Low Yield**: Molecules with additional aromatic rings or bulky substituents attached to the heterocycle.

  - **Underlying Physical-Chemical Properties**:
    - **High Yield**: Nitrogen atoms provide additional **coordination sites** for metal ions, enhancing metal-ligand binding and catalyst stability.
    - **Low Yield**: Bulky substituents cause **steric hindrance**, impairing effective coordination with the metal center.

  - **Examples**:
    - **High Yield**:
      - **Pyridine-3-carboxylic acid** (Nicotinic acid)
      - **1H-pyrazole-4-carboxylic acid**
    - **Low Yield**:
      - **4-pyridin-4-ylbenzoic acid**

---

- **Rule 6**: Modifiers that are **α-amino acids with nitrogen-containing aromatic side chains**, such as **tryptophan**, result in **high yield**, whereas those with non-nitrogenous aromatic side chains, like **phenylalanine**, result in **low yield**.

  - **Chemical Features**:
    - **High Yield**: Amino acids with side chains containing **nitrogenous heterocycles** (e.g., **indole ring**).
    - **Low Yield**: Amino acids with side chains containing **non-nitrogenous aromatic rings** (e.g., **phenyl group**).

  - **Underlying Physical-Chemical Properties**:
    - **High Yield**: Nitrogen atoms in the side chain offer additional **coordination sites**, enhancing metal-ligand interactions.
    - **Low Yield**: Lack of extra coordination sites results in weaker metal-ligand binding.

  - **Examples**:
    - **High Yield**:
      - **(2R)-2-amino-3-(1H-indol-3-yl)propanoic acid** (Tryptophan)
    - **Low Yield**:
      - **(2S)-2-amino-3-phenylpropanoic acid** (Phenylalanine)

---

- **Rule 7**: Modifiers containing **multiple hydroxyl groups (-OH)** along with a **carboxyl group (-COOH)**, such as **polyhydroxy aliphatic acids (sugar acids)**, result in **high yield**.

  - **Chemical Features**: Molecules with several **hydroxyl groups** and a **carboxyl group**, resembling sugar acids.

  - **Underlying Physical-Chemical Properties**: Multiple hydroxyl groups provide extra **hydrogen bonding** and **coordination sites** for metal ions, forming stable complexes and enhancing catalytic activity through effective chelation.

  - **Example**:
    - **(2R,3S,4R,5R)-2,3,4,5,6-pentahydroxyhexanoic acid** (Gluconic acid)

---

- **Rule 8**: Modifiers that are **aliphatic carboxylic acids with ether linkages (-O-) along the chain** result in **low yield**.

  - **Chemical Features**: Molecules featuring **ether linkages (-O-)** within the aliphatic chain and a **carboxyl group (-COOH)**.

  - **Underlying Physical-Chemical Properties**: Ether oxygen atoms may form unintended **coordinate bonds** with metal ions, leading to inactive complexes that interfere with catalytic activity. The flexibility of the ether linkages can also disrupt optimal metal-ligand coordination.

  - **Example**:
    - **2-[2-(2-methoxyethoxy)ethoxy]acetic acid**

---

- **Rule 9**: Modifiers that are **heavily fluorinated aliphatic carboxylic acids** result in **low yield**.

  - **Chemical Features**: Aliphatic chains where multiple hydrogen atoms are replaced with **fluorine atoms**, accompanied by a **carboxyl group (-COOH)**.

  - **Underlying Physical-Chemical Properties**: Fluorination increases **electronegativity** and **hydrophobicity**, reducing the carboxyl group's ability to coordinate with metal ions. Strong **C-F bonds** also decrease electron density available for metal-ligand interactions.

  - **Example**:
    - **2,2,3,3,4,4,5,5,5-nonafluoropentanoic acid**

---

- **Rule 10**: Modifiers with **thiol groups (-SH)** on **aliphatic chains** result in **high yield**, while those with thiol groups directly attached to an aromatic ring result in **low yield**.

  - **Chemical Features**:
    - **High Yield**: Aliphatic acids with **thiol groups (-SH)** on the side chain.
    - **Low Yield**: Aromatic acids with **thiol groups** attached directly to the ring.

  - **Underlying Physical-Chemical Properties**:
    - **High Yield**: Thiol groups on aliphatic chains can form **soft acid-base interactions** with metal ions without causing catalyst poisoning.
    - **Low Yield**: Aromatic thiol groups may bind too strongly or irreversibly to metal centers, leading to **catalyst deactivation**.

  - **Examples**:
    - **High Yield**: **3-sulfanylpropanoic acid**
    - **Low Yield**: **4-sulfanylbenzoic acid**

---

- **Rule 11**: Modifiers that are **acylated amino acids (with blocked amino groups)** result in **low yield**.

  - **Chemical Features**: Amino acids where the **amino group (-NH₂)** is modified to form an **amide linkage (-CONH-)**, such as through **acetylation**.

  - **Underlying Physical-Chemical Properties**: Acylation of the amino group removes a potential **coordination site** for metal ions, reducing binding affinity to the metal center and weakening catalyst performance.

  - **Example**:
    - **(2S)-6-acetamido-2-aminohexanoic acid**

---

- **Rule 12**: Modifiers that are **aromatic carboxylic acids with bulky substituents directly attached to the ring** result in **low yield**.

  - **Chemical Features**: Aromatic carboxylic acids with large or bulky groups attached to the ring, especially near the **carboxyl group (-COOH)**.

  - **Underlying Physical-Chemical Properties**: **Steric hindrance** from bulky substituents can obstruct effective **metal-ligand coordination**, impairing catalyst efficiency.

  - **Example**:
    - **4-pyridin-4-ylbenzoic acid**

---

- **Rule 13**: Modifiers with **keto groups (=O) adjacent to the carboxylate group** in an aromatic system result in **high yield**.

  - **Chemical Features**: Aromatic compounds where a **keto group (=O)** is positioned next to a **carboxyl group (-COOH)**, enabling **bidentate coordination**.

  - **Underlying Physical-Chemical Properties**: Proximity of keto and carboxyl groups allows the molecule to act as a **chelating ligand**, forming stable five-membered rings with metal ions. This enhances metal-ligand interactions and boosts catalytic performance.

  - **Example**:
    - **1,3-dioxo-2-benzofuran-5-carboxylic acid**

---

- **Rule 14**: Modifiers containing **methoxy groups (-OCH₃) on the aromatic ring** in addition to other functional groups can result in **high yield**, especially if these enhance electron density and coordination with metal ions.

  - **Chemical Features**: An aromatic ring with multiple **methoxy groups (-OCH₃)** and a **carboxyl group (-COOH)**, sometimes with additional functional groups that facilitate coordination.

  - **Underlying Physical-Chemical Properties**: Methoxy groups increase electron density on the aromatic ring, potentially enhancing **π-backbonding** and **metal-ligand interactions**.

  - **Example**:
    - **4-(3,4-dimethoxyphenyl)-4-oxobutanoic acid**

---

- **Rule 15**: Modifiers that are **α-amino acids with side chains containing sulfur**, such as **methionine derivatives**, result in **low yield** if the sulfur is part of a blocked or hindered functional group.

  - **Chemical Features**: Amino acids with **sulfur-containing side chains** where the sulfur is not available for coordination due to steric hindrance or functionalization.

  - **Underlying Physical-Chemical Properties**: Blocked or sterically hindered sulfur atoms cannot effectively coordinate with metal ions, reducing catalyst activity.

  - **Example**:
    - **2-[[(2S)-2-amino-4-methylsulfanylbutanoyl]amino]acetic acid**

---

**End of Rules**---------------------------------------------------------------


    Current_Matrix:
    Matrix Generator Message:
Rule 1,Rule 2,Rule 2.1,Rule 3,Rule 3.1,Rule 4,Rule 5
0,0,0,0,0,0,0
1,0,-1,0,0,0,0
0,0,0,0,-1,0,0
1,0,0,0,0,0,0
0,0,-1,0,0,0,0
0,0,0,0,-1,0,0
0,0,-1,0,0,0,0
0,0,-1,0,0,0,0
0,0,0,0,-1,0,0
0,0,-1,0,0,0,0
0,0,0,0,-1,0,0
0,0,0,0,0,0,0
0,0,0,0,-1,0,0
1,0,0,0,0,0,0
0,0,-1,0,0,0,0
1,0,0,0,0,0,0
0,0,0,0,-1,0,0
0,0,0,0,-1,0,0
0,0,0,0,0,0,0
0,0,0,0,-1,-1,0
0,0,0,0,-1,-1,0
0,0,0,0,-1,0,0
0,0,0,0,-1,0,0
0,0,0,0,-1,0,0
1,0,0,0,0,0,0
0,0,0,0,0,0,0
0,0,0,0,0,0,0
0,0,0,0,0,0,0
0,0,-1,0,0,0,0
0,0,0,0,0,0,0
0,0,-1,0,0,0,0
0,0,0,0,0,0,0
0,0,-1,0,0,0,0
0,0,0,0,0,0,0
1,0,-1,0,0,0,0
0,0,-1,0,0,0,0

---------------------------------------------------------------


    Train Accuracy: 0.6285714285714286; Test Accuracy: 0.0
    Train Support: 0.1; Test Support: 0.0
    Train Confidence: 0.7083333333333334; Test Confidence: 0.5
    Train Lift: 1.3773148148148149; Test Lift: NONE
    Train Leverage: -0.002857142857142848; Test Leverage: NONE
    ----------------------------------------------------------------------------------

    Current Rule Code:
def rule2matrix(smiles_list):
    # Define SMARTS patterns for functional groups
    # Carboxylic acid group (-COOH)
    carboxylic_acid = '[CX3](=O)[OX1H0,H1]'
    # Primary amino group (-NH2)
    primary_amino = '[NX3H2]'
    # Amino acid backbone (alpha-amino acid)
    amino_acid_backbone = '[NX3][CH1][CX3](=O)[OX1H0,H1]'
    # Side-chain carboxylic acid (additional -COOH)
    side_chain_carboxylic_acid = '[CX3](=O)[OX1H0,H1]'
    # Hydroxyl group (-OH)
    hydroxyl_group = '[OX2H]'
    # Amino group (-NH2 or -NH-)
    amino_group = '[NX3H2,NX3H1]'
    # Long aliphatic chain (five or more carbons)
    long_aliphatic_chain = '[C]CCCC'
    # Halogens
    halogen = '[F,Cl,Br,I]'
    # Aromatic carboxylic acid
    aromatic_carboxylic_acid = 'c[C](=O)[O]'
    # Aldehyde group (-CHO)
    aldehyde_group = '[CX3H]=O'
    # Electron-withdrawing groups (EWGs) other than aldehydes
    ewg = ['[NX3+(=O)[O-]]', '[F,Cl,Br,I]', '[CX4](F)(F)F', '[C]#[N]']
    # Electron-donating groups (EDGs)
    edg = ['[OX2H]', '[OX2][CH3]', '[NX3;H2,H1][#6]']
    # Nitrogen heterocycle with carboxylic acid
    nitrogen_heterocycle_carboxylic_acid = '[n][c,N][c,N][c,N][c,N][c,N][C](=O)[O]'
    # Bulky aromatic group
    bulky_aromatic_group = 'c1ccccc1[c]'
    # Thiol group (-SH)
    thiol_group = '[SX2H]'
    # Ether linkage (-O-)
    ether_linkage = '[#6][OX2][#6]'
    # Fluorinated chain
    fluorinated_chain = '[C,F](F)(F)F'
    # Keto group adjacent to carboxylate in aromatic system
    keto_carboxylate_aromatic = 'c1ccc([CX3](=O)[O])c([CX3]=O)c1'
    # Methoxy group on aromatic ring
    methoxy_aromatic = 'c[OX2][CH3]'
    # Acylated amino group (-CONH-)
    acylated_amino_group = '[NX3][CX3](=O)'
    # Multiple hydroxyl groups with carboxylic acid (sugar acids)
    polyhydroxy_acid = '[CX3](=O)[OX2H][C]([OX2H])[C]([OX2H])[C]([OX2H])'

    # Define the rules with their associated patterns and predictions
    rules = [
        {
            'number': 1,
            'description': 'High Yield: α-amino acids with an additional side-chain carboxyl group (-COOH)',
            'patterns': [
                [amino_acid_backbone],  # Amino acid backbone
            ],
            'count_threshold': {carboxylic_acid: 2},  # At least two carboxylic acid groups
            'prediction': 1
        },
        {
            'number': 2,
            'description': 'High Yield: Long-chain aliphatic carboxylic acids without additional functional groups',
            'patterns': [
                [carboxylic_acid],
                [long_aliphatic_chain],
            ],
            'exclude_patterns': [
                [hydroxyl_group, amino_group],  # Exclude polar functional groups
            ],
            'prediction': 1
        },
        {
            'number': 2.1,
            'description': 'Low Yield: Long-chain aliphatic carboxylic acids with additional polar functional groups along the chain',
            'patterns': [
                [carboxylic_acid],
                [long_aliphatic_chain],
                [hydroxyl_group, amino_group],  # Presence of polar functional groups
            ],
            'prediction': -1
        },
        {
            'number': 3,
            'description': 'High Yield: Aromatic carboxylic acids with electron-withdrawing groups (EWGs) other than aldehydes at the para position',
            'patterns': [
                [aromatic_carboxylic_acid],
                ewg,  # EWGs
            ],
            'exclude_patterns': [
                [aldehyde_group],  # Exclude aldehydes
            ],
            'prediction': 1
        },
        {
            'number': 3.1,
            'description': 'Low Yield: Aromatic carboxylic acids with electron-donating groups (EDGs)',
            'patterns': [
                [aromatic_carboxylic_acid],
                edg,  # EDGs
            ],
            'prediction': -1
        },
        {
            'number': 4,
            'description': 'Low Yield: Aromatic carboxylic acids with aldehyde groups (-CHO) at the ortho or para positions',
            'patterns': [
                [aromatic_carboxylic_acid],
                [aldehyde_group],
            ],
            'prediction': -1
        },
        {
            'number': 5,
            'description': 'High Yield: Small nitrogen-containing heterocyclic carboxylic acids',
            'patterns': [
                [nitrogen_heterocycle_carboxylic_acid],
            ],
            'exclude_patterns': [
                [bulky_aromatic_group],  # Exclude molecules with bulky aromatic groups
            ],
            'prediction': 1
        },
        # Add additional rules as per the provided list
    ]

    # Compile SMARTS patterns
    for rule in rules:
        compiled_patterns = []
        for group in rule.get('patterns', []):
            compiled_group = [Chem.MolFromSmarts(p) if isinstance(p, str) else Chem.MolFromSmarts(s) for p in group for s in ([p] if isinstance(p, str) else p)]
            compiled_patterns.append(compiled_group)
        rule['compiled_patterns'] = compiled_patterns
        # Compile exclude patterns if any
        if 'exclude_patterns' in rule:
            compiled_excludes = []
            for group in rule['exclude_patterns']:
                compiled_group = [Chem.MolFromSmarts(p) if isinstance(p, str) else Chem.MolFromSmarts(s) for p in group for s in ([p] if isinstance(p, str) else p)]
                compiled_excludes.append(compiled_group)
            rule['compiled_exclude_patterns'] = compiled_excludes

    # Initialize results list
    results = []

    # Process each SMILES string
    for smi in smiles_list:
        mol = Chem.MolFromSmiles(smi)
        if mol is None:
            # If the molecule cannot be parsed, append a row of zeros
            results.append([0]*len(rules))
            continue
        row = []
        for rule in rules:
            try:
                match = True
                # Check exclude patterns if any
                if 'exclude_patterns' in rule:
                    for group in rule['compiled_exclude_patterns']:
                        for pat in group:
                            if mol.HasSubstructMatch(pat):
                                match = False
                                break
                        if not match:
                            break
                    if not match:
                        row.append(0)
                        continue
                # Check required patterns
                for compiled_group in rule['compiled_patterns']:
                    group_match = False
                    for pat in compiled_group:
                        matches = mol.GetSubstructMatches(pat)
                        if matches:
                            # If a count threshold is specified for this pattern
                            if 'count_threshold' in rule and any(pat_smarts == key for key in rule['count_threshold'] for pat_smarts in [Chem.MolToSmarts(pat)]):
                                threshold = rule['count_threshold'][Chem.MolToSmarts(pat)]
                                if len(matches) >= threshold:
                                    group_match = True
                                    break
                            else:
                                group_match = True
                                break
                    if not group_match:
                        match = False
                        break
                if match:
                    row.append(rule['prediction'])
                else:
                    row.append(0)
            except Exception as e:
                # In case of any error, append 0
                row.append(0)
        results.append(row)
    # Create DataFrame with results
    df = pd.DataFrame(results, columns=[f'Rule {rule['number']}' for rule in rules])
    return df

--------------------------------------------------
    Target Name: yield
    GPT Model: o1-preview-2024-09-12
    ML Model: ETC
    Current_Rules:
    **Start of Rules**

---

- **Rule 1**: Modifiers that are **α-amino acids with side-chain carboxyl groups (-COOH)**, such as **aspartic acid** and **glutamic acid**, result in **high yield**.

  - **Chemical Features**: Molecules containing an **α-amino group (-NH₂)** attached to the central (alpha) carbon and at least one additional **carboxyl group (-COOH)** on the side chain.

  - **Underlying Physical-Chemical Properties**: The presence of multiple carboxyl groups allows for **chelation** with metal ions, forming stable complexes through **bidentate coordination**. This enhances the catalyst's stability and activity by creating strong metal-ligand interactions.

  - **Examples**:
    - **(2S)-2-aminobutanedioic acid** (Aspartic Acid)
    - **(2S)-2-aminopentanedioic acid** (Glutamic Acid)

---

- **Rule 2**: Modifiers that are **long-chain aliphatic carboxylic acids without additional functional groups** result in **high yield**; those with additional polar groups along the chain result in **low yield**.

  - **Chemical Features**:
    - **High Yield**: Straight-chain aliphatic acids with a **terminal carboxyl group (-COOH)** and no other substituents.
    - **Low Yield**: Aliphatic acids with **hydroxyl (-OH)**, **amino (-NH₂)**, or other polar groups along the carbon chain.

  - **Underlying Physical-Chemical Properties**:
    - **High Yield**: Unsubstituted chains allow for **flexible coordination** with metal centers and minimize steric hindrance, facilitating effective binding.
    - **Low Yield**: Polar groups introduce **steric hindrance** or may **interfere with metal coordination**, disrupting optimal interactions.

  - **Examples**:
    - **High Yield**: **Octanoic acid**
    - **Low Yield**:
      - **7-hydroxyheptanoic acid**
      - **7-aminoheptanoic acid**
      - **8-aminooctanoic acid**

---

- **Rule 3**: Modifiers that are **aromatic carboxylic acids with electron-withdrawing groups (EWGs) at the para position** result in **high yield**; those with electron-donating groups (EDGs) result in **low yield**.

  - **Chemical Features**:
    - **High Yield**: Aromatic rings with a **carboxyl group (-COOH)** and a strong **EWG** (e.g., **nitro (-NO₂)**, **halogens**) at the **para position** relative to the carboxyl group.
    - **Low Yield**: Aromatic rings with a **carboxyl group** and an **EDG** (e.g., **methyl (-CH₃)**, **hydroxyl (-OH)**, **methoxy (-OCH₃)**) at the para position.

  - **Underlying Physical-Chemical Properties**:
    - **High Yield**: EWGs increase the **acidity** of the carboxyl group by stabilizing the negative charge on the conjugate base, enhancing its ability to **coordinate** with metal ions.
    - **Low Yield**: EDGs decrease acidity by donating electron density, weakening metal-ligand coordination due to reduced ability to stabilize negative charges.

  - **Examples**:
    - **High Yield**:
      - **4-nitrobenzoic acid**
      - **4-(bromomethyl)benzoic acid**
    - **Low Yield**:
      - **4-methylbenzoic acid**
      - **4-hydroxybenzoic acid**

---

- **Rule 4**: Modifiers that are **nitrogen-containing heterocyclic carboxylic acids without bulky substituents** result in **high yield**.

  - **Chemical Features**: Molecules featuring a **nitrogenous heteroaromatic ring** (e.g., **pyridine**, **pyrazole**) with a **carboxyl group (-COOH)** and minimal additional substituents.

  - **Underlying Physical-Chemical Properties**: Nitrogen atoms in heterocycles act as additional **coordination sites**, enhancing metal-ligand binding through **donor-acceptor interactions**. This stabilizes the catalyst by forming strong complexes with metal ions.

  - **Examples**:
    - **Pyridine-3-carboxylic acid** (Nicotinic Acid)
    - **1H-pyrazole-4-carboxylic acid**

---

- **Rule 5**: Modifiers that are **α-amino acids with nitrogen-containing aromatic side chains** result in **high yield**; those with non-nitrogenous aromatic side chains result in **low yield**.

  - **Chemical Features**:
    - **High Yield**: Amino acids with side chains containing **nitrogenous heterocycles** (e.g., **indole ring** in tryptophan).
    - **Low Yield**: Amino acids with side chains containing **non-nitrogenous aromatics** (e.g., **phenyl ring** in phenylalanine).

  - **Underlying Physical-Chemical Properties**:
    - **High Yield**: The nitrogen in the side chain provides additional **coordination sites**, enhancing metal binding and catalyst activity.
    - **Low Yield**: Lack of extra coordination sites leads to weaker metal-ligand interactions, reducing catalyst effectiveness.

  - **Examples**:
    - **High Yield**: **(2R)-2-amino-3-(1H-indol-3-yl)propanoic acid** (Tryptophan)
    - **Low Yield**: **(2S)-2-amino-3-phenylpropanoic acid** (Phenylalanine)

---

- **Rule 6**: Modifiers that are **aliphatic carboxylic acids with thiol groups (-SH) on the chain** result in **high yield**; those with thiol groups directly attached to an aromatic ring result in **low yield**.

  - **Chemical Features**:
    - **High Yield**: Aliphatic chains with **thiol groups** and a **carboxyl group (-COOH)**.
    - **Low Yield**: Aromatic rings bearing **thiol groups** directly attached to the ring structure.

  - **Underlying Physical-Chemical Properties**:
    - **High Yield**: Thiol groups on aliphatic chains can form beneficial **soft-soft interactions** with metal ions without causing catalyst poisoning.
    - **Low Yield**: Thiol groups on aromatic rings may bind too strongly or irreversibly to metal centers, leading to **catalyst deactivation**.

  - **Examples**:
    - **High Yield**: **3-sulfanylpropanoic acid**
    - **Low Yield**: **4-sulfanylbenzoic acid**

---

- **Rule 7**: Modifiers that are **perfluorinated aliphatic carboxylic acids** result in **low yield**.

  - **Chemical Features**: Aliphatic acids where multiple hydrogens are replaced with **fluorine atoms**, significantly increasing the fluorine content.

  - **Underlying Physical-Chemical Properties**: High fluorination increases **hydrophobicity** and exerts a strong **electron-withdrawing inductive effect**, reducing electron density on the carboxylate oxygen and hindering effective metal coordination.

  - **Example**:
    - **2,2,3,3,4,4,5,5,5-nonafluoropentanoic acid**

---

- **Rule 8**: Modifiers that are **aromatic carboxylic acids with aldehyde groups (-CHO) adjacent to the carboxyl group** result in **low yield**.

  - **Chemical Features**: Aromatic rings bearing both a **carboxyl group (-COOH)** and an **aldehyde group (-CHO)** in close proximity (ortho or para positions).

  - **Underlying Physical-Chemical Properties**: Aldehyde groups can undergo **side reactions** or form undesired complexes with metal ions, leading to **catalyst deactivation** and reduced yield.

  - **Examples**:
    - **4-formylbenzoic acid**
    - **5-formyl-2-hydroxybenzoic acid**

---

- **Rule 9**: Modifiers that are **aliphatic carboxylic acids with ether linkages (-O-) within the chain** result in **low yield**.

  - **Chemical Features**: Aliphatic acids featuring **ether linkages** in the carbon chain and a terminal **carboxyl group (-COOH)**.

  - **Underlying Physical-Chemical Properties**: Ether oxygens introduce **flexibility** and can disrupt effective **metal-ligand coordination**. They may also form unwanted interactions with metal ions, reducing catalyst activity.

  - **Example**:
    - **2-[2-(2-methoxyethoxy)ethoxy]acetic acid**

---

- **Rule 10**: Modifiers that are **polyhydroxy aliphatic acids (sugar acids)** result in **high yield**.

  - **Chemical Features**: Molecules with multiple **hydroxyl groups (-OH)** and a **carboxyl group (-COOH)**, such as **gluconic acid**.

  - **Underlying Physical-Chemical Properties**: Multiple hydroxyl groups enhance **hydrogen bonding** and offer additional **coordination sites**, forming stable complexes with metal ions and improving catalyst performance.

  - **Example**:
    - **(2R,3S,4R,5R)-2,3,4,5,6-pentahydroxyhexanoic acid** (Gluconic Acid)

---

- **Rule 11**: Modifiers that are **acylated amino acids (amide derivatives)** result in **low yield**.

  - **Chemical Features**: Amino acids where the **amino group (-NH₂)** is modified into an **amide group (-CONH-)**, such as through **acetylation** or peptide bond formation.

  - **Underlying Physical-Chemical Properties**: Acylation reduces the availability of the **amino group** for metal coordination, limiting binding interactions and decreasing catalyst efficiency.

  - **Example**:
    - **(2S)-6-acetamido-2-aminohexanoic acid**

---

- **Rule 12**: Modifiers that are **aromatic carboxylic acids with bulky substituents** or **extended conjugation** result in **low yield**.

  - **Chemical Features**: Aromatic acids with large substituents or additional aromatic rings that increase **steric bulk** or **conjugation**.

  - **Underlying Physical-Chemical Properties**: **Steric hindrance** from bulky groups impedes effective metal-ligand coordination. Extended conjugation can delocalize electron density, **weakening interactions** with metal centers.

  - **Examples**:
    - **4-pyridin-4-ylbenzoic acid**
    - **(2S)-2-amino-3-(4-hydroxyphenyl)propanoic acid** (Tyrosine)

---

- **Rule 13**: Modifiers containing **adjacent keto (=O) and carboxyl (-COOH) groups** on an aromatic system result in **high yield**.

  - **Chemical Features**: Aromatic compounds with a **keto group** and a **carboxyl group** positioned to allow for **bidentate chelation**.

  - **Underlying Physical-Chemical Properties**: The proximity of keto and carboxyl groups enables the formation of stable **five- or six-membered chelate rings** with metal ions, enhancing catalyst performance through strong coordination.

  - **Example**:
    - **1,3-dioxo-2-benzofuran-5-carboxylic acid**

---

- **Rule 14**: Modifiers that are **aromatic carboxylic acids with methoxy groups (-OCH₃) and additional carbonyl groups within the side chain** result in **high yield**.

  - **Chemical Features**: Aromatic rings with **methoxy substituents**, a **carboxyl group (-COOH)**, and additional **carbonyl groups** (e.g., ketones) in the side chain.

  - **Underlying Physical-Chemical Properties**: Methoxy groups can **activate** the aromatic ring toward coordination, while additional carbonyl groups provide extra **coordination sites**. This enhances metal-ligand interactions and stabilizes the catalyst.

  - **Example**:
    - **4-(3,4-dimethoxyphenyl)-4-oxobutanoic acid**

---

- **Rule 15**: Modifiers that are **aliphatic dicarboxylic acids with keto groups** result in **low yield**.

  - **Chemical Features**: Aliphatic chains containing two **carboxyl groups (-COOH)** and an internal **keto group (-C=O)**.

  - **Underlying Physical-Chemical Properties**: The internal keto group can interfere with **metal coordination** by altering the geometry and electronic distribution, leading to less effective catalyst performance.

  - **Example**:
    - **4-oxoheptanedioic acid**

---

**End of Rules**---------------------------------------------------------------


    Current_Matrix:
    Matrix Generator Message:
Rule 1,Rule 2,Rule 2.1,Rule 3,Rule 3.1,Rule 4,Rule 5,Rule 5.1,Rule 6,Rule 6.1,Rule 7,Rule 8,Rule 9,Rule 10,Rule 11,Rule 12,Rule 13,Rule 14,Rule 15
0,0,0,0,-1,0,0,0,0,0,0,0,0,1,0,0,1,0,0
1,0,0,0,-1,0,0,0,0,0,0,0,0,1,0,0,1,0,-1
0,0,0,1,-1,0,0,0,0,0,0,0,0,0,0,-1,1,0,0
1,0,0,0,-1,0,0,0,0,0,0,0,0,1,0,0,1,0,-1
0,0,-1,0,-1,0,0,0,0,0,0,0,0,0,0,0,1,0,0
0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,-1,1,0,0
0,0,-1,0,-1,0,0,0,0,0,0,0,0,0,0,0,1,0,0
0,0,-1,0,-1,0,0,0,0,0,0,0,0,1,0,-1,1,0,0
0,0,0,0,-1,1,0,0,0,0,0,0,0,0,0,0,1,0,0
0,0,0,0,-1,0,0,0,0,0,0,0,0,1,0,0,1,0,0
0,0,0,0,-1,0,0,0,0,-1,0,0,0,0,0,-1,1,0,0
0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,1,0,0
0,0,0,0,-1,1,0,0,0,0,0,0,0,0,0,-1,1,0,0
0,0,0,0,-1,0,0,-1,0,0,0,0,0,0,0,-1,1,0,0
0,0,0,1,-1,0,0,0,0,0,-1,0,0,0,0,0,1,0,0
0,0,0,0,-1,1,1,0,0,0,0,0,0,0,0,-1,1,0,0
0,0,0,0,-1,1,0,0,0,0,0,0,0,0,0,0,1,0,0
0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,-1,1,0,0
0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,1,0,0
0,0,0,0,-1,0,0,0,0,0,0,-1,0,1,0,-1,1,0,0
0,0,0,0,-1,0,0,0,0,0,0,-1,0,0,0,-1,1,0,0
0,0,0,1,-1,0,0,0,0,0,0,0,0,0,0,-1,1,0,0
0,0,0,0,-1,1,0,0,0,0,0,0,0,0,0,0,1,0,0
0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,-1,1,0,0
0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,1,0,0
0,0,0,0,-1,1,0,0,0,0,0,0,0,0,0,0,1,0,0
0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,-1,1,0,0
0,0,0,0,-1,0,0,0,0,0,0,0,0,1,0,-1,1,0,0
0,0,0,0,-1,0,0,0,0,0,0,0,0,1,0,0,1,0,-1
0,0,0,1,-1,0,0,0,0,0,-1,0,0,0,0,0,1,0,0
0,0,-1,0,-1,0,0,0,0,0,0,0,0,1,0,0,1,0,0
0,0,0,0,-1,0,0,0,0,0,0,0,0,1,0,-1,1,0,0
0,0,-1,0,-1,0,0,0,0,0,0,0,0,0,0,0,1,0,0
0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,1,0,0
0,0,-1,0,-1,0,0,0,0,0,0,0,0,0,-1,0,1,0,0
0,0,-1,0,-1,0,0,0,0,0,0,0,0,0,0,0,1,0,0

---------------------------------------------------------------


    Train Accuracy: 0.7428571428571429; Test Accuracy: 0.0
    Train Support: 0.1; Test Support: 0.0
    Train Confidence: 0.8111111111111112; Test Confidence: 0.5
    Train Lift: 1.6216412490922298; Test Lift: NONE
    Train Leverage: 0.025714285714285717; Test Leverage: NONE
    ----------------------------------------------------------------------------------

    Current Rule Code:
def rule2matrix(smiles_list):
    # Define SMARTS patterns for functional groups
    # General patterns
    carboxylic_acid = '[CX3](=O)[OX1H0-,OX2H1]'
    amino_group = '[NX3;H2,H1]'
    alpha_amino_acid = '[NX3;H2,H1][CX4H][CX3](=O)[OX1H0-,OX2H1]'
    aliphatic_chain = '[C;X4H2][C;X4H2][C;X4H2][C;X4H2]'
    hydroxyl_group = '[OX2H]'
    thiol_group = '[SX2H]'
    ether_linkage = '[CX4][OX2][CX4]'
    aromatic_ring = '[a]'
    nitro_group = '[NX3](=O)[O-]'
    halogen = '[F,Cl,Br,I]'
    keto_group = '[CX3](=O)[#6]'
    aldehyde_group = '[CX3H](=O)'
    nitrogen_heterocycle = '[n]'
    aromatic_nitrogen = '[n]'
    perfluorinated_chain = '[CX4]([F])([F])[F]'
    acylated_amino_group = '[NX3][CX3](=O)'
    
    # Rules list
    rules = [
        {
            'number': 1,
            'description': 'High yield: α-amino acids with side-chain carboxyl groups (-COOH).',
            'patterns': [alpha_amino_acid, carboxylic_acid],
            'count_threshold': {carboxylic_acid: 2},  # At least two carboxylic acid groups
            'prediction': 1
        },
        {
            'number': 2,
            'description': 'High yield: Long-chain aliphatic carboxylic acids without additional functional groups.',
            'patterns': [aliphatic_chain, carboxylic_acid],
            'exclude_patterns': [hydroxyl_group, amino_group, thiol_group, ether_linkage],
            'prediction': 1
        },
        {
            'number': 2.1,
            'description': 'Low yield: Aliphatic acids with additional polar groups along the chain.',
            'patterns': [aliphatic_chain, carboxylic_acid],
            'include_patterns': [hydroxyl_group, amino_group, thiol_group, ether_linkage],
            'prediction': -1
        },
        {
            'number': 3,
            'description': 'High yield: Aromatic carboxylic acids with electron-withdrawing groups (EWGs) at the para position.',
            'patterns': [carboxylic_acid],
            'include_patterns': [nitro_group, halogen],
            'prediction': 1
        },
        {
            'number': 3.1,
            'description': 'Low yield: Aromatic carboxylic acids with electron-donating groups (EDGs) at the para position.',
            'patterns': [carboxylic_acid],
            'include_patterns': [hydroxyl_group, '[OX2][CX4]', amino_group],
            'prediction': -1
        },
        {
            'number': 4,
            'description': 'High yield: Nitrogen-containing heterocyclic carboxylic acids without bulky substituents.',
            'patterns': [carboxylic_acid, nitrogen_heterocycle],
            'prediction': 1
        },
        {
            'number': 5,
            'description': 'High yield: α-amino acids with nitrogen-containing aromatic side chains.',
            'patterns': [alpha_amino_acid, aromatic_nitrogen],
            'prediction': 1
        },
        {
            'number': 5.1,
            'description': 'Low yield: α-amino acids with non-nitrogenous aromatic side chains.',
            'patterns': [alpha_amino_acid, '[c]'],
            'exclude_patterns': [aromatic_nitrogen],
            'prediction': -1
        },
        {
            'number': 6,
            'description': 'High yield: Aliphatic carboxylic acids with thiol groups (-SH) on the chain.',
            'patterns': [aliphatic_chain, carboxylic_acid, thiol_group],
            'exclude_patterns': [aromatic_ring],
            'prediction': 1
        },
        {
            'number': 6.1,
            'description': 'Low yield: Thiol groups directly attached to an aromatic ring.',
            'patterns': [thiol_group, aromatic_ring],
            'prediction': -1
        },
        {
            'number': 7,
            'description': 'Low yield: Perfluorinated aliphatic carboxylic acids.',
            'patterns': [perfluorinated_chain, carboxylic_acid],
            'prediction': -1
        },
        {
            'number': 8,
            'description': 'Low yield: Aromatic carboxylic acids with aldehyde groups (-CHO) adjacent to the carboxyl group.',
            'patterns': [carboxylic_acid, aldehyde_group],
            'prediction': -1
        },
        {
            'number': 9,
            'description': 'Low yield: Aliphatic carboxylic acids with ether linkages (-O-) within the chain.',
            'patterns': [aliphatic_chain, carboxylic_acid, ether_linkage],
            'exclude_patterns': [aromatic_ring],
            'prediction': -1
        },
        {
            'number': 10,
            'description': 'High yield: Polyhydroxy aliphatic acids (sugar acids).',
            'patterns': [carboxylic_acid],
            'count_threshold': {hydroxyl_group: 2},
            'prediction': 1
        },
        {
            'number': 11,
            'description': 'Low yield: Acylated amino acids (amide derivatives).',
            'patterns': [alpha_amino_acid, acylated_amino_group],
            'prediction': -1
        },
        {
            'number': 12,
            'description': 'Low yield: Aromatic carboxylic acids with bulky substituents or extended conjugation.',
            'patterns': [carboxylic_acid],
            'include_patterns': ['[c][c][c][c][c][c]'],
            'prediction': -1
        },
        {
            'number': 13,
            'description': 'High yield: Aromatic compounds with adjacent keto (=O) and carboxyl (-COOH) groups.',
            'patterns': [carboxylic_acid, keto_group],
            'prediction': 1
        },
        {
            'number': 14,
            'description': 'High yield: Aromatic carboxylic acids with methoxy groups (-OCH₃) and additional carbonyl groups within the side chain.',
            'patterns': [carboxylic_acid, '[OX2][CX4][H3C]', keto_group],
            'prediction': 1
        },
        {
            'number': 15,
            'description': 'Low yield: Aliphatic dicarboxylic acids with keto groups.',
            'patterns': [carboxylic_acid, keto_group],
            'count_threshold': {carboxylic_acid: 2},
            'exclude_patterns': [aromatic_ring],
            'prediction': -1
        }
    ]
    
    # Compile patterns
    for rule in rules:
        compiled_patterns = []
        for p in rule['patterns']:
            if isinstance(p, list):
                compiled_group = [Chem.MolFromSmarts(sub_p) for sub_p in p]
                compiled_patterns.append(compiled_group)
            else:
                compiled_patterns.append(Chem.MolFromSmarts(p))
        rule['compiled_patterns'] = compiled_patterns
        # Compile include patterns if any
        if 'include_patterns' in rule:
            compiled_include_patterns = [Chem.MolFromSmarts(p) for p in rule['include_patterns']]
            rule['compiled_include_patterns'] = compiled_include_patterns
        # Compile exclude patterns if any
        if 'exclude_patterns' in rule:
            compiled_exclude_patterns = [Chem.MolFromSmarts(p) for p in rule['exclude_patterns']]
            rule['compiled_exclude_patterns'] = compiled_exclude_patterns
    
    # Initialize results
    results = []
    
    # Process each SMILES string
    for smi in smiles_list:
        mol = Chem.MolFromSmiles(smi)
        if mol is None:
            # If molecule cannot be parsed, append a row of zeros
            results.append([0]*len(rules))
            continue
        row = []
        for rule in rules:
            try:
                match = True
                # Check exclude patterns
                if 'compiled_exclude_patterns' in rule:
                    for pat in rule['compiled_exclude_patterns']:
                        if mol.HasSubstructMatch(pat):
                            match = False
                            break
                    if not match:
                        row.append(0)
                        continue
                # Check required patterns
                for pat in rule['compiled_patterns']:
                    if isinstance(pat, list):
                        # At least one pattern in the group should match
                        group_match = False
                        for sub_pat in pat:
                            if mol.HasSubstructMatch(sub_pat):
                                group_match = True
                                break
                        if not group_match:
                            match = False
                            break
                    else:
                        if not mol.HasSubstructMatch(pat):
                            match = False
                            break
                if not match:
                    row.append(0)
                    continue
                # Check include patterns (at least one must match)
                if 'compiled_include_patterns' in rule:
                    include_match = False
                    for pat in rule['compiled_include_patterns']:
                        if mol.HasSubstructMatch(pat):
                            include_match = True
                            break
                    if not include_match:
                        match = False
                if not match:
                    row.append(0)
                    continue
                # Check count thresholds if any
                if 'count_threshold' in rule:
                    for smarts, threshold in rule['count_threshold'].items():
                        sub_pat = Chem.MolFromSmarts(smarts)
                        matches = mol.GetSubstructMatches(sub_pat)
                        if len(matches) < threshold:
                            match = False
                            break
                if match:
                    row.append(rule['prediction'])
                else:
                    row.append(0)
            except:
                row.append(0)
        results.append(row)
    # Create DataFrame
    df = pd.DataFrame(results, columns=[f'Rule {rule['number']}' for rule in rules])
    return df
--------------------------------------------------